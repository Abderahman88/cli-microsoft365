{
    "docs": [
        {
            "location": "/", 
            "text": "Office 365 CLI\n\n\nThe Office 365 CLI allows you to manage different settings of your Microsoft Office 365 tenant on any platform.\n\n\n\n\n\nInstallation\n\n\nThe Office 365 CLI is distributed as an NPM package. To use it, install it globally using:\n\n\nnpm i -g @pnp/office365-cli\n\n\n\n\n\nor using yarn:\n\n\nyarn global add @pnp/office365-cli\n\n\n\n\n\nThe beta version of the Office 365 CLI can be installed by using the \n@next\n tag:\n\n\nnpm i -g @pnp/office365-cli@next\n\n\n\n\n\nGetting started\n\n\nStart the Office 365 CLI by typing in the command line:\n\n\n$ office365\n\no365$ _\n\n\n\n\n\nRunning the \noffice365\n command will start the immersive CLI with its own command prompt.\n\n\nStart managing the settings of your Office 365 tenant by connecting to it, using the \nspo connect \nurl\n site, for example:\n\n\no365$ spo connect https://contoso-admin.sharepoint.com\n\n\n\n\n\n\n\nDepending on which settings you want to manage you might need to connect either to your tenant admin site (URL with \n-admin\n in it), or to a regular SharePoint site. For more information refer to the help of the command you want to use.\n\n\n\n\nTo list all available commands, type in the Office 365 CLI prompt \nhelp\n:\n\n\no365$ \nhelp\n\n\n\n\n\n\nTo exit the CLI, type \nexit\n:\n\n\no365$ \nexit\n\n\n\n\n\n\nSharePoint Patterns and Practices\n\n\nOffice 365 CLI is an open-source project driven by the \nSharePoint Patterns and Practices\n initiative. The project is built and managed publicly on GitHub at \nhttps://github.com/SharePoint/office365-cli\n and accepts community contributions. We would encourage you to try it and \ntell us what you think\n. We would also love your help! We have a number of feature requests that are a \ngood starting point\n to contribute to the project.\n\n\n\u201cSharing is caring\u201d\n\n\nSharePoint PnP team", 
            "title": "Home"
        }, 
        {
            "location": "/#office-365-cli", 
            "text": "The Office 365 CLI allows you to manage different settings of your Microsoft Office 365 tenant on any platform.", 
            "title": "Office 365 CLI"
        }, 
        {
            "location": "/#installation", 
            "text": "The Office 365 CLI is distributed as an NPM package. To use it, install it globally using:  npm i -g @pnp/office365-cli  or using yarn:  yarn global add @pnp/office365-cli  The beta version of the Office 365 CLI can be installed by using the  @next  tag:  npm i -g @pnp/office365-cli@next", 
            "title": "Installation"
        }, 
        {
            "location": "/#getting-started", 
            "text": "Start the Office 365 CLI by typing in the command line:  $ office365\n\no365$ _  Running the  office365  command will start the immersive CLI with its own command prompt.  Start managing the settings of your Office 365 tenant by connecting to it, using the  spo connect  url  site, for example:  o365$ spo connect https://contoso-admin.sharepoint.com   Depending on which settings you want to manage you might need to connect either to your tenant admin site (URL with  -admin  in it), or to a regular SharePoint site. For more information refer to the help of the command you want to use.   To list all available commands, type in the Office 365 CLI prompt  help :  o365$  help   To exit the CLI, type  exit :  o365$  exit", 
            "title": "Getting started"
        }, 
        {
            "location": "/#sharepoint-patterns-and-practices", 
            "text": "Office 365 CLI is an open-source project driven by the  SharePoint Patterns and Practices  initiative. The project is built and managed publicly on GitHub at  https://github.com/SharePoint/office365-cli  and accepts community contributions. We would encourage you to try it and  tell us what you think . We would also love your help! We have a number of feature requests that are a  good starting point  to contribute to the project.  \u201cSharing is caring\u201d  SharePoint PnP team", 
            "title": "SharePoint Patterns and Practices"
        }, 
        {
            "location": "/cmd/spo/connect/", 
            "text": "spo connect\n\n\nConnects to a SharePoint Online site\n\n\nUsage\n\n\nspo connect \n[\noptions\n]\n \nurl\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\nArguments\n\n\n\n\n\n\n\n\nArgument\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nurl\n\n\nabsolute URL of the SharePoint Online site to connect to\n\n\n\n\n\n\n\n\nRemarks\n\n\nUsing the \nspo connect\n command, you can connect to any SharePoint Online site.\nDepending on the command you want to use, you might be required to connect\nto a SharePoint Online tenant admin site (suffixed with \n-admin\n,\neg. \nhttps://contoso-admin.sharepoint.com\n) or a regular site.\n\n\nThe \nspo connect\n command uses device code OAuth flow with the standard\nMicrosoft SharePoint Online Management Shell Azure AD application to connect\nto SharePoint Online.\n\n\nWhen connecting to a SharePoint site, the \nspo connect\n command stores in memory\nthe access token and the refresh token for the specified site. Both tokens are cleared from memory\nafter exiting the CLI or by calling the \nspo disconnect\n command.\n\n\nExamples\n\n\nConnects to a SharePoint Online tenant admin site\n\n\nspo connect https://contoso-admin.sharepoint.com\n\n\n\n\n\nConnect to a SharePoint Online tenant admin site in debug mode including detailed debug information in the console output\n\n\nspo connect --debug https://contoso-admin.sharepoint.com\n\n\n\n\n\nConnect to a regular SharePoint Online site\n\n\nspo connect https://contoso.sharepoint.com/sites/team", 
            "title": "connect"
        }, 
        {
            "location": "/cmd/spo/connect/#spo-connect", 
            "text": "Connects to a SharePoint Online site", 
            "title": "spo connect"
        }, 
        {
            "location": "/cmd/spo/connect/#usage", 
            "text": "spo connect  [ options ]   url", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/connect/#options", 
            "text": "Option  Description      --help  output usage information    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/connect/#arguments", 
            "text": "Argument  Description      url  absolute URL of the SharePoint Online site to connect to", 
            "title": "Arguments"
        }, 
        {
            "location": "/cmd/spo/connect/#remarks", 
            "text": "Using the  spo connect  command, you can connect to any SharePoint Online site.\nDepending on the command you want to use, you might be required to connect\nto a SharePoint Online tenant admin site (suffixed with  -admin ,\neg.  https://contoso-admin.sharepoint.com ) or a regular site.  The  spo connect  command uses device code OAuth flow with the standard\nMicrosoft SharePoint Online Management Shell Azure AD application to connect\nto SharePoint Online.  When connecting to a SharePoint site, the  spo connect  command stores in memory\nthe access token and the refresh token for the specified site. Both tokens are cleared from memory\nafter exiting the CLI or by calling the  spo disconnect  command.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/connect/#examples", 
            "text": "Connects to a SharePoint Online tenant admin site  spo connect https://contoso-admin.sharepoint.com  Connect to a SharePoint Online tenant admin site in debug mode including detailed debug information in the console output  spo connect --debug https://contoso-admin.sharepoint.com  Connect to a regular SharePoint Online site  spo connect https://contoso.sharepoint.com/sites/team", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/disconnect/", 
            "text": "spo disconnect\n\n\nDisconnects from a previously connected SharePoint Online site\n\n\nUsage\n\n\nspo disconnect \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\nRemarks\n\n\nThe spo disconnect command disconnects from the previously connected SharePoint Online site and removes any access and refresh tokens from memory.\n\n\nExamples\n\n\nDisconnect from a previously connected SharePoint Online site\n\n\nspo disconnect\n\n\n\n\n\nDisconnects from a previously connected SharePoint Online site in debug mode including detailed debug information in the console output\n\n\nspo disconnect --debug", 
            "title": "disconnect"
        }, 
        {
            "location": "/cmd/spo/disconnect/#spo-disconnect", 
            "text": "Disconnects from a previously connected SharePoint Online site", 
            "title": "spo disconnect"
        }, 
        {
            "location": "/cmd/spo/disconnect/#usage", 
            "text": "spo disconnect  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/disconnect/#options", 
            "text": "Option  Description      --help  output usage information    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/disconnect/#remarks", 
            "text": "The spo disconnect command disconnects from the previously connected SharePoint Online site and removes any access and refresh tokens from memory.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/disconnect/#examples", 
            "text": "Disconnect from a previously connected SharePoint Online site  spo disconnect  Disconnects from a previously connected SharePoint Online site in debug mode including detailed debug information in the console output  spo disconnect --debug", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/status/", 
            "text": "spo status\n\n\nShows SharePoint Online site connection status\n\n\nUsage\n\n\nspo status \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\nRemarks\n\n\nIf you are connected to a SharePoint Online, the spo status command\nwill show you information about the site to which you are connected, the currently stored\nrefresh and access token and the expiration date and time of the access token.\n\n\nExamples\n\n\nShow the information about the current connection to SharePoint Online\n\n\nspo status", 
            "title": "status"
        }, 
        {
            "location": "/cmd/spo/status/#spo-status", 
            "text": "Shows SharePoint Online site connection status", 
            "title": "spo status"
        }, 
        {
            "location": "/cmd/spo/status/#usage", 
            "text": "spo status  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/status/#options", 
            "text": "Option  Description      --help  output usage information    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/status/#remarks", 
            "text": "If you are connected to a SharePoint Online, the spo status command\nwill show you information about the site to which you are connected, the currently stored\nrefresh and access token and the expiration date and time of the access token.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/status/#examples", 
            "text": "Show the information about the current connection to SharePoint Online  spo status", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/app/app-add/", 
            "text": "spo app add\n\n\nAdds an app to the specified SharePoint Online app catalog\n\n\nUsage\n\n\nspo app add \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-p, --filePath \nfilePath\n\n\nAbsolute or relative path to the solution package file to add to the app catalog\n\n\n\n\n\n\n--overwrite\n\n\nSet to overwrite the existing package file\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo add an app to the tenant app catalog, you have to first connect to a SharePoint site using the\n\nspo connect\n command, eg. \nspo connect https://contoso.sharepoint.com\n.\n\n\nWhen specifying the path to the app package file you can use both relative and absolute paths. Note, that \n~\n in the path, will not be resolved and will most likely result in an error.\n\n\nIf you try to upload a package that already exists in the tenant app catalog without specifying the \n--overwrite\n option, the command will fail with an error stating that the specified package already exists.\n\n\nExamples\n\n\nAdd the \nspfx.sppkg\n package to the tenant app catalog\n\n\nspo app add -p /Users/pnp/spfx/sharepoint/solution/spfx.sppkg\n\n\n\n\n\nOverwrite the \nspfx.sppkg\n package in the tenant app catalog with the newer version\n\n\nspo app add -p sharepoint/solution/spfx.sppkg --overwrite\n\n\n\n\n\nMore information\n\n\n\n\nApplication Lifecycle Management (ALM) APIs: \nhttps://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins", 
            "title": "app add"
        }, 
        {
            "location": "/cmd/spo/app/app-add/#spo-app-add", 
            "text": "Adds an app to the specified SharePoint Online app catalog", 
            "title": "spo app add"
        }, 
        {
            "location": "/cmd/spo/app/app-add/#usage", 
            "text": "spo app add  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/app/app-add/#options", 
            "text": "Option  Description      --help  output usage information    -p, --filePath  filePath  Absolute or relative path to the solution package file to add to the app catalog    --overwrite  Set to overwrite the existing package file    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/app/app-add/#remarks", 
            "text": "To add an app to the tenant app catalog, you have to first connect to a SharePoint site using the spo connect  command, eg.  spo connect https://contoso.sharepoint.com .  When specifying the path to the app package file you can use both relative and absolute paths. Note, that  ~  in the path, will not be resolved and will most likely result in an error.  If you try to upload a package that already exists in the tenant app catalog without specifying the  --overwrite  option, the command will fail with an error stating that the specified package already exists.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/app/app-add/#examples", 
            "text": "Add the  spfx.sppkg  package to the tenant app catalog  spo app add -p /Users/pnp/spfx/sharepoint/solution/spfx.sppkg  Overwrite the  spfx.sppkg  package in the tenant app catalog with the newer version  spo app add -p sharepoint/solution/spfx.sppkg --overwrite", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/app/app-add/#more-information", 
            "text": "Application Lifecycle Management (ALM) APIs:  https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/app/app-deploy/", 
            "text": "spo app deploy\n\n\nDeploys the specified app in the tenant app catalog\n\n\nUsage\n\n\nspo app deploy \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-i, --id \nid\n\n\nID of the app to deploy. Needs to be available in the tenant app catalog.\n\n\n\n\n\n\n-u, --appCatalogUrl [appCatalogUrl]\n\n\n(optional) URL of the tenant app catalog site. If not specified, the CLI will try to resolve it automatically\n\n\n\n\n\n\n--skipFeatureDeployment\n\n\nIf the app supports tenant-wide deployment, deploy it to the whole tenant\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo deploy an app in the tenant app catalog, you have to first connect to a SharePoint site using the\n\nspo connect\n command, eg. \nspo connect https://contoso.sharepoint.com\n.\n\n\nIf you don't specify the URL of the tenant app catalog site using the \nappCatalogUrl\n option, the CLI will try to determine its URL automatically. This will be done using SharePoint Search. If the tenant app catalog site hasn't been crawled yet, the CLI will not find it and will prompt you to provide the URL yourself.\n\n\nIf the app with the specified ID doesn't exist in the tenant app catalog, the command will fail with an error. Before you can deploy an app, you have to add it to the tenant app catalog first using the \nspo app add\n command.\n\n\nExamples\n\n\nDeploy the specified app in the tenant app catalog. Try to resolve the URL of the tenant app catalog automatically.\n\n\nspo app deploy -i 058140e3-0e37-44fc-a1d3-79c487d371a3\n\n\n\n\n\nDeploy the specified app in the tenant app catalog located at \nhttps://contoso.sharepoint.com/sites/apps\n\n\nspo app deploy -i 058140e3-0e37-44fc-a1d3-79c487d371a3 -u https://contoso.sharepoint.com/sites/apps\n\n\n\n\n\nDeploy the specified app to the whole tenant at once. Features included in the solution will not be activated.\n\n\nspo app deploy -i 058140e3-0e37-44fc-a1d3-79c487d371a3 --skipFeatureDeployment\n\n\n\n\n\nMore information\n\n\n\n\nApplication Lifecycle Management (ALM) APIs: \nhttps://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins", 
            "title": "app deploy"
        }, 
        {
            "location": "/cmd/spo/app/app-deploy/#spo-app-deploy", 
            "text": "Deploys the specified app in the tenant app catalog", 
            "title": "spo app deploy"
        }, 
        {
            "location": "/cmd/spo/app/app-deploy/#usage", 
            "text": "spo app deploy  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/app/app-deploy/#options", 
            "text": "Option  Description      --help  output usage information    -i, --id  id  ID of the app to deploy. Needs to be available in the tenant app catalog.    -u, --appCatalogUrl [appCatalogUrl]  (optional) URL of the tenant app catalog site. If not specified, the CLI will try to resolve it automatically    --skipFeatureDeployment  If the app supports tenant-wide deployment, deploy it to the whole tenant    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/app/app-deploy/#remarks", 
            "text": "To deploy an app in the tenant app catalog, you have to first connect to a SharePoint site using the spo connect  command, eg.  spo connect https://contoso.sharepoint.com .  If you don't specify the URL of the tenant app catalog site using the  appCatalogUrl  option, the CLI will try to determine its URL automatically. This will be done using SharePoint Search. If the tenant app catalog site hasn't been crawled yet, the CLI will not find it and will prompt you to provide the URL yourself.  If the app with the specified ID doesn't exist in the tenant app catalog, the command will fail with an error. Before you can deploy an app, you have to add it to the tenant app catalog first using the  spo app add  command.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/app/app-deploy/#examples", 
            "text": "Deploy the specified app in the tenant app catalog. Try to resolve the URL of the tenant app catalog automatically.  spo app deploy -i 058140e3-0e37-44fc-a1d3-79c487d371a3  Deploy the specified app in the tenant app catalog located at  https://contoso.sharepoint.com/sites/apps  spo app deploy -i 058140e3-0e37-44fc-a1d3-79c487d371a3 -u https://contoso.sharepoint.com/sites/apps  Deploy the specified app to the whole tenant at once. Features included in the solution will not be activated.  spo app deploy -i 058140e3-0e37-44fc-a1d3-79c487d371a3 --skipFeatureDeployment", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/app/app-deploy/#more-information", 
            "text": "Application Lifecycle Management (ALM) APIs:  https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/app/app-get/", 
            "text": "spo app get\n\n\nGets information about the specific app from the tenant app catalog\n\n\nUsage\n\n\nspo app get \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-i, --id \nid\n\n\nID of the app to retrieve information for\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo get information about the specified app available in the tenant app catalog, you have to first connect to a SharePoint site using the\n\nspo connect\n command, eg. \nspo connect https://contoso.sharepoint.com\n.\n\n\nExamples\n\n\nReturn details about the app with ID \nb2307a39-e878-458b-bc90-03bc578531d6\n available in the tenant app catalog.\n\n\nspo app get -i b2307a39-e878-458b-bc90-03bc578531d6\n\n\n\n\n\nMore information\n\n\n\n\nApplication Lifecycle Management (ALM) APIs: \nhttps://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins", 
            "title": "app get"
        }, 
        {
            "location": "/cmd/spo/app/app-get/#spo-app-get", 
            "text": "Gets information about the specific app from the tenant app catalog", 
            "title": "spo app get"
        }, 
        {
            "location": "/cmd/spo/app/app-get/#usage", 
            "text": "spo app get  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/app/app-get/#options", 
            "text": "Option  Description      --help  output usage information    -i, --id  id  ID of the app to retrieve information for    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/app/app-get/#remarks", 
            "text": "To get information about the specified app available in the tenant app catalog, you have to first connect to a SharePoint site using the spo connect  command, eg.  spo connect https://contoso.sharepoint.com .", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/app/app-get/#examples", 
            "text": "Return details about the app with ID  b2307a39-e878-458b-bc90-03bc578531d6  available in the tenant app catalog.  spo app get -i b2307a39-e878-458b-bc90-03bc578531d6", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/app/app-get/#more-information", 
            "text": "Application Lifecycle Management (ALM) APIs:  https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/app/app-install/", 
            "text": "spo app install\n\n\nInstalls an app from the tenant app catalog in the site\n\n\nUsage\n\n\nspo app install \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-i, --id \nid\n\n\nID of the app to retrieve information for\n\n\n\n\n\n\n-s, --siteUrl \nsiteUrl\n\n\nAbsolute URL of the site to install the app in\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo install an app from the tenant app catalog in a site, you have to first connect to a SharePoint site using the \nspo connect\n command, eg. \nspo connect https://contoso.sharepoint.com\n.\n\n\nIf the app with the specified ID doesn't exist in the tenant app catalog, the command will fail with an error. Before you can install app in a site, you have to add it to the tenant app catalog first using the \nspo app add\n command.\n\n\nExamples\n\n\nInstall the app with ID \nb2307a39-e878-458b-bc90-03bc578531d6\n in the \nhttps://contoso.sharepoint.com\n site.\n\n\nspo app install -i b2307a39-e878-458b-bc90-03bc578531d6 -s https://contoso.sharepoint.com\n\n\n\n\n\nMore information\n\n\n\n\nApplication Lifecycle Management (ALM) APIs: \nhttps://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins", 
            "title": "app install"
        }, 
        {
            "location": "/cmd/spo/app/app-install/#spo-app-install", 
            "text": "Installs an app from the tenant app catalog in the site", 
            "title": "spo app install"
        }, 
        {
            "location": "/cmd/spo/app/app-install/#usage", 
            "text": "spo app install  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/app/app-install/#options", 
            "text": "Option  Description      --help  output usage information    -i, --id  id  ID of the app to retrieve information for    -s, --siteUrl  siteUrl  Absolute URL of the site to install the app in    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/app/app-install/#remarks", 
            "text": "To install an app from the tenant app catalog in a site, you have to first connect to a SharePoint site using the  spo connect  command, eg.  spo connect https://contoso.sharepoint.com .  If the app with the specified ID doesn't exist in the tenant app catalog, the command will fail with an error. Before you can install app in a site, you have to add it to the tenant app catalog first using the  spo app add  command.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/app/app-install/#examples", 
            "text": "Install the app with ID  b2307a39-e878-458b-bc90-03bc578531d6  in the  https://contoso.sharepoint.com  site.  spo app install -i b2307a39-e878-458b-bc90-03bc578531d6 -s https://contoso.sharepoint.com", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/app/app-install/#more-information", 
            "text": "Application Lifecycle Management (ALM) APIs:  https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/app/app-list/", 
            "text": "spo app list\n\n\nLists apps from the tenant app catalog\n\n\nUsage\n\n\nspo app list \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo list the apps available in the tenant app catalog, you have to first connect to a SharePoint site using the\n\nspo connect\n command, eg. \nspo connect https://contoso.sharepoint.com\n.\n\n\nExamples\n\n\nList all apps available in the tenant app catalog\n\n\nspo app list\n\n\n\n\n\nMore information\n\n\n\n\nApplication Lifecycle Management (ALM) APIs: \nhttps://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins", 
            "title": "app list"
        }, 
        {
            "location": "/cmd/spo/app/app-list/#spo-app-list", 
            "text": "Lists apps from the tenant app catalog", 
            "title": "spo app list"
        }, 
        {
            "location": "/cmd/spo/app/app-list/#usage", 
            "text": "spo app list  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/app/app-list/#options", 
            "text": "Option  Description      --help  output usage information    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/app/app-list/#remarks", 
            "text": "To list the apps available in the tenant app catalog, you have to first connect to a SharePoint site using the spo connect  command, eg.  spo connect https://contoso.sharepoint.com .", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/app/app-list/#examples", 
            "text": "List all apps available in the tenant app catalog  spo app list", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/app/app-list/#more-information", 
            "text": "Application Lifecycle Management (ALM) APIs:  https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/app/app-remove/", 
            "text": "spo app remove\n\n\nRemoves the specified app from the tenant app catalog\n\n\nUsage\n\n\nspo app remove \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-i, --id \nid\n\n\nID of the app to remove. Needs to be available in the tenant app catalog.\n\n\n\n\n\n\n-u, --appCatalogUrl [appCatalogUrl]\n\n\n(optional) URL of the tenant app catalog site. If not specified, the CLI will try to resolve it automatically\n\n\n\n\n\n\n--confirm\n\n\nDon't prompt for confirming removing the app from the tenant app catalog\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo remove an app from the tenant app catalog, you have to first connect to a SharePoint site using the \nspo connect\n command, eg. \nspo connect https://contoso.sharepoint.com\n.\n\n\nIf you don't specify the URL of the tenant app catalog site using the \nappCatalogUrl\n option, the CLI will try to determine its URL automatically. This will be done using SharePoint Search. If the tenant app catalog site hasn't been crawled yet, the CLI will not find it and will prompt you to provide the URL yourself.\n\n\nIf the app with the specified ID doesn't exist in the tenant app catalog, the command will fail with an error.\n\n\nExamples\n\n\nRemove the specified app from the tenant app catalog. Try to resolve the URL of the tenant app catalog automatically. Additionally, will prompt for confirmation before actually retracting the app.\n\n\nspo app remove --id 058140e3-0e37-44fc-a1d3-79c487d371a3\n\n\n\n\n\nRemove the specified app from the tenant app catalog located at \nhttps://contoso.sharepoint.com/sites/apps\n. Additionally, will prompt for confirmation before actually retracting the app.\n\n\nspo app remove -i 058140e3-0e37-44fc-a1d3-79c487d371a3 -u https://contoso.sharepoint.com/sites/apps\n\n\n\n\n\nRemove the specified app from the tenant app catalog located at \nhttps://contoso.sharepoint.com/sites/apps\n. Don't prompt for confirmation.\n\n\nspo app remove -i 058140e3-0e37-44fc-a1d3-79c487d371a3 -u https://contoso.sharepoint.com/sites/apps --confirm\n\n\n\n\n\nMore information\n\n\n\n\nApplication Lifecycle Management (ALM) APIs: \nhttps://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins", 
            "title": "app remove"
        }, 
        {
            "location": "/cmd/spo/app/app-remove/#spo-app-remove", 
            "text": "Removes the specified app from the tenant app catalog", 
            "title": "spo app remove"
        }, 
        {
            "location": "/cmd/spo/app/app-remove/#usage", 
            "text": "spo app remove  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/app/app-remove/#options", 
            "text": "Option  Description      --help  output usage information    -i, --id  id  ID of the app to remove. Needs to be available in the tenant app catalog.    -u, --appCatalogUrl [appCatalogUrl]  (optional) URL of the tenant app catalog site. If not specified, the CLI will try to resolve it automatically    --confirm  Don't prompt for confirming removing the app from the tenant app catalog    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/app/app-remove/#remarks", 
            "text": "To remove an app from the tenant app catalog, you have to first connect to a SharePoint site using the  spo connect  command, eg.  spo connect https://contoso.sharepoint.com .  If you don't specify the URL of the tenant app catalog site using the  appCatalogUrl  option, the CLI will try to determine its URL automatically. This will be done using SharePoint Search. If the tenant app catalog site hasn't been crawled yet, the CLI will not find it and will prompt you to provide the URL yourself.  If the app with the specified ID doesn't exist in the tenant app catalog, the command will fail with an error.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/app/app-remove/#examples", 
            "text": "Remove the specified app from the tenant app catalog. Try to resolve the URL of the tenant app catalog automatically. Additionally, will prompt for confirmation before actually retracting the app.  spo app remove --id 058140e3-0e37-44fc-a1d3-79c487d371a3  Remove the specified app from the tenant app catalog located at  https://contoso.sharepoint.com/sites/apps . Additionally, will prompt for confirmation before actually retracting the app.  spo app remove -i 058140e3-0e37-44fc-a1d3-79c487d371a3 -u https://contoso.sharepoint.com/sites/apps  Remove the specified app from the tenant app catalog located at  https://contoso.sharepoint.com/sites/apps . Don't prompt for confirmation.  spo app remove -i 058140e3-0e37-44fc-a1d3-79c487d371a3 -u https://contoso.sharepoint.com/sites/apps --confirm", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/app/app-remove/#more-information", 
            "text": "Application Lifecycle Management (ALM) APIs:  https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/app/app-retract/", 
            "text": "spo app retract\n\n\nRetracts the specified app from the tenant app catalog\n\n\nUsage\n\n\nspo app retract \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-i, --id \nid\n\n\nID of the app to retract. Needs to be available in the tenant app catalog.\n\n\n\n\n\n\n-u, --appCatalogUrl [appCatalogUrl]\n\n\n(optional) URL of the tenant app catalog site. If not specified, the CLI will try to resolve it automatically\n\n\n\n\n\n\n--confirm\n\n\nDon't prompt for confirming retracting the app from the tenant app catalog\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo retract an app from the tenant app catalog, you have to first connect to a SharePoint site using the \nspo connect\n command, eg. \nspo connect https://contoso.sharepoint.com\n.\n\n\nIf you don't specify the URL of the tenant app catalog site using the \nappCatalogUrl\n option, the CLI will try to determine its URL automatically. This will be done using SharePoint Search. If the tenant app catalog site hasn't been crawled yet, the CLI will not find it and will prompt you to provide the URL yourself.\n\n\nIf the app with the specified ID doesn't exist in the tenant app catalog, the command will fail with an error.\n\n\nExamples\n\n\nRetract the specified app from the tenant app catalog. Try to resolve the URL of the tenant app catalog automatically. Additionally, will prompt for confirmation before actually retracting the app.\n\n\nspo app retract -i 058140e3-0e37-44fc-a1d3-79c487d371a3\n\n\n\n\n\nRetract the specified app from the tenant app catalog located at \nhttps://contoso.sharepoint.com/sites/apps\n. Additionally, will prompt for confirmation before actually retracting the app.\n\n\nspo app retract -i 058140e3-0e37-44fc-a1d3-79c487d371a3 -u https://contoso.sharepoint.com/sites/apps\n\n\n\n\n\nRetract the specified app from the tenant app catalog. Try to resolve the URL of the tenant app catalog automatically. Will not prompt for confirmation before retracting the app.\n\n\nspo app retract -i 058140e3-0e37-44fc-a1d3-79c487d371a3 --confirm\n\n\n\n\n\nMore information\n\n\n\n\nApplication Lifecycle Management (ALM) APIs: \nhttps://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins", 
            "title": "app retract"
        }, 
        {
            "location": "/cmd/spo/app/app-retract/#spo-app-retract", 
            "text": "Retracts the specified app from the tenant app catalog", 
            "title": "spo app retract"
        }, 
        {
            "location": "/cmd/spo/app/app-retract/#usage", 
            "text": "spo app retract  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/app/app-retract/#options", 
            "text": "Option  Description      --help  output usage information    -i, --id  id  ID of the app to retract. Needs to be available in the tenant app catalog.    -u, --appCatalogUrl [appCatalogUrl]  (optional) URL of the tenant app catalog site. If not specified, the CLI will try to resolve it automatically    --confirm  Don't prompt for confirming retracting the app from the tenant app catalog    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/app/app-retract/#remarks", 
            "text": "To retract an app from the tenant app catalog, you have to first connect to a SharePoint site using the  spo connect  command, eg.  spo connect https://contoso.sharepoint.com .  If you don't specify the URL of the tenant app catalog site using the  appCatalogUrl  option, the CLI will try to determine its URL automatically. This will be done using SharePoint Search. If the tenant app catalog site hasn't been crawled yet, the CLI will not find it and will prompt you to provide the URL yourself.  If the app with the specified ID doesn't exist in the tenant app catalog, the command will fail with an error.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/app/app-retract/#examples", 
            "text": "Retract the specified app from the tenant app catalog. Try to resolve the URL of the tenant app catalog automatically. Additionally, will prompt for confirmation before actually retracting the app.  spo app retract -i 058140e3-0e37-44fc-a1d3-79c487d371a3  Retract the specified app from the tenant app catalog located at  https://contoso.sharepoint.com/sites/apps . Additionally, will prompt for confirmation before actually retracting the app.  spo app retract -i 058140e3-0e37-44fc-a1d3-79c487d371a3 -u https://contoso.sharepoint.com/sites/apps  Retract the specified app from the tenant app catalog. Try to resolve the URL of the tenant app catalog automatically. Will not prompt for confirmation before retracting the app.  spo app retract -i 058140e3-0e37-44fc-a1d3-79c487d371a3 --confirm", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/app/app-retract/#more-information", 
            "text": "Application Lifecycle Management (ALM) APIs:  https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/app/app-uninstall/", 
            "text": "spo app uninstall\n\n\nUninstalls an app from the site\n\n\nUsage\n\n\nspo app uninstall \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-i, --id \nid\n\n\nID of the app to retrieve information for\n\n\n\n\n\n\n-s, --siteUrl \nsiteUrl\n\n\nAbsolute URL of the site to uninstall the app from\n\n\n\n\n\n\n--confirm\n\n\nDon't prompt for confirming uninstalling the app\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo uninstall an app from the site, you have to first connect to a SharePoint site using the \nspo connect\n command, eg. \nspo connect https://contoso.sharepoint.com\n.\n\n\nExamples\n\n\nUninstall the app with ID \nb2307a39-e878-458b-bc90-03bc578531d6\n from the \nhttps://contoso.sharepoint.com\n site.\n\n\nspo app uninstall -i b2307a39-e878-458b-bc90-03bc578531d6 -s https://contoso.sharepoint.com\n\n\n\n\n\nUninstall the app with ID \nb2307a39-e878-458b-bc90-03bc578531d6\n from the \nhttps://contoso.sharepoint.com\n site without prompting for confirmation.\n\n\nspo app uninstall -i b2307a39-e878-458b-bc90-03bc578531d6 -s https://contoso.sharepoint.com\n\n\n\n\n\nMore information\n\n\n\n\nApplication Lifecycle Management (ALM) APIs: \nhttps://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins", 
            "title": "app uninstall"
        }, 
        {
            "location": "/cmd/spo/app/app-uninstall/#spo-app-uninstall", 
            "text": "Uninstalls an app from the site", 
            "title": "spo app uninstall"
        }, 
        {
            "location": "/cmd/spo/app/app-uninstall/#usage", 
            "text": "spo app uninstall  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/app/app-uninstall/#options", 
            "text": "Option  Description      --help  output usage information    -i, --id  id  ID of the app to retrieve information for    -s, --siteUrl  siteUrl  Absolute URL of the site to uninstall the app from    --confirm  Don't prompt for confirming uninstalling the app    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/app/app-uninstall/#remarks", 
            "text": "To uninstall an app from the site, you have to first connect to a SharePoint site using the  spo connect  command, eg.  spo connect https://contoso.sharepoint.com .", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/app/app-uninstall/#examples", 
            "text": "Uninstall the app with ID  b2307a39-e878-458b-bc90-03bc578531d6  from the  https://contoso.sharepoint.com  site.  spo app uninstall -i b2307a39-e878-458b-bc90-03bc578531d6 -s https://contoso.sharepoint.com  Uninstall the app with ID  b2307a39-e878-458b-bc90-03bc578531d6  from the  https://contoso.sharepoint.com  site without prompting for confirmation.  spo app uninstall -i b2307a39-e878-458b-bc90-03bc578531d6 -s https://contoso.sharepoint.com", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/app/app-uninstall/#more-information", 
            "text": "Application Lifecycle Management (ALM) APIs:  https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/app/app-upgrade/", 
            "text": "spo app upgrade\n\n\nUpgrades app in the specified site\n\n\nUsage\n\n\nspo app upgrade \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-i, --id \nid\n\n\nID of the app to retrieve information for\n\n\n\n\n\n\n-s, --siteUrl \nsiteUrl\n\n\nAbsolute URL of the site to install the app in\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo upgrade an app in the site, you have to first connect to a SharePoint site using the \nspo connect\n command, eg. \nspo connect https://contoso.sharepoint.com\n.\n\n\nExamples\n\n\nUpgrade the app with ID \nb2307a39-e878-458b-bc90-03bc578531d6\n in the \nhttps://contoso.sharepoint.com\n site.\n\n\nspo app upgrade -i b2307a39-e878-458b-bc90-03bc578531d6 -s https://contoso.sharepoint.com\n\n\n\n\n\nMore information\n\n\n\n\nApplication Lifecycle Management (ALM) APIs: \nhttps://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins", 
            "title": "app upgrade"
        }, 
        {
            "location": "/cmd/spo/app/app-upgrade/#spo-app-upgrade", 
            "text": "Upgrades app in the specified site", 
            "title": "spo app upgrade"
        }, 
        {
            "location": "/cmd/spo/app/app-upgrade/#usage", 
            "text": "spo app upgrade  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/app/app-upgrade/#options", 
            "text": "Option  Description      --help  output usage information    -i, --id  id  ID of the app to retrieve information for    -s, --siteUrl  siteUrl  Absolute URL of the site to install the app in    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/app/app-upgrade/#remarks", 
            "text": "To upgrade an app in the site, you have to first connect to a SharePoint site using the  spo connect  command, eg.  spo connect https://contoso.sharepoint.com .", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/app/app-upgrade/#examples", 
            "text": "Upgrade the app with ID  b2307a39-e878-458b-bc90-03bc578531d6  in the  https://contoso.sharepoint.com  site.  spo app upgrade -i b2307a39-e878-458b-bc90-03bc578531d6 -s https://contoso.sharepoint.com", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/app/app-upgrade/#more-information", 
            "text": "Application Lifecycle Management (ALM) APIs:  https://docs.microsoft.com/en-us/sharepoint/dev/apis/alm-api-for-spfx-add-ins", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-get/", 
            "text": "spo cdn get\n\n\nView current status of the specified Office 365 CDN\n\n\nUsage\n\n\nspo cdn get \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-t, --type [type]\n\n\nType of CDN to manage. \nPublic|Private\n. Default \nPublic\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online tenant admin site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo view the status of an Office 365 CDN, you have to first connect to a tenant admin site using the\n\nspo connect\n command, eg. \nspo connect https://contoso-admin.sharepoint.com\n.\nIf you are connected to a different site and will try to manage tenant properties,\nyou will get an error.\n\n\nUsing the \n-t, --type\n option you can choose whether you want to manage the settings of\nthe Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.\n\n\nExamples\n\n\nShow if the Public CDN is currently enabled or not\n\n\nspo cdn get\n\n\n\n\n\nShow if the Private CDN is currently enabled or not\n\n\nspo cdn get -t Private\n\n\n\n\n\nMore information\n\n\n\n\nGeneral availability of Office 365 CDN: \nhttps://dev.office.com/blogs/general-availability-of-office-365-cdn", 
            "title": "cdn get"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-get/#spo-cdn-get", 
            "text": "View current status of the specified Office 365 CDN", 
            "title": "spo cdn get"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-get/#usage", 
            "text": "spo cdn get  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-get/#options", 
            "text": "Option  Description      --help  output usage information    -t, --type [type]  Type of CDN to manage.  Public|Private . Default  Public    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online tenant admin site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-get/#remarks", 
            "text": "To view the status of an Office 365 CDN, you have to first connect to a tenant admin site using the spo connect  command, eg.  spo connect https://contoso-admin.sharepoint.com .\nIf you are connected to a different site and will try to manage tenant properties,\nyou will get an error.  Using the  -t, --type  option you can choose whether you want to manage the settings of\nthe Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-get/#examples", 
            "text": "Show if the Public CDN is currently enabled or not  spo cdn get  Show if the Private CDN is currently enabled or not  spo cdn get -t Private", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-get/#more-information", 
            "text": "General availability of Office 365 CDN:  https://dev.office.com/blogs/general-availability-of-office-365-cdn", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-add/", 
            "text": "spo cdn origin add\n\n\nAdds CDN origin to the current SharePoint Online tenant\n\n\nUsage\n\n\nspo cdn origin add \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-t, --type [type]\n\n\nType of CDN to manage. \nPublic|Private\n. Default \nPublic\n\n\n\n\n\n\n-r, --origin \norigin\n\n\nOrigin to add to the current CDN configuration\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online tenant admin site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo add origins to an Office 365 CDN, you have to first connect to a tenant admin site using the\n\nspo connect\n command, eg. \nspo connect https://contoso-admin.sharepoint.com\n.\nIf you are connected to a different site and will try to manage tenant properties,\nyou will get an error.\n\n\nUsing the \n-t, --type\n option you can choose whether you want to manage the settings of\nthe Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.\n\n\nExamples\n\n\nAdd \n*/CDN\n to the list of origins of the Public CDN\n\n\nspo cdn origin add -t Public -r */CDN\n\n\n\n\n\nMore information\n\n\n\n\nGeneral availability of Office 365 CDN: \nhttps://dev.office.com/blogs/general-availability-of-office-365-cdn", 
            "title": "cdn origin add"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-add/#spo-cdn-origin-add", 
            "text": "Adds CDN origin to the current SharePoint Online tenant", 
            "title": "spo cdn origin add"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-add/#usage", 
            "text": "spo cdn origin add  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-add/#options", 
            "text": "Option  Description      --help  output usage information    -t, --type [type]  Type of CDN to manage.  Public|Private . Default  Public    -r, --origin  origin  Origin to add to the current CDN configuration    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online tenant admin site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-add/#remarks", 
            "text": "To add origins to an Office 365 CDN, you have to first connect to a tenant admin site using the spo connect  command, eg.  spo connect https://contoso-admin.sharepoint.com .\nIf you are connected to a different site and will try to manage tenant properties,\nyou will get an error.  Using the  -t, --type  option you can choose whether you want to manage the settings of\nthe Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-add/#examples", 
            "text": "Add  */CDN  to the list of origins of the Public CDN  spo cdn origin add -t Public -r */CDN", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-add/#more-information", 
            "text": "General availability of Office 365 CDN:  https://dev.office.com/blogs/general-availability-of-office-365-cdn", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-list/", 
            "text": "spo cdn origin list\n\n\nList CDN origins settings for the current SharePoint Online tenant\n\n\nUsage\n\n\nspo cdn origin list \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-t, --type [type]\n\n\nType of CDN to manage. \nPublic|Private\n. Default \nPublic\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online tenant admin site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo list origins of a Office 365 CDN, you have to first connect to a tenant admin site using the\n\nspo connect\n command, eg. \nspo connect https://contoso-admin.sharepoint.com\n.\nIf you are connected to a different site and will try to manage tenant properties,\nyou will get an error.\n\n\nUsing the \n-t, --type\n option you can choose whether you want to manage the settings of\nthe Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.\n\n\nExamples\n\n\nShow the list of origins configured for the Public CDN\n\n\nspo cdn origin list\n\n\n\n\n\nShow the list of origins configured for the Private CDN\n\n\nspo cdn origin list -t Private\n\n\n\n\n\nMore information\n\n\n\n\nGeneral availability of Office 365 CDN: \nhttps://dev.office.com/blogs/general-availability-of-office-365-cdn", 
            "title": "cdn origin list"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-list/#spo-cdn-origin-list", 
            "text": "List CDN origins settings for the current SharePoint Online tenant", 
            "title": "spo cdn origin list"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-list/#usage", 
            "text": "spo cdn origin list  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-list/#options", 
            "text": "Option  Description      --help  output usage information    -t, --type [type]  Type of CDN to manage.  Public|Private . Default  Public    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online tenant admin site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-list/#remarks", 
            "text": "To list origins of a Office 365 CDN, you have to first connect to a tenant admin site using the spo connect  command, eg.  spo connect https://contoso-admin.sharepoint.com .\nIf you are connected to a different site and will try to manage tenant properties,\nyou will get an error.  Using the  -t, --type  option you can choose whether you want to manage the settings of\nthe Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-list/#examples", 
            "text": "Show the list of origins configured for the Public CDN  spo cdn origin list  Show the list of origins configured for the Private CDN  spo cdn origin list -t Private", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-list/#more-information", 
            "text": "General availability of Office 365 CDN:  https://dev.office.com/blogs/general-availability-of-office-365-cdn", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-remove/", 
            "text": "spo cdn origin remove\n\n\nRemoves CDN origin for the current SharePoint Online tenant\n\n\nUsage\n\n\nspo cdn origin remove \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-t, --type [type]\n\n\nType of CDN to manage. \nPublic|Private\n. Default \nPublic\n\n\n\n\n\n\n-r, --origin \norigin\n\n\nOrigin to remove from the current CDN configuration\n\n\n\n\n\n\n--confirm\n\n\nDon't prompt for confirming removal of a tenant property\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online tenant admin site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo remove an origin from an Office 365 CDN, you have to first connect to a tenant admin site using the\n\nspo connect\n command, eg. \nspo connect https://contoso-admin.sharepoint.com\n.\nIf you are connected to a different site and will try to manage tenant properties,\nyou will get an error.\n\n\nUsing the \n-t, --type\n option you can choose whether you want to manage the settings of\nthe Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.\n\n\nExamples\n\n\nRemove \n*/CDN\n from the list of origins of the Public CDN\n\n\nspo cdn origin remove -t Public -r */CDN\n\n\n\n\n\nMore information\n\n\n\n\nGeneral availability of Office 365 CDN: \nhttps://dev.office.com/blogs/general-availability-of-office-365-cdn", 
            "title": "cdn origin remove"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-remove/#spo-cdn-origin-remove", 
            "text": "Removes CDN origin for the current SharePoint Online tenant", 
            "title": "spo cdn origin remove"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-remove/#usage", 
            "text": "spo cdn origin remove  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-remove/#options", 
            "text": "Option  Description      --help  output usage information    -t, --type [type]  Type of CDN to manage.  Public|Private . Default  Public    -r, --origin  origin  Origin to remove from the current CDN configuration    --confirm  Don't prompt for confirming removal of a tenant property    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online tenant admin site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-remove/#remarks", 
            "text": "To remove an origin from an Office 365 CDN, you have to first connect to a tenant admin site using the spo connect  command, eg.  spo connect https://contoso-admin.sharepoint.com .\nIf you are connected to a different site and will try to manage tenant properties,\nyou will get an error.  Using the  -t, --type  option you can choose whether you want to manage the settings of\nthe Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-remove/#examples", 
            "text": "Remove  */CDN  from the list of origins of the Public CDN  spo cdn origin remove -t Public -r */CDN", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-origin-remove/#more-information", 
            "text": "General availability of Office 365 CDN:  https://dev.office.com/blogs/general-availability-of-office-365-cdn", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-policy-list/", 
            "text": "spo cdn policy list\n\n\nLists CDN policies settings for the current SharePoint Online tenant\n\n\nUsage\n\n\nspo cdn policy list \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-t, --type [type]\n\n\nType of CDN to manage. \nPublic|Private\n. Default \nPublic\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online tenant admin site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo list the policies of an Office 365 CDN, you have to first connect to a tenant admin site using the\n\nspo connect\n command, eg. \nspo connect https://contoso-admin.sharepoint.com\n.\nIf you are connected to a different site and will try to manage tenant properties,\nyou will get an error.\n\n\nUsing the \n-t, --type\n option you can choose whether you want to manage the settings of\nthe Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.\n\n\nExamples\n\n\nShow the list of policies configured for the Public CDN\n\n\nspo cdn policy list\n\n\n\n\n\nShow the list of policies configured for the Private CDN\n\n\nspo cdn policy list -t Private\n\n\n\n\n\nMore information\n\n\n\n\nGeneral availability of Office 365 CDN: \nhttps://dev.office.com/blogs/general-availability-of-office-365-cdn", 
            "title": "cdn policy list"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-policy-list/#spo-cdn-policy-list", 
            "text": "Lists CDN policies settings for the current SharePoint Online tenant", 
            "title": "spo cdn policy list"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-policy-list/#usage", 
            "text": "spo cdn policy list  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-policy-list/#options", 
            "text": "Option  Description      --help  output usage information    -t, --type [type]  Type of CDN to manage.  Public|Private . Default  Public    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online tenant admin site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-policy-list/#remarks", 
            "text": "To list the policies of an Office 365 CDN, you have to first connect to a tenant admin site using the spo connect  command, eg.  spo connect https://contoso-admin.sharepoint.com .\nIf you are connected to a different site and will try to manage tenant properties,\nyou will get an error.  Using the  -t, --type  option you can choose whether you want to manage the settings of\nthe Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-policy-list/#examples", 
            "text": "Show the list of policies configured for the Public CDN  spo cdn policy list  Show the list of policies configured for the Private CDN  spo cdn policy list -t Private", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-policy-list/#more-information", 
            "text": "General availability of Office 365 CDN:  https://dev.office.com/blogs/general-availability-of-office-365-cdn", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-policy-set/", 
            "text": "spo cdn policy set\n\n\nSets CDN policy value for the current SharePoint Online tenant\n\n\nUsage\n\n\nspo cdn policy \nset\n \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-t, --type [type]\n\n\nType of CDN to manage. \nPublic|Private\n. Default \nPublic\n\n\n\n\n\n\n-p, --policy \npolicy\n\n\nCDN policy to configure. \nIncludeFileExtensions|ExcludeRestrictedSiteClassifications\n\n\n\n\n\n\n-v, --value \nvalue\n\n\nValue for the policy to configure\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online tenant admin site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo set the policy of an Office 365 CDN, you have to first connect to a tenant admin site using the\n\nspo connect\n command, eg. \nspo connect https://contoso-admin.sharepoint.com\n.\nIf you are connected to a different site and will try to manage tenant properties,\nyou will get an error.\n\n\nUsing the \n-t, --type\n option you can choose whether you want to manage the settings of\nthe Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.\n\n\nExamples\n\n\nSet the list of extensions supported by the Public CDN\n\n\nspo cdn policy \nset\n -t Public -p IncludeFileExtensions -v CSS,EOT,GIF,ICO,JPEG,JPG,JS,MAP,PNG,SVG,TTF,WOFF,JSON\n\n\n\n\n\nMore information\n\n\n\n\nGeneral availability of Office 365 CDN: \nhttps://dev.office.com/blogs/general-availability-of-office-365-cdn", 
            "title": "cdn policy set"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-policy-set/#spo-cdn-policy-set", 
            "text": "Sets CDN policy value for the current SharePoint Online tenant", 
            "title": "spo cdn policy set"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-policy-set/#usage", 
            "text": "spo cdn policy  set   [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-policy-set/#options", 
            "text": "Option  Description      --help  output usage information    -t, --type [type]  Type of CDN to manage.  Public|Private . Default  Public    -p, --policy  policy  CDN policy to configure.  IncludeFileExtensions|ExcludeRestrictedSiteClassifications    -v, --value  value  Value for the policy to configure    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online tenant admin site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-policy-set/#remarks", 
            "text": "To set the policy of an Office 365 CDN, you have to first connect to a tenant admin site using the spo connect  command, eg.  spo connect https://contoso-admin.sharepoint.com .\nIf you are connected to a different site and will try to manage tenant properties,\nyou will get an error.  Using the  -t, --type  option you can choose whether you want to manage the settings of\nthe Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-policy-set/#examples", 
            "text": "Set the list of extensions supported by the Public CDN  spo cdn policy  set  -t Public -p IncludeFileExtensions -v CSS,EOT,GIF,ICO,JPEG,JPG,JS,MAP,PNG,SVG,TTF,WOFF,JSON", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-policy-set/#more-information", 
            "text": "General availability of Office 365 CDN:  https://dev.office.com/blogs/general-availability-of-office-365-cdn", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-set/", 
            "text": "spo cdn set\n\n\nEnable or disable the specified Office 365 CDN\n\n\nUsage\n\n\nspo cdn \nset\n \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-e, --enabled \nenabled\n\n\nSet to true to enable CDN or to false to disable it. Valid values are true\n\n\n\n\n\n\n-t, --type [type]\n\n\nType of CDN to manage. \nPublic|Private\n. Default \nPublic\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online tenant admin site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo enable or disable an Office 365 CDN, you have to first connect to a tenant admin site using the\n\nspo connect\n command, eg. \nspo connect https://contoso-admin.sharepoint.com\n.\nIf you are connected to a different site and will try to manage tenant properties,\nyou will get an error.\n\n\nUsing the \n-t, --type\n option you can choose whether you want to manage the settings of\nthe Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.\n\n\nUsing the \n-e, --enabled\n option you can specify whether the given CDN type should be\nenabled or disabled. Use true to enable the specified CDN and false to\ndisable it.\n\n\nExamples\n\n\nEnable the Office 365 Public CDN on the current tenant\n\n\nspo cdn \nset\n -t Public -e \ntrue\n\n\n\n\n\n\nDisable the Office 365 Public CDN on the current tenant\n\n\nspo cdn \nset\n -t Public -e \nfalse\n\n\n\n\n\n\nMore information\n\n\n\n\nGeneral availability of Office 365 CDN: \nhttps://dev.office.com/blogs/general-availability-of-office-365-cdn", 
            "title": "cdn set"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-set/#spo-cdn-set", 
            "text": "Enable or disable the specified Office 365 CDN", 
            "title": "spo cdn set"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-set/#usage", 
            "text": "spo cdn  set   [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-set/#options", 
            "text": "Option  Description      --help  output usage information    -e, --enabled  enabled  Set to true to enable CDN or to false to disable it. Valid values are true    -t, --type [type]  Type of CDN to manage.  Public|Private . Default  Public    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online tenant admin site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-set/#remarks", 
            "text": "To enable or disable an Office 365 CDN, you have to first connect to a tenant admin site using the spo connect  command, eg.  spo connect https://contoso-admin.sharepoint.com .\nIf you are connected to a different site and will try to manage tenant properties,\nyou will get an error.  Using the  -t, --type  option you can choose whether you want to manage the settings of\nthe Public (default) or Private CDN. If you don't use the option, the command will use the Public CDN.  Using the  -e, --enabled  option you can specify whether the given CDN type should be\nenabled or disabled. Use true to enable the specified CDN and false to\ndisable it.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-set/#examples", 
            "text": "Enable the Office 365 Public CDN on the current tenant  spo cdn  set  -t Public -e  true   Disable the Office 365 Public CDN on the current tenant  spo cdn  set  -t Public -e  false", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/cdn/cdn-set/#more-information", 
            "text": "General availability of Office 365 CDN:  https://dev.office.com/blogs/general-availability-of-office-365-cdn", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-add/", 
            "text": "spo customaction add\n\n\nAdds a user custom action for site or site collection\n\n\nUsage\n\n\nspo customaction add \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-u, --url \nurl\n\n\nUrl of the site or site collection to add the custom action\n\n\n\n\n\n\n-n, --name \nname\n\n\nThe name of the custom action\n\n\n\n\n\n\n-t, --title \ntitle\n\n\nThe title of the custom action\n\n\n\n\n\n\n-l, --location \nlocation\n\n\nThe actual location where this custom action need to be added like \nCommandUI.Ribbon\n\n\n\n\n\n\n-g, --group [group]\n\n\nThe group where this custom action needs to be added like \nSiteActions\n\n\n\n\n\n\n-d, --description [description]\n\n\nThe description of the custom action\n\n\n\n\n\n\n--sequence [sequence]\n\n\nSequence of this CustomAction being injected. Use when you have a specific sequence with which to have multiple CustomActions being added to the page\n\n\n\n\n\n\n--actionUrl [actionUrl]\n\n\nThe URL, URI or JavaScript function associated with the action. URL example \n~site/_layouts/sampleurl.aspx\n or \n~sitecollection/_layouts/sampleurl.aspx\n\n\n\n\n\n\n--imageUrl [imageUrl]\n\n\nThe URL of the image associated with the custom action\n\n\n\n\n\n\n-e, --commandUIExtension [commandUIExtension]\n\n\nXML fragment that determines user interface properties of the custom action\n\n\n\n\n\n\n--registrationId [registrationId]\n\n\nSpecifies the identifier of the list or item content type that this action is associated with, or the file type or programmatic identifier\n\n\n\n\n\n\n--registrationType [registrationType]\n\n\nSpecifies the type of object associated with the custom action. Allowed values \nNone|List|ContentType|ProgId|FileType\n. Default \nNone\n\n\n\n\n\n\n--rights [rights]\n\n\nA case sensitive string array that contain the permissions needed for the custom action. Allowed values \nEmptyMask|ViewListItems|AddListItems|EditListItems|DeleteListItems|ApproveItems|OpenItems|ViewVersions|DeleteVersions|CancelCheckout|ManagePersonalViews|ManageLists|ViewFormPages|AnonymousSearchAccessList|Open|ViewPages|AddAndCustomizePages|ApplyThemeAndBorder|ApplyStyleSheets|ViewUsageData|CreateSSCSite|ManageSubwebs|CreateGroups|ManagePermissions|BrowseDirectories|BrowseUserInfo|AddDelPrivateWebParts|UpdatePersonalWebParts|ManageWeb|AnonymousSearchAccessWebLists|UseClientIntegration|UseRemoteAPIs|ManageAlerts|CreateAlerts|EditMyUserInfo|EnumeratePermissions|FullMask\n. Default \nEmptyMask\n\n\n\n\n\n\n-s, --scope [scope]\n\n\nScope of the custom action. Allowed values \nSite|Web\n. Default \nWeb\n\n\n\n\n\n\n--scriptBlock [scriptBlock]\n\n\nSpecifies a block of script to be executed. This attribute is only applicable when the Location attribute is set to ScriptLink\n\n\n\n\n\n\n--scriptSrc [scriptSrc]\n\n\nSpecifies a file that contains script to be executed. This attribute is only applicable when the Location attribute is set to ScriptLink\n\n\n\n\n\n\n-c, --clientSideComponentId [clientSideComponentId]\n\n\nThe Client Side Component Id (GUID) of the custom action\n\n\n\n\n\n\n-p, --clientSideComponentProperties [clientSideComponentProperties]\n\n\nThe Client Side Component Properties of the custom action. Specify values as a JSON string : \n'{\"testMessage\":\"Test message\"}'\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo create custom action, you have to first connect to a SharePoint Online site using the \nspo connect\n command, eg. \nspo connect https://contoso.sharepoint.com\n.\n\n\nRunning this command from the Windows Command Shell (cmd.exe) or PowerShell for Windows OS XP, 7, 8, 8.1 without bash installed might require additional formatting for command options that have JSON, XML or JavaScript values because the command shell treat quotes differently. For example, this is how ApplicationCustomizer user custom action can be created from the Windows cmd.exe:\n\n\no365 spo customaction add -u https://contoso.sharepoint.com/sites/test -t \nYourAppCustomizer\n -n \nYourName\n -l \nClientSideExtension.ApplicationCustomizer\n -c b41916e7-e69d-467f-b37f-ff8ecf8f99f2 -p \n{\\\ntestMessage\\\n:\\\nTest message\\\n}\n\n\n\n\n\n\nNote, how the clientSideComponentProperties option (-p) has escaped double quotes \n'{\\\"testMessage\\\":\\\"Test message\\\"}'\n compared to execution from bash or immersive mode \n'{\"testMessage\":\"Test message\"}'\n.\n\n\nThe \n--rights\n option accepts \ncase sensitive\n values.\n\n\nExamples\n\n\nAdds tenant-wide SharePoint Framework Application Customizer extension in site \nhttps://contoso.sharepoint.com/sites/test\n\n\nspo customaction add -u https://contoso.sharepoint.com/sites/test -t \nYourAppCustomizer\n -n \nYourName\n -l \nClientSideExtension.ApplicationCustomizer\n -c b41916e7-e69d-467f-b37f-ff8ecf8f99f2 -p \n{\ntestMessage\n:\nTest message\n}\n\n\n\n\n\n\nAdds tenant-wide SharePoint Framework \nmodern List View\n Command Set extension in site \nhttps://contoso.sharepoint.com/sites/test\n\n\nspo customaction add -u https://contoso.sharepoint.com/sites/test -t \nYourCommandSet\n -n \nYourName\n -l \nClientSideExtension.ListViewCommandSet\n -c db3e6e35-363c-42b9-a254-ca661e437848 -p \n{\nsampleTextOne\n:\nOne item is selected in the list.\n, \nsampleTextTwo\n:\nThis command is always visible.\n}\n --registrationId \n100\n --registrationType List\n\n\n\n\n\nCreates url custom action in the SiteActions menu in site \nhttps://contoso.sharepoint.com/sites/test\n\n\nspo customaction add -u https://contoso.sharepoint.com/sites/test -t \nYourTitle\n -n \nYourName\n -l \nMicrosoft.SharePoint.StandardMenu\n -g \nSiteActions\n --actionUrl \n~site/SitePages/Home.aspx\n --sequence \n100\n\n\n\n\n\n\nCreates custom action in \nclassic\n Document Library edit context menu in site \nhttps://contoso.sharepoint.com/sites/test\n\n\nspo customaction add -u https://contoso.sharepoint.com/sites/test -t \nYourTitle\n -n \nYourName\n -l \nEditControlBlock\n --actionUrl \njavascript:(function(){ return console.log(\noffice365-cli rocks!\n); })();\n --registrationId \n101\n --registrationType List\n\n\n\n\n\nCreates ScriptLink custom action with script source in \nclassic pages\n in site collection \nhttps://contoso.sharepoint.com/sites/test\n\n\nspo customaction add -u https://contoso.sharepoint.com/sites/test -t \nYourTitle\n -n \nYourName\n -l \nScriptLink\n --scriptSrc \n~sitecollection/SiteAssets/YourScript.js\n --sequence \n101\n -s Site\n\n\n\n\n\nCreates ScriptLink custom action with script block in \nclassic pages\n in site \nhttps://contoso.sharepoint.com/sites/test\n\n\nspo customaction add -u https://contoso.sharepoint.com/sites/test -t \nYourTitle\n -n \nYourName\n -l \nScriptLink\n --scriptBlock \n(function(){ return console.log(\nHello office365-cli!\n); })();\n --sequence \n102\n\n\n\n\n\n\nCreates \nclassic List View\n custom action located in the Ribbon in site \nhttps://contoso.sharepoint.com/sites/test\n\n\nspo customaction add -u https://contoso.sharepoint.com/sites/test -t \nYourTitle\n -n \nYourName\n -l \nCommandUI.Ribbon\n --commandUIExtension \nCommandUIExtension\nCommandUIDefinitions\nCommandUIDefinition Location = \nRibbon.List.Share.Controls._children\nButton Id = \nRibbon.List.Share.GetItemsCountButton\n Alt = \nGet list items count\n Sequence = \n11\n Command = \nInvoke_GetItemsCountButtonRequest\n LabelText = \nGet Items Count\n TemplateAlias = \no1\n Image32by32 = \n_layouts/15/images/placeholder32x32.png\n Image16by16 = \n_layouts/15/images/placeholder16x16.png\n /\n/CommandUIDefinition\n/CommandUIDefinitions\nCommandUIHandlers\nCommandUIHandler Command = \nInvoke_GetItemsCountButtonRequest\n CommandAction = \njavascript: alert(ctx.TotalListItems);\n EnabledScript = \njavascript: function checkEnable() { return (true);} checkEnable();\n/\n/CommandUIHandlers\n/CommandUIExtension\n\n\n\n\n\n\nCreates custom action with delegated rights in the SiteActions menu in site \nhttps://contoso.sharepoint.com/sites/test\n\n\nspo customaction add -u https://contoso.sharepoint.com/sites/test -t \nYourTitle\n -n \nYourName\n -l \nMicrosoft.SharePoint.StandardMenu\n -g \nSiteActions\n --actionUrl \n~site/SitePages/Home.aspx\n --rights \nAddListItems,DeleteListItems,ManageLists\n\n\n\n\n\n\nMore information\n\n\n\n\nUserCustomAction REST API resources: \nhttps://msdn.microsoft.com/en-us/library/office/dn531432.aspx#bk_UserCustomAction\n\n\nUserCustomAction Locations and Group IDs: \nhttps://msdn.microsoft.com/en-us/library/office/bb802730.aspx\n\n\nUserCustomAction Element: \nhttps://msdn.microsoft.com/en-us/library/office/ms460194.aspx\n\n\nUserCustomAction Rights: \nhttps://msdn.microsoft.com/en-us/library/office/microsoft.sharepoint.spbasepermissions.aspx", 
            "title": "customaction add"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-add/#spo-customaction-add", 
            "text": "Adds a user custom action for site or site collection", 
            "title": "spo customaction add"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-add/#usage", 
            "text": "spo customaction add  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-add/#options", 
            "text": "Option  Description      --help  output usage information    -u, --url  url  Url of the site or site collection to add the custom action    -n, --name  name  The name of the custom action    -t, --title  title  The title of the custom action    -l, --location  location  The actual location where this custom action need to be added like  CommandUI.Ribbon    -g, --group [group]  The group where this custom action needs to be added like  SiteActions    -d, --description [description]  The description of the custom action    --sequence [sequence]  Sequence of this CustomAction being injected. Use when you have a specific sequence with which to have multiple CustomActions being added to the page    --actionUrl [actionUrl]  The URL, URI or JavaScript function associated with the action. URL example  ~site/_layouts/sampleurl.aspx  or  ~sitecollection/_layouts/sampleurl.aspx    --imageUrl [imageUrl]  The URL of the image associated with the custom action    -e, --commandUIExtension [commandUIExtension]  XML fragment that determines user interface properties of the custom action    --registrationId [registrationId]  Specifies the identifier of the list or item content type that this action is associated with, or the file type or programmatic identifier    --registrationType [registrationType]  Specifies the type of object associated with the custom action. Allowed values  None|List|ContentType|ProgId|FileType . Default  None    --rights [rights]  A case sensitive string array that contain the permissions needed for the custom action. Allowed values  EmptyMask|ViewListItems|AddListItems|EditListItems|DeleteListItems|ApproveItems|OpenItems|ViewVersions|DeleteVersions|CancelCheckout|ManagePersonalViews|ManageLists|ViewFormPages|AnonymousSearchAccessList|Open|ViewPages|AddAndCustomizePages|ApplyThemeAndBorder|ApplyStyleSheets|ViewUsageData|CreateSSCSite|ManageSubwebs|CreateGroups|ManagePermissions|BrowseDirectories|BrowseUserInfo|AddDelPrivateWebParts|UpdatePersonalWebParts|ManageWeb|AnonymousSearchAccessWebLists|UseClientIntegration|UseRemoteAPIs|ManageAlerts|CreateAlerts|EditMyUserInfo|EnumeratePermissions|FullMask . Default  EmptyMask    -s, --scope [scope]  Scope of the custom action. Allowed values  Site|Web . Default  Web    --scriptBlock [scriptBlock]  Specifies a block of script to be executed. This attribute is only applicable when the Location attribute is set to ScriptLink    --scriptSrc [scriptSrc]  Specifies a file that contains script to be executed. This attribute is only applicable when the Location attribute is set to ScriptLink    -c, --clientSideComponentId [clientSideComponentId]  The Client Side Component Id (GUID) of the custom action    -p, --clientSideComponentProperties [clientSideComponentProperties]  The Client Side Component Properties of the custom action. Specify values as a JSON string :  '{\"testMessage\":\"Test message\"}'    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-add/#remarks", 
            "text": "To create custom action, you have to first connect to a SharePoint Online site using the  spo connect  command, eg.  spo connect https://contoso.sharepoint.com .  Running this command from the Windows Command Shell (cmd.exe) or PowerShell for Windows OS XP, 7, 8, 8.1 without bash installed might require additional formatting for command options that have JSON, XML or JavaScript values because the command shell treat quotes differently. For example, this is how ApplicationCustomizer user custom action can be created from the Windows cmd.exe:  o365 spo customaction add -u https://contoso.sharepoint.com/sites/test -t  YourAppCustomizer  -n  YourName  -l  ClientSideExtension.ApplicationCustomizer  -c b41916e7-e69d-467f-b37f-ff8ecf8f99f2 -p  {\\ testMessage\\ :\\ Test message\\ }   Note, how the clientSideComponentProperties option (-p) has escaped double quotes  '{\\\"testMessage\\\":\\\"Test message\\\"}'  compared to execution from bash or immersive mode  '{\"testMessage\":\"Test message\"}' .  The  --rights  option accepts  case sensitive  values.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-add/#examples", 
            "text": "Adds tenant-wide SharePoint Framework Application Customizer extension in site  https://contoso.sharepoint.com/sites/test  spo customaction add -u https://contoso.sharepoint.com/sites/test -t  YourAppCustomizer  -n  YourName  -l  ClientSideExtension.ApplicationCustomizer  -c b41916e7-e69d-467f-b37f-ff8ecf8f99f2 -p  { testMessage : Test message }   Adds tenant-wide SharePoint Framework  modern List View  Command Set extension in site  https://contoso.sharepoint.com/sites/test  spo customaction add -u https://contoso.sharepoint.com/sites/test -t  YourCommandSet  -n  YourName  -l  ClientSideExtension.ListViewCommandSet  -c db3e6e35-363c-42b9-a254-ca661e437848 -p  { sampleTextOne : One item is selected in the list. ,  sampleTextTwo : This command is always visible. }  --registrationId  100  --registrationType List  Creates url custom action in the SiteActions menu in site  https://contoso.sharepoint.com/sites/test  spo customaction add -u https://contoso.sharepoint.com/sites/test -t  YourTitle  -n  YourName  -l  Microsoft.SharePoint.StandardMenu  -g  SiteActions  --actionUrl  ~site/SitePages/Home.aspx  --sequence  100   Creates custom action in  classic  Document Library edit context menu in site  https://contoso.sharepoint.com/sites/test  spo customaction add -u https://contoso.sharepoint.com/sites/test -t  YourTitle  -n  YourName  -l  EditControlBlock  --actionUrl  javascript:(function(){ return console.log( office365-cli rocks! ); })();  --registrationId  101  --registrationType List  Creates ScriptLink custom action with script source in  classic pages  in site collection  https://contoso.sharepoint.com/sites/test  spo customaction add -u https://contoso.sharepoint.com/sites/test -t  YourTitle  -n  YourName  -l  ScriptLink  --scriptSrc  ~sitecollection/SiteAssets/YourScript.js  --sequence  101  -s Site  Creates ScriptLink custom action with script block in  classic pages  in site  https://contoso.sharepoint.com/sites/test  spo customaction add -u https://contoso.sharepoint.com/sites/test -t  YourTitle  -n  YourName  -l  ScriptLink  --scriptBlock  (function(){ return console.log( Hello office365-cli! ); })();  --sequence  102   Creates  classic List View  custom action located in the Ribbon in site  https://contoso.sharepoint.com/sites/test  spo customaction add -u https://contoso.sharepoint.com/sites/test -t  YourTitle  -n  YourName  -l  CommandUI.Ribbon  --commandUIExtension  CommandUIExtension CommandUIDefinitions CommandUIDefinition Location =  Ribbon.List.Share.Controls._children Button Id =  Ribbon.List.Share.GetItemsCountButton  Alt =  Get list items count  Sequence =  11  Command =  Invoke_GetItemsCountButtonRequest  LabelText =  Get Items Count  TemplateAlias =  o1  Image32by32 =  _layouts/15/images/placeholder32x32.png  Image16by16 =  _layouts/15/images/placeholder16x16.png  / /CommandUIDefinition /CommandUIDefinitions CommandUIHandlers CommandUIHandler Command =  Invoke_GetItemsCountButtonRequest  CommandAction =  javascript: alert(ctx.TotalListItems);  EnabledScript =  javascript: function checkEnable() { return (true);} checkEnable(); / /CommandUIHandlers /CommandUIExtension   Creates custom action with delegated rights in the SiteActions menu in site  https://contoso.sharepoint.com/sites/test  spo customaction add -u https://contoso.sharepoint.com/sites/test -t  YourTitle  -n  YourName  -l  Microsoft.SharePoint.StandardMenu  -g  SiteActions  --actionUrl  ~site/SitePages/Home.aspx  --rights  AddListItems,DeleteListItems,ManageLists", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-add/#more-information", 
            "text": "UserCustomAction REST API resources:  https://msdn.microsoft.com/en-us/library/office/dn531432.aspx#bk_UserCustomAction  UserCustomAction Locations and Group IDs:  https://msdn.microsoft.com/en-us/library/office/bb802730.aspx  UserCustomAction Element:  https://msdn.microsoft.com/en-us/library/office/ms460194.aspx  UserCustomAction Rights:  https://msdn.microsoft.com/en-us/library/office/microsoft.sharepoint.spbasepermissions.aspx", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-get/", 
            "text": "spo customaction get\n\n\nGets information about a user custom action for site or site collection\n\n\nUsage\n\n\nspo customaction get \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-i, --id \nid\n\n\nID of the user custom action to retrieve information for\n\n\n\n\n\n\n-u, --url \nurl\n\n\nUrl of the site or site collection to retrieve the custom action from\n\n\n\n\n\n\n-s, --scope [scope]\n\n\nScope of the custom action. Allowed values \nSite|Web|All\n. Default \nAll\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo retrieve custom action, you have to first connect to a SharePoint Online site using the\n\nspo connect\n command, eg. \nspo connect https://contoso.sharepoint.com\n.\n\n\nExamples\n\n\nReturn details about the user custom action with ID \n058140e3-0e37-44fc-a1d3-79c487d371a3\n located in site or site collection \nhttps://contoso.sharepoint.com/sites/test\n\n\nspo customaction get -i 058140e3-0e37-44fc-a1d3-79c487d371a3 -u https://contoso.sharepoint.com/sites/test\n\n\n\n\n\nReturn details about the user custom action with ID \n058140e3-0e37-44fc-a1d3-79c487d371a3\n located in site or site collection \nhttps://contoso.sharepoint.com/sites/test\n\n\nspo customaction get --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --url https://contoso.sharepoint.com/sites/test\n\n\n\n\n\nReturn details about the user custom action with ID \n058140e3-0e37-44fc-a1d3-79c487d371a3\n located in site collection \nhttps://contoso.sharepoint.com/sites/test\n\n\nspo customaction get -i 058140e3-0e37-44fc-a1d3-79c487d371a3 -u https://contoso.sharepoint.com/sites/test -s Site\n\n\n\n\n\nReturn details about the user custom action with ID \n058140e3-0e37-44fc-a1d3-79c487d371a3\n located in site \nhttps://contoso.sharepoint.com/sites/test\n\n\nspo customaction get --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --url https://contoso.sharepoint.com/sites/test --scope Web\n\n\n\n\n\nMore information\n\n\n\n\nUserCustomAction REST API resources: \nhttps://msdn.microsoft.com/en-us/library/office/dn531432.aspx#bk_UserCustomAction", 
            "title": "customaction get"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-get/#spo-customaction-get", 
            "text": "Gets information about a user custom action for site or site collection", 
            "title": "spo customaction get"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-get/#usage", 
            "text": "spo customaction get  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-get/#options", 
            "text": "Option  Description      --help  output usage information    -i, --id  id  ID of the user custom action to retrieve information for    -u, --url  url  Url of the site or site collection to retrieve the custom action from    -s, --scope [scope]  Scope of the custom action. Allowed values  Site|Web|All . Default  All    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-get/#remarks", 
            "text": "To retrieve custom action, you have to first connect to a SharePoint Online site using the spo connect  command, eg.  spo connect https://contoso.sharepoint.com .", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-get/#examples", 
            "text": "Return details about the user custom action with ID  058140e3-0e37-44fc-a1d3-79c487d371a3  located in site or site collection  https://contoso.sharepoint.com/sites/test  spo customaction get -i 058140e3-0e37-44fc-a1d3-79c487d371a3 -u https://contoso.sharepoint.com/sites/test  Return details about the user custom action with ID  058140e3-0e37-44fc-a1d3-79c487d371a3  located in site or site collection  https://contoso.sharepoint.com/sites/test  spo customaction get --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --url https://contoso.sharepoint.com/sites/test  Return details about the user custom action with ID  058140e3-0e37-44fc-a1d3-79c487d371a3  located in site collection  https://contoso.sharepoint.com/sites/test  spo customaction get -i 058140e3-0e37-44fc-a1d3-79c487d371a3 -u https://contoso.sharepoint.com/sites/test -s Site  Return details about the user custom action with ID  058140e3-0e37-44fc-a1d3-79c487d371a3  located in site  https://contoso.sharepoint.com/sites/test  spo customaction get --id 058140e3-0e37-44fc-a1d3-79c487d371a3 --url https://contoso.sharepoint.com/sites/test --scope Web", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-get/#more-information", 
            "text": "UserCustomAction REST API resources:  https://msdn.microsoft.com/en-us/library/office/dn531432.aspx#bk_UserCustomAction", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-list/", 
            "text": "spo customaction list\n\n\nLists user custom actions for site or site collection\n\n\nUsage\n\n\nspo customaction list \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-u, --url \nurl\n\n\nUrl of the site or site collection to retrieve the custom action from\n\n\n\n\n\n\n-s, --scope [scope]\n\n\nScope of the custom action. Allowed values \nSite|Web|All\n. Default \nAll\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo retrieve list of custom actions, you have to first connect to a SharePoint Online site using the\n\nspo connect\n command, eg. \nspo connect https://contoso.sharepoint.com\n.\n\n\nExamples\n\n\nReturn details about all user custom actions located in site or site collection \nhttps://contoso.sharepoint.com/sites/test\n\n\nspo customaction list -u https://contoso.sharepoint.com/sites/test\n\n\n\n\n\nReturn details about all user custom actions located in site or site collection \nhttps://contoso.sharepoint.com/sites/test\n\n\nspo customaction list --url https://contoso.sharepoint.com/sites/test\n\n\n\n\n\nReturn details about all user custom actions located in site collection \nhttps://contoso.sharepoint.com/sites/test\n\n\nspo customaction list -u https://contoso.sharepoint.com/sites/test -s Site\n\n\n\n\n\nReturn details about all user custom actions located in site \nhttps://contoso.sharepoint.com/sites/test\n\n\nspo customaction list --url https://contoso.sharepoint.com/sites/test --scope Web\n\n\n\n\n\nMore information\n\n\n\n\nUserCustomAction REST API resources: \nhttps://msdn.microsoft.com/en-us/library/office/dn531432.aspx#bk_UserCustomAction", 
            "title": "customaction list"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-list/#spo-customaction-list", 
            "text": "Lists user custom actions for site or site collection", 
            "title": "spo customaction list"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-list/#usage", 
            "text": "spo customaction list  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-list/#options", 
            "text": "Option  Description      --help  output usage information    -u, --url  url  Url of the site or site collection to retrieve the custom action from    -s, --scope [scope]  Scope of the custom action. Allowed values  Site|Web|All . Default  All    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-list/#remarks", 
            "text": "To retrieve list of custom actions, you have to first connect to a SharePoint Online site using the spo connect  command, eg.  spo connect https://contoso.sharepoint.com .", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-list/#examples", 
            "text": "Return details about all user custom actions located in site or site collection  https://contoso.sharepoint.com/sites/test  spo customaction list -u https://contoso.sharepoint.com/sites/test  Return details about all user custom actions located in site or site collection  https://contoso.sharepoint.com/sites/test  spo customaction list --url https://contoso.sharepoint.com/sites/test  Return details about all user custom actions located in site collection  https://contoso.sharepoint.com/sites/test  spo customaction list -u https://contoso.sharepoint.com/sites/test -s Site  Return details about all user custom actions located in site  https://contoso.sharepoint.com/sites/test  spo customaction list --url https://contoso.sharepoint.com/sites/test --scope Web", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/customaction/customaction-list/#more-information", 
            "text": "UserCustomAction REST API resources:  https://msdn.microsoft.com/en-us/library/office/dn531432.aspx#bk_UserCustomAction", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/externaluser/externaluser-list/", 
            "text": "spo externaluser list\n\n\nLists external users in the tenant\n\n\nUsage\n\n\nspo externaluser list \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-f, --filter [filter]\n\n\nLimits the results to only those users whose first name, last name or email address begins with the text in the string, using a case-insensitive comparison\n\n\n\n\n\n\n-p, --pageSize [pageSize]\n\n\nSpecifies the maximum number of users to be returned in the collection. The value must be less than or equal to \n50\n\n\n\n\n\n\n-i, --position [position]\n\n\nUse to specify the zero-based index of the position in the sorted collection of the first result to be returned\n\n\n\n\n\n\n-s, --sortOrder [sortOrder]\n\n\nSpecifies the sort results in Ascending or Descending order on the \nSPOUser.Email\n property should occur. Allowed values \nasc|desc\n. Default \nasc\n\n\n\n\n\n\n-u, --siteUrl [siteUrl]\n\n\nSpecifies the site to retrieve external users for. If no site is specified, the external users for all sites are returned\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online tenant admin site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo list external users, you have to first connect to a tenant admin site using the \nspo connect\n command, eg. \nspo connect https://contoso-admin.sharepoint.com\n\n\nExamples\n\n\nList all external users from the current tenant. Show the first batch of 50 users.\n\n\nspo externaluser list --pageSize \n50\n --position \n0\n\n\n\n\n\n\nList all external users from the current tenant whose first name, last name or email address\nbegins with \nVesa\n. Show the first batch of 50 users.\n\n\nspo externaluser list --pageSize \n50\n --position \n0\n --filter Vesa\n\n\n\n\n\nList all external users from the specified site. Show the first batch of 50 users.\n\n\nspo externaluser list --pageSize \n50\n --position \n0\n --siteUrl https://contoso.sharepoint.com\n\n\n\n\n\nList all external users from the current tenant. Show the first batch of 50 users sorted descending\nby e-mail.\n\n\nspo externaluser list --pageSize \n50\n --position \n0\n --sortOrder desc", 
            "title": "externaluser list"
        }, 
        {
            "location": "/cmd/spo/externaluser/externaluser-list/#spo-externaluser-list", 
            "text": "Lists external users in the tenant", 
            "title": "spo externaluser list"
        }, 
        {
            "location": "/cmd/spo/externaluser/externaluser-list/#usage", 
            "text": "spo externaluser list  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/externaluser/externaluser-list/#options", 
            "text": "Option  Description      --help  output usage information    -f, --filter [filter]  Limits the results to only those users whose first name, last name or email address begins with the text in the string, using a case-insensitive comparison    -p, --pageSize [pageSize]  Specifies the maximum number of users to be returned in the collection. The value must be less than or equal to  50    -i, --position [position]  Use to specify the zero-based index of the position in the sorted collection of the first result to be returned    -s, --sortOrder [sortOrder]  Specifies the sort results in Ascending or Descending order on the  SPOUser.Email  property should occur. Allowed values  asc|desc . Default  asc    -u, --siteUrl [siteUrl]  Specifies the site to retrieve external users for. If no site is specified, the external users for all sites are returned    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online tenant admin site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/externaluser/externaluser-list/#remarks", 
            "text": "To list external users, you have to first connect to a tenant admin site using the  spo connect  command, eg.  spo connect https://contoso-admin.sharepoint.com", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/externaluser/externaluser-list/#examples", 
            "text": "List all external users from the current tenant. Show the first batch of 50 users.  spo externaluser list --pageSize  50  --position  0   List all external users from the current tenant whose first name, last name or email address\nbegins with  Vesa . Show the first batch of 50 users.  spo externaluser list --pageSize  50  --position  0  --filter Vesa  List all external users from the specified site. Show the first batch of 50 users.  spo externaluser list --pageSize  50  --position  0  --siteUrl https://contoso.sharepoint.com  List all external users from the current tenant. Show the first batch of 50 users sorted descending\nby e-mail.  spo externaluser list --pageSize  50  --position  0  --sortOrder desc", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-grant-list/", 
            "text": "spo serviceprincipal grant list\n\n\nLists permissions granted to the service principal\n\n\nUsage\n\n\nspo serviceprincipal grant list \n[\noptions\n]\n\n\n\n\n\n\nAlias\n\n\nspo sp grant list\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online tenant admin site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo list permission granted to the service principal, you have to first connect to a tenant admin site using the \nspo connect\n command, eg. \nspo connect https://contoso-admin.sharepoint.com\n.\n\n\nExamples\n\n\nList all permissions granted to the service principal\n\n\nspo serviceprincipal grant list", 
            "title": "serviceprincipal grant list"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-grant-list/#spo-serviceprincipal-grant-list", 
            "text": "Lists permissions granted to the service principal", 
            "title": "spo serviceprincipal grant list"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-grant-list/#usage", 
            "text": "spo serviceprincipal grant list  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-grant-list/#alias", 
            "text": "spo sp grant list", 
            "title": "Alias"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-grant-list/#options", 
            "text": "Option  Description      --help  output usage information    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online tenant admin site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-grant-list/#remarks", 
            "text": "To list permission granted to the service principal, you have to first connect to a tenant admin site using the  spo connect  command, eg.  spo connect https://contoso-admin.sharepoint.com .", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-grant-list/#examples", 
            "text": "List all permissions granted to the service principal  spo serviceprincipal grant list", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-grant-revoke/", 
            "text": "spo serviceprincipal grant revoke\n\n\nRevokes the specified set of permissions granted to the service principal\n\n\nUsage\n\n\nspo serviceprincipal grant revoke \n[\noptions\n]\n\n\n\n\n\n\nAlias\n\n\nspo sp grant revoke\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-i, --grantId \ngrantId\n\n\nObjectId\n of the permission grant to revoke\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online tenant admin site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo revoke permissions granted to the service principal, you have to first connect to a tenant admin site using the \nspo connect\n command, eg. \nspo connect https://contoso-admin.sharepoint.com\n\n\nThe permission grant you want to revoke is denoted using its \nObjectId\n. You can retrieve it using the \nspo serviceprincipal grant list\n command.\n\n\nExamples\n\n\nRevoke permission grant with ObjectId \n50NAzUm3C0K9B6p8ORLtIsQccg4rMERGvFGRtBsk2fA\n\n\nspo serviceprincipal grant revoke --grantId 50NAzUm3C0K9B6p8ORLtIsQccg4rMERGvFGRtBsk2fA", 
            "title": "serviceprincipal grant revoke"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-grant-revoke/#spo-serviceprincipal-grant-revoke", 
            "text": "Revokes the specified set of permissions granted to the service principal", 
            "title": "spo serviceprincipal grant revoke"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-grant-revoke/#usage", 
            "text": "spo serviceprincipal grant revoke  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-grant-revoke/#alias", 
            "text": "spo sp grant revoke", 
            "title": "Alias"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-grant-revoke/#options", 
            "text": "Option  Description      --help  output usage information    -i, --grantId  grantId  ObjectId  of the permission grant to revoke    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online tenant admin site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-grant-revoke/#remarks", 
            "text": "To revoke permissions granted to the service principal, you have to first connect to a tenant admin site using the  spo connect  command, eg.  spo connect https://contoso-admin.sharepoint.com  The permission grant you want to revoke is denoted using its  ObjectId . You can retrieve it using the  spo serviceprincipal grant list  command.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-grant-revoke/#examples", 
            "text": "Revoke permission grant with ObjectId  50NAzUm3C0K9B6p8ORLtIsQccg4rMERGvFGRtBsk2fA  spo serviceprincipal grant revoke --grantId 50NAzUm3C0K9B6p8ORLtIsQccg4rMERGvFGRtBsk2fA", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-approve/", 
            "text": "spo serviceprincipal permissionrequest approve\n\n\nApproves the specified permission request\n\n\nUsage\n\n\nspo serviceprincipal permissionrequest approve \n[\noptions\n]\n\n\n\n\n\n\nAlias\n\n\nspo sp permissionrequest approve\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-i, --requestId \nrequestId\n\n\nID of the permission request to approve\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online tenant admin site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo approve a permission request, you have to first connect to a tenant admin site using the \nspo connect\n command, eg. \nspo connect https://contoso-admin.sharepoint.com\n\n\nThe permission request you want to approve is denoted using its \nID\n. You can retrieve it using the \nspo serviceprincipal permissionrequest list\n command.\n\n\nExamples\n\n\nApprove permission request with id \n4dc4c043-25ee-40f2-81d3-b3bf63da7538\n\n\nspo serviceprincipal permissionrequest approve --requestId 4dc4c043-25ee-40f2-81d3-b3bf63da7538", 
            "title": "serviceprincipal permissionrequest approve"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-approve/#spo-serviceprincipal-permissionrequest-approve", 
            "text": "Approves the specified permission request", 
            "title": "spo serviceprincipal permissionrequest approve"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-approve/#usage", 
            "text": "spo serviceprincipal permissionrequest approve  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-approve/#alias", 
            "text": "spo sp permissionrequest approve", 
            "title": "Alias"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-approve/#options", 
            "text": "Option  Description      --help  output usage information    -i, --requestId  requestId  ID of the permission request to approve    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online tenant admin site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-approve/#remarks", 
            "text": "To approve a permission request, you have to first connect to a tenant admin site using the  spo connect  command, eg.  spo connect https://contoso-admin.sharepoint.com  The permission request you want to approve is denoted using its  ID . You can retrieve it using the  spo serviceprincipal permissionrequest list  command.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-approve/#examples", 
            "text": "Approve permission request with id  4dc4c043-25ee-40f2-81d3-b3bf63da7538  spo serviceprincipal permissionrequest approve --requestId 4dc4c043-25ee-40f2-81d3-b3bf63da7538", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-deny/", 
            "text": "spo serviceprincipal permissionrequest deny\n\n\nDenies the specified permission request\n\n\nUsage\n\n\nspo serviceprincipal permissionrequest deny \n[\noptions\n]\n\n\n\n\n\n\nAlias\n\n\nspo sp permissionrequest deny\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-i, --requestId \nrequestId\n\n\nID of the permission request to deny\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online tenant admin site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo deny a permission request, you have to first connect to a tenant admin site using the\n\nspo connect\n command, eg. \nspo connect https://contoso-admin.sharepoint.com\n.\n\n\nThe permission request you want to approve is denoted using its \nID\n. You can retrieve it using the \nspo serviceprincipal permissionrequest list\n command.\n\n\nExamples\n\n\nDeny permission request with id \n4dc4c043-25ee-40f2-81d3-b3bf63da7538\n\n\nspo serviceprincipal permissionrequest deny --requestId 4dc4c043-25ee-40f2-81d3-b3bf63da7538", 
            "title": "serviceprincipal permissionrequest deny"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-deny/#spo-serviceprincipal-permissionrequest-deny", 
            "text": "Denies the specified permission request", 
            "title": "spo serviceprincipal permissionrequest deny"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-deny/#usage", 
            "text": "spo serviceprincipal permissionrequest deny  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-deny/#alias", 
            "text": "spo sp permissionrequest deny", 
            "title": "Alias"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-deny/#options", 
            "text": "Option  Description      --help  output usage information    -i, --requestId  requestId  ID of the permission request to deny    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online tenant admin site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-deny/#remarks", 
            "text": "To deny a permission request, you have to first connect to a tenant admin site using the spo connect  command, eg.  spo connect https://contoso-admin.sharepoint.com .  The permission request you want to approve is denoted using its  ID . You can retrieve it using the  spo serviceprincipal permissionrequest list  command.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-deny/#examples", 
            "text": "Deny permission request with id  4dc4c043-25ee-40f2-81d3-b3bf63da7538  spo serviceprincipal permissionrequest deny --requestId 4dc4c043-25ee-40f2-81d3-b3bf63da7538", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-list/", 
            "text": "spo serviceprincipal permissionrequest list\n\n\nLists pending permission requests\n\n\nUsage\n\n\nspo serviceprincipal permissionrequest list \n[\noptions\n]\n\n\n\n\n\n\nAlias\n\n\nspo sp permissionrequest list\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online tenant admin site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo list pending permission requests, you have to first connect to a tenant admin site using the \nspo connect\n command, eg. \nspo connect https://contoso-admin.sharepoint.com\n.\n\n\nExamples\n\n\nList all pending permission requests\n\n\nspo serviceprincipal permissionrequest list", 
            "title": "serviceprincipal permissionrequest list"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-list/#spo-serviceprincipal-permissionrequest-list", 
            "text": "Lists pending permission requests", 
            "title": "spo serviceprincipal permissionrequest list"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-list/#usage", 
            "text": "spo serviceprincipal permissionrequest list  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-list/#alias", 
            "text": "spo sp permissionrequest list", 
            "title": "Alias"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-list/#options", 
            "text": "Option  Description      --help  output usage information    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online tenant admin site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-list/#remarks", 
            "text": "To list pending permission requests, you have to first connect to a tenant admin site using the  spo connect  command, eg.  spo connect https://contoso-admin.sharepoint.com .", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-permissionrequest-list/#examples", 
            "text": "List all pending permission requests  spo serviceprincipal permissionrequest list", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-set/", 
            "text": "spo serviceprincipal set\n\n\nEnable or disable the service principal\n\n\nUsage\n\n\nspo serviceprincipal \nset\n \n[\noptions\n]\n\n\n\n\n\n\nAlias\n\n\nspo sp \nset\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-e, --enabled \nenabled\n\n\nSet to \ntrue\n to enable the service principal or to \nfalse\n to disable it. Valid values are \ntrue|false\n\n\n\n\n\n\n--confirm\n\n\nDon't prompt for confirming enabling/disabling the service principal\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online tenant admin site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo enable or disable the service principal, you have to first connect to a SharePoint tenant admin site using the \nspo connect\n command, eg. \nspo connect https://contoso-admin.sharepoint.com\n.\n\n\nUsing the \n-e, --enabled\n option you can specify whether the service principal should be enabled or disabled. Use \ntrue\n to enable the service principal and \nfalse\n to disable it.\n\n\nExamples\n\n\nEnable the service principal. Will prompt for confirmation\n\n\nspo serviceprincipal \nset\n --enabled \ntrue\n\n\n\n\n\n\nDisable the service principal. Will prompt for confirmation\n\n\nspo serviceprincipal \nset\n --enabled \nfalse\n\n\n\n\n\n\nEnable the service principal without prompting for confirmation\n\n\nspo serviceprincipal \nset\n --enabled \ntrue\n --confirm", 
            "title": "serviceprincipal set"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-set/#spo-serviceprincipal-set", 
            "text": "Enable or disable the service principal", 
            "title": "spo serviceprincipal set"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-set/#usage", 
            "text": "spo serviceprincipal  set   [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-set/#alias", 
            "text": "spo sp  set", 
            "title": "Alias"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-set/#options", 
            "text": "Option  Description      --help  output usage information    -e, --enabled  enabled  Set to  true  to enable the service principal or to  false  to disable it. Valid values are  true|false    --confirm  Don't prompt for confirming enabling/disabling the service principal    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online tenant admin site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-set/#remarks", 
            "text": "To enable or disable the service principal, you have to first connect to a SharePoint tenant admin site using the  spo connect  command, eg.  spo connect https://contoso-admin.sharepoint.com .  Using the  -e, --enabled  option you can specify whether the service principal should be enabled or disabled. Use  true  to enable the service principal and  false  to disable it.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/serviceprincipal/serviceprincipal-set/#examples", 
            "text": "Enable the service principal. Will prompt for confirmation  spo serviceprincipal  set  --enabled  true   Disable the service principal. Will prompt for confirmation  spo serviceprincipal  set  --enabled  false   Enable the service principal without prompting for confirmation  spo serviceprincipal  set  --enabled  true  --confirm", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/site/site-add/", 
            "text": "spo site add\n\n\nCreates new modern site\n\n\nUsage\n\n\nspo site add \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n--type [type]\n\n\nType of modern sites to list. Allowed values \nTeamSite|CommunicationSite\n, default \nTeamSite\n\n\n\n\n\n\n-u, --url \nurl\n\n\nSite URL (applies only to communication sites)\n\n\n\n\n\n\n-a, --alias \nalias\n\n\nSite alias, used in the URL and in the team site group e-mail (applies only to team sites)\n\n\n\n\n\n\n-t, --title \ntitle\n\n\nSite title\n\n\n\n\n\n\n-d, --description [description]\n\n\nSite description\n\n\n\n\n\n\n-c, --classification [classification]\n\n\nSite classification\n\n\n\n\n\n\n--isPublic\n\n\nDetermines if the associated group is public or not (applies only to team sites)\n\n\n\n\n\n\n--allowFileSharingForGuestUsers\n\n\nDetermines whether it's allowed to share file with guests (applies only to communication sites)\n\n\n\n\n\n\n--siteDesign [siteDesign]\n\n\nType of communication site to create. Allowed values \nTopic|Showcase|Blank\n, default \nTopic\n. When creating a communication site, specify either \nsiteDesign\n or \nsiteDesignId\n (applies only to communication sites)\n\n\n\n\n\n\n--siteDesignId [siteDesignId]\n\n\nId of the custom site design to use to create the site. When creating a communication site, specify either \nsiteDesign\n or \nsiteDesignId\n (applies only to communication sites)\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo create a modern site, you have to first connect to a SharePoint site using the \nspo connect\n command, eg. \nspo connect https://contoso.sharepoint.com\n.\n\n\nExamples\n\n\nCreate modern team site with private group\n\n\nspo site add --alias team1 --title Team \n1\n\n\n\n\n\n\nCreate modern team site with description and classification\n\n\nspo site add --type TeamSite -a team1 -t Team \n1\n --description Site of team \n1\n --classification LBI\n\n\n\n\n\nCreate modern team site with public group\n\n\nspo site add --type TeamSite -a team1 -t Team \n1\n --isPublic\n\n\n\n\n\nCreate communication site using the Topic design\n\n\nspo site add --type CommunicationSite --url https://contoso.sharepoint.com/sites/marketing --title Marketing\n\n\n\n\n\nCreate communication site using the Showcase design\n\n\nspo site add --type CommunicationSite -u https://contoso.sharepoint.com/sites/marketing -t Marketing --siteDesign Showcase\n\n\n\n\n\nCreate communication site using a custom site design\n\n\nspo site add --type CommunicationSite -u https://contoso.sharepoint.com/sites/marketing -t Marketing --siteDesignId 99f410fe-dd79-4b9d-8531-f2270c9c621c\n\n\n\n\n\nCreate communication site using the Blank design with description and classification\n\n\nspo site add --type CommunicationSite -u https://contoso.sharepoint.com/sites/marketing -t Marketing -d Site of the marketing department -c MBI --siteDesign Blank\n\n\n\n\n\nMore information\n\n\n\n\nCreating SharePoint Communication Site using REST: \nhttps://docs.microsoft.com/en-us/sharepoint/dev/apis/communication-site-creation-rest", 
            "title": "site add"
        }, 
        {
            "location": "/cmd/spo/site/site-add/#spo-site-add", 
            "text": "Creates new modern site", 
            "title": "spo site add"
        }, 
        {
            "location": "/cmd/spo/site/site-add/#usage", 
            "text": "spo site add  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/site/site-add/#options", 
            "text": "Option  Description      --help  output usage information    --type [type]  Type of modern sites to list. Allowed values  TeamSite|CommunicationSite , default  TeamSite    -u, --url  url  Site URL (applies only to communication sites)    -a, --alias  alias  Site alias, used in the URL and in the team site group e-mail (applies only to team sites)    -t, --title  title  Site title    -d, --description [description]  Site description    -c, --classification [classification]  Site classification    --isPublic  Determines if the associated group is public or not (applies only to team sites)    --allowFileSharingForGuestUsers  Determines whether it's allowed to share file with guests (applies only to communication sites)    --siteDesign [siteDesign]  Type of communication site to create. Allowed values  Topic|Showcase|Blank , default  Topic . When creating a communication site, specify either  siteDesign  or  siteDesignId  (applies only to communication sites)    --siteDesignId [siteDesignId]  Id of the custom site design to use to create the site. When creating a communication site, specify either  siteDesign  or  siteDesignId  (applies only to communication sites)    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/site/site-add/#remarks", 
            "text": "To create a modern site, you have to first connect to a SharePoint site using the  spo connect  command, eg.  spo connect https://contoso.sharepoint.com .", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/site/site-add/#examples", 
            "text": "Create modern team site with private group  spo site add --alias team1 --title Team  1   Create modern team site with description and classification  spo site add --type TeamSite -a team1 -t Team  1  --description Site of team  1  --classification LBI  Create modern team site with public group  spo site add --type TeamSite -a team1 -t Team  1  --isPublic  Create communication site using the Topic design  spo site add --type CommunicationSite --url https://contoso.sharepoint.com/sites/marketing --title Marketing  Create communication site using the Showcase design  spo site add --type CommunicationSite -u https://contoso.sharepoint.com/sites/marketing -t Marketing --siteDesign Showcase  Create communication site using a custom site design  spo site add --type CommunicationSite -u https://contoso.sharepoint.com/sites/marketing -t Marketing --siteDesignId 99f410fe-dd79-4b9d-8531-f2270c9c621c  Create communication site using the Blank design with description and classification  spo site add --type CommunicationSite -u https://contoso.sharepoint.com/sites/marketing -t Marketing -d Site of the marketing department -c MBI --siteDesign Blank", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/site/site-add/#more-information", 
            "text": "Creating SharePoint Communication Site using REST:  https://docs.microsoft.com/en-us/sharepoint/dev/apis/communication-site-creation-rest", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/site/site-get/", 
            "text": "spo site get\n\n\nGets information about the specific site collection\n\n\nUsage\n\n\nspo site get \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-u, --url \nurl\n\n\nURL of the site to retrieve information for\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online tenant admin site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo get information about a site collection, you have to first connect to a tenant admin site using the \nspo connect\n command, eg. \nspo connect https://contoso-admin.sharepoint.com\n. If you are connected to a different site and will try to to get site collection information, you will get an error.\n\n\nThis command can retrieve information for both classic and modern sites.\n\n\nExamples\n\n\nReturn information about the \nhttps://contoso.sharepoint.com/sites/project-x\n site collection.\n\n\nspo site get -u https://contoso.sharepoint.com/sites/project-x", 
            "title": "site get"
        }, 
        {
            "location": "/cmd/spo/site/site-get/#spo-site-get", 
            "text": "Gets information about the specific site collection", 
            "title": "spo site get"
        }, 
        {
            "location": "/cmd/spo/site/site-get/#usage", 
            "text": "spo site get  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/site/site-get/#options", 
            "text": "Option  Description      --help  output usage information    -u, --url  url  URL of the site to retrieve information for    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online tenant admin site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/site/site-get/#remarks", 
            "text": "To get information about a site collection, you have to first connect to a tenant admin site using the  spo connect  command, eg.  spo connect https://contoso-admin.sharepoint.com . If you are connected to a different site and will try to to get site collection information, you will get an error.  This command can retrieve information for both classic and modern sites.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/site/site-get/#examples", 
            "text": "Return information about the  https://contoso.sharepoint.com/sites/project-x  site collection.  spo site get -u https://contoso.sharepoint.com/sites/project-x", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/site/site-list/", 
            "text": "spo site list\n\n\nLists modern sites of the given type\n\n\nUsage\n\n\nspo site list \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n--type [type]\n\n\ntype of modern sites to list. Allowed values \nTeamSite|CommunicationSite\n, default \nTeamSite\n\n\n\n\n\n\n-f, --filter [filter]\n\n\nfilter to apply when retrieving sites\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online tenant admin site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo list modern sites, you have to first connect to a tenant admin site using the \nspo connect\n command, eg. \nspo connect https://contoso-admin.sharepoint.com\n. If you are connected to a different site and will try to list the available sites, you will get an error.\n\n\nUsing the \n-f, --filter\n option you can specify which sites you want to retrieve. For example, to get sites with \nproject\n in their URL, use \nUrl -like 'project'\n as the filter.\n\n\nExamples\n\n\nList all modern team sites in the currently connected tenant\n\n\nspo site list\n\n\n\n\n\nList all modern team sites in the currently connected tenant\n\n\nspo site list --type TeamSite\n\n\n\n\n\nList all modern communication sites in the currently connected tenant\n\n\nspo site list --type CommunicationSite\n\n\n\n\n\nList all modern team sites that contain \nproject\n in the URL\n\n\nspo site list --type TeamSite --filter \nUrl -like \nproject", 
            "title": "site list"
        }, 
        {
            "location": "/cmd/spo/site/site-list/#spo-site-list", 
            "text": "Lists modern sites of the given type", 
            "title": "spo site list"
        }, 
        {
            "location": "/cmd/spo/site/site-list/#usage", 
            "text": "spo site list  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/site/site-list/#options", 
            "text": "Option  Description      --help  output usage information    --type [type]  type of modern sites to list. Allowed values  TeamSite|CommunicationSite , default  TeamSite    -f, --filter [filter]  filter to apply when retrieving sites    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online tenant admin site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/site/site-list/#remarks", 
            "text": "To list modern sites, you have to first connect to a tenant admin site using the  spo connect  command, eg.  spo connect https://contoso-admin.sharepoint.com . If you are connected to a different site and will try to list the available sites, you will get an error.  Using the  -f, --filter  option you can specify which sites you want to retrieve. For example, to get sites with  project  in their URL, use  Url -like 'project'  as the filter.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/site/site-list/#examples", 
            "text": "List all modern team sites in the currently connected tenant  spo site list  List all modern team sites in the currently connected tenant  spo site list --type TeamSite  List all modern communication sites in the currently connected tenant  spo site list --type CommunicationSite  List all modern team sites that contain  project  in the URL  spo site list --type TeamSite --filter  Url -like  project", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/site/site-appcatalog-add/", 
            "text": "spo site appcatalog add\n\n\nCreates a site collection app catalog in the specified site\n\n\nUsage\n\n\nspo site appcatalog add --url \nurl\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-u, --url \nurl\n\n\nURL of the site collection where the app catalog should be added\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo create a site collection app catalog, you have to first connect to a SharePoint site using the \nspo connect\n command, eg. \nspo connect https://contoso.sharepoint.com\n.\n\n\nExamples\n\n\nAdd a site collection app catalog to the specified site\n\n\nspo site appcatalog add --url https://contoso.sharepoint/sites/site\n\n\n\n\n\nMore information\n\n\n\n\nUse the site collection app catalog: \nhttps://docs.microsoft.com/en-us/sharepoint/dev/general-development/site-collection-app-catalog", 
            "title": "site appcatalog add"
        }, 
        {
            "location": "/cmd/spo/site/site-appcatalog-add/#spo-site-appcatalog-add", 
            "text": "Creates a site collection app catalog in the specified site", 
            "title": "spo site appcatalog add"
        }, 
        {
            "location": "/cmd/spo/site/site-appcatalog-add/#usage", 
            "text": "spo site appcatalog add --url  url", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/site/site-appcatalog-add/#options", 
            "text": "Option  Description      --help  output usage information    -u, --url  url  URL of the site collection where the app catalog should be added    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/site/site-appcatalog-add/#remarks", 
            "text": "To create a site collection app catalog, you have to first connect to a SharePoint site using the  spo connect  command, eg.  spo connect https://contoso.sharepoint.com .", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/site/site-appcatalog-add/#examples", 
            "text": "Add a site collection app catalog to the specified site  spo site appcatalog add --url https://contoso.sharepoint/sites/site", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/site/site-appcatalog-add/#more-information", 
            "text": "Use the site collection app catalog:  https://docs.microsoft.com/en-us/sharepoint/dev/general-development/site-collection-app-catalog", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/site/site-appcatalog-remove/", 
            "text": "spo site appcatalog remove\n\n\nRemoves a site collection app catalog in the specified site\n\n\nUsage\n\n\nspo site appcatalog remove --url \nurl\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-u, --url \nurl\n\n\nURL of the site collection containing the app catalog to disable\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo remove an app catalog from a site collection, you have to first connect to a SharePoint site using the \nspo connect\n command, eg. \nspo connect https://contoso.sharepoint.com\n.\n\n\nWhile the command uses the term \n\"remove\"\n, like the PowerShell equivalent cmdlet, it does not remove the special library \nApps for SharePoint\n from the site collection. It simply disables the site collection app catalog in that site. Packages deployed to the app catalog are not available within the site collection.\n\n\nExamples\n\n\nRemove app catalog for specified site collection.\n\n\nspo site appcatalog remove --url https://contoso.sharepoint/sites/site\n\n\n\n\n\nMore information\n\n\n\n\nUse the site collection app catalog: \nhttps://docs.microsoft.com/en-us/sharepoint/dev/general-development/site-collection-app-catalog", 
            "title": "site appcatalog remove"
        }, 
        {
            "location": "/cmd/spo/site/site-appcatalog-remove/#spo-site-appcatalog-remove", 
            "text": "Removes a site collection app catalog in the specified site", 
            "title": "spo site appcatalog remove"
        }, 
        {
            "location": "/cmd/spo/site/site-appcatalog-remove/#usage", 
            "text": "spo site appcatalog remove --url  url", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/site/site-appcatalog-remove/#options", 
            "text": "Option  Description      --help  output usage information    -u, --url  url  URL of the site collection containing the app catalog to disable    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/site/site-appcatalog-remove/#remarks", 
            "text": "To remove an app catalog from a site collection, you have to first connect to a SharePoint site using the  spo connect  command, eg.  spo connect https://contoso.sharepoint.com .  While the command uses the term  \"remove\" , like the PowerShell equivalent cmdlet, it does not remove the special library  Apps for SharePoint  from the site collection. It simply disables the site collection app catalog in that site. Packages deployed to the app catalog are not available within the site collection.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/site/site-appcatalog-remove/#examples", 
            "text": "Remove app catalog for specified site collection.  spo site appcatalog remove --url https://contoso.sharepoint/sites/site", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/site/site-appcatalog-remove/#more-information", 
            "text": "Use the site collection app catalog:  https://docs.microsoft.com/en-us/sharepoint/dev/general-development/site-collection-app-catalog", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-get/", 
            "text": "spo storageentity get\n\n\nGet details for the specified tenant property\n\n\nUsage\n\n\nspo storageentity get \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-k, --key \nkey\n\n\nName of the tenant property to retrieve\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo get details of a tenant property, you have to first connect to a SharePoint site using the\n\nspo connect\n command, eg. \nspo connect https://contoso.sharepoint.com\n.\n\n\nTenant properties are stored in the app catalog site associated with the site to which you are currently connected. When retrieving the specified tenant property, SharePoint will automatically find the associated app catalog and try to retrieve the property from it.\n\n\nExamples\n\n\nShow the value, description and comment of the \nAnalyticsId\n tenant property\n\n\nspo storageentity get -k AnalyticsId\n\n\n\n\n\nMore information\n\n\n\n\nSharePoint Framework Tenant Properties: \nhttps://docs.microsoft.com/en-us/sharepoint/dev/spfx/tenant-properties", 
            "title": "storageentity get"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-get/#spo-storageentity-get", 
            "text": "Get details for the specified tenant property", 
            "title": "spo storageentity get"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-get/#usage", 
            "text": "spo storageentity get  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-get/#options", 
            "text": "Option  Description      --help  output usage information    -k, --key  key  Name of the tenant property to retrieve    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-get/#remarks", 
            "text": "To get details of a tenant property, you have to first connect to a SharePoint site using the spo connect  command, eg.  spo connect https://contoso.sharepoint.com .  Tenant properties are stored in the app catalog site associated with the site to which you are currently connected. When retrieving the specified tenant property, SharePoint will automatically find the associated app catalog and try to retrieve the property from it.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-get/#examples", 
            "text": "Show the value, description and comment of the  AnalyticsId  tenant property  spo storageentity get -k AnalyticsId", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-get/#more-information", 
            "text": "SharePoint Framework Tenant Properties:  https://docs.microsoft.com/en-us/sharepoint/dev/spfx/tenant-properties", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-list/", 
            "text": "spo storageentity list\n\n\nLists tenant properties stored on the specified SharePoint Online app catalog\n\n\nUsage\n\n\nspo storageentity list \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-u, --appCatalogUrl \nappCatalogUrl\n\n\nURL of the app catalog site\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo list tenant properties, you have to first connect to a SharePoint site using the\n\nspo connect\n command, eg. \nspo connect https://contoso.sharepoint.com\n.\n\n\nTenant properties are stored in the app catalog site. To list all tenant properties, you have to specify the absolute URL of the app catalog site. If you specify an incorrect URL, or the site at the given URL is not an app catalog site, no properties will be retrieved.\n\n\nExamples\n\n\nList all tenant properties stored in the \nhttps://contoso.sharepoint.com/sites/appcatalog\n app catalog site\n\n\nspo storageentity list -u https://contoso.sharepoint.com/sites/appcatalog\n\n\n\n\n\nMore information\n\n\n\n\nSharePoint Framework Tenant Properties: \nhttps://docs.microsoft.com/en-us/sharepoint/dev/spfx/tenant-properties", 
            "title": "storageentity list"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-list/#spo-storageentity-list", 
            "text": "Lists tenant properties stored on the specified SharePoint Online app catalog", 
            "title": "spo storageentity list"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-list/#usage", 
            "text": "spo storageentity list  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-list/#options", 
            "text": "Option  Description      --help  output usage information    -u, --appCatalogUrl  appCatalogUrl  URL of the app catalog site    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-list/#remarks", 
            "text": "To list tenant properties, you have to first connect to a SharePoint site using the spo connect  command, eg.  spo connect https://contoso.sharepoint.com .  Tenant properties are stored in the app catalog site. To list all tenant properties, you have to specify the absolute URL of the app catalog site. If you specify an incorrect URL, or the site at the given URL is not an app catalog site, no properties will be retrieved.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-list/#examples", 
            "text": "List all tenant properties stored in the  https://contoso.sharepoint.com/sites/appcatalog  app catalog site  spo storageentity list -u https://contoso.sharepoint.com/sites/appcatalog", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-list/#more-information", 
            "text": "SharePoint Framework Tenant Properties:  https://docs.microsoft.com/en-us/sharepoint/dev/spfx/tenant-properties", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-remove/", 
            "text": "spo storageentity remove\n\n\nRemoves tenant property stored on the specified SharePoint Online app catalog\n\n\nUsage\n\n\nspo storageentity remove \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-u, --appCatalogUrl \nappCatalogUrl\n\n\nURL of the app catalog site\n\n\n\n\n\n\n-k, --key \nkey\n\n\nName of the tenant property to retrieve\n\n\n\n\n\n\n--confirm\n\n\nDon't prompt for confirming removal of a tenant property\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online tenant admin site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo remove a tenant property, you have to first connect to a tenant admin site using the\n\nspo connect\n command, eg. \nspo connect https://contoso-admin.sharepoint.com\n.\nIf you are connected to a different site and will try to manage tenant properties,\nyou will get an error.\n\n\nTenant properties are stored in the app catalog site associated with that tenant.\nTo remove a property, you have to specify the absolute URL of the app catalog site.\nIf you specify the URL of a site different than the app catalog, you will get an access denied error.\n\n\nExamples\n\n\nRemove the \nAnalyticsId\n tenant property. Yields a confirmation prompt before actually removing the property\n\n\nspo storageentity remove -k AnalyticsId -u https://contoso.sharepoint.com/sites/appcatalog\n\n\n\n\n\nRemove the \nAnalyticsId\n tenant property. Suppresses the confirmation prompt\n\n\nspo storageentity remove -k AnalyticsId --confirm -u https://contoso.sharepoint.com/sites/appcatalog\n\n\n\n\n\nMore information\n\n\n\n\nSharePoint Framework Tenant Properties: \nhttps://docs.microsoft.com/en-us/sharepoint/dev/spfx/tenant-properties", 
            "title": "storageentity remove"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-remove/#spo-storageentity-remove", 
            "text": "Removes tenant property stored on the specified SharePoint Online app catalog", 
            "title": "spo storageentity remove"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-remove/#usage", 
            "text": "spo storageentity remove  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-remove/#options", 
            "text": "Option  Description      --help  output usage information    -u, --appCatalogUrl  appCatalogUrl  URL of the app catalog site    -k, --key  key  Name of the tenant property to retrieve    --confirm  Don't prompt for confirming removal of a tenant property    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online tenant admin site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-remove/#remarks", 
            "text": "To remove a tenant property, you have to first connect to a tenant admin site using the spo connect  command, eg.  spo connect https://contoso-admin.sharepoint.com .\nIf you are connected to a different site and will try to manage tenant properties,\nyou will get an error.  Tenant properties are stored in the app catalog site associated with that tenant.\nTo remove a property, you have to specify the absolute URL of the app catalog site.\nIf you specify the URL of a site different than the app catalog, you will get an access denied error.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-remove/#examples", 
            "text": "Remove the  AnalyticsId  tenant property. Yields a confirmation prompt before actually removing the property  spo storageentity remove -k AnalyticsId -u https://contoso.sharepoint.com/sites/appcatalog  Remove the  AnalyticsId  tenant property. Suppresses the confirmation prompt  spo storageentity remove -k AnalyticsId --confirm -u https://contoso.sharepoint.com/sites/appcatalog", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-remove/#more-information", 
            "text": "SharePoint Framework Tenant Properties:  https://docs.microsoft.com/en-us/sharepoint/dev/spfx/tenant-properties", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-set/", 
            "text": "spo storageentity set\n\n\nSets tenant property on the specified SharePoint Online app catalog\n\n\nUsage\n\n\nspo storageentity \nset\n \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-u, --appCatalogUrl \nappCatalogUrl\n\n\nURL of the app catalog site\n\n\n\n\n\n\n-k, --key \nkey\n\n\nName of the tenant property to retrieve\n\n\n\n\n\n\n-v, --value \nvalue\n\n\nValue to set for the property\n\n\n\n\n\n\n-d, --description [description]\n\n\nDescription to set for the property (optional)\n\n\n\n\n\n\n-c, --comment [comment]\n\n\nComment to set for the property (optional)\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to a SharePoint Online tenant admin site, using the \nspo connect\n command.\n\n\n\n\nRemarks\n\n\nTo set a tenant property, you have to first connect to a tenant admin site using the\n\nspo connect\n command, eg. \nspo connect https://contoso-admin.sharepoint.com\n.\nIf you are connected to a different site and will try to manage tenant properties,\nyou will get an error.\n\n\nTenant properties are stored in the app catalog site associated with that tenant.\nTo set a property, you have to specify the absolute URL of the app catalog site.\nIf you specify the URL of a site different than the app catalog, you will get an access denied error.\n\n\nExamples\n\n\nSet \n123\n as the value of the \nAnalyticsId\n tenant property. Also include a description and a comment for additional clarification of the usage of the property.\n\n\nspo storageentity \nset\n -k AnalyticsId -v \n123\n -d \nWeb analytics ID\n -c \nUse on all sites\n -u https://contoso.sharepoint.com/sites/appcatalog\n\n\n\n\n\nMore information\n\n\n\n\nSharePoint Framework Tenant Properties: \nhttps://docs.microsoft.com/en-us/sharepoint/dev/spfx/tenant-properties", 
            "title": "storageentity set"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-set/#spo-storageentity-set", 
            "text": "Sets tenant property on the specified SharePoint Online app catalog", 
            "title": "spo storageentity set"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-set/#usage", 
            "text": "spo storageentity  set   [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-set/#options", 
            "text": "Option  Description      --help  output usage information    -u, --appCatalogUrl  appCatalogUrl  URL of the app catalog site    -k, --key  key  Name of the tenant property to retrieve    -v, --value  value  Value to set for the property    -d, --description [description]  Description to set for the property (optional)    -c, --comment [comment]  Comment to set for the property (optional)    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to a SharePoint Online tenant admin site, using the  spo connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-set/#remarks", 
            "text": "To set a tenant property, you have to first connect to a tenant admin site using the spo connect  command, eg.  spo connect https://contoso-admin.sharepoint.com .\nIf you are connected to a different site and will try to manage tenant properties,\nyou will get an error.  Tenant properties are stored in the app catalog site associated with that tenant.\nTo set a property, you have to specify the absolute URL of the app catalog site.\nIf you specify the URL of a site different than the app catalog, you will get an access denied error.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-set/#examples", 
            "text": "Set  123  as the value of the  AnalyticsId  tenant property. Also include a description and a comment for additional clarification of the usage of the property.  spo storageentity  set  -k AnalyticsId -v  123  -d  Web analytics ID  -c  Use on all sites  -u https://contoso.sharepoint.com/sites/appcatalog", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/spo/storageentity/storageentity-set/#more-information", 
            "text": "SharePoint Framework Tenant Properties:  https://docs.microsoft.com/en-us/sharepoint/dev/spfx/tenant-properties", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/aad/connect/", 
            "text": "aad connect\n\n\nConnects to the Azure Active Directory Graph\n\n\nUsage\n\n\naad connect \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\nRemarks\n\n\nUsing the \naad connect\n command you can connect to the Azure Active Directory Graph to manage your AAD objects.\n\n\nThe \naad connect\n command uses device code OAuth flow with the standard \nMicrosoft Azure Xplat-CLI\n Azure AD application to connect to the AAD Graph.\n\n\nWhen connecting to the AAD Graph, the \naad connect\n command stores in memory the access token and the refresh token. Both tokens are cleared from memory after exiting the CLI or by calling the \naad disconnect\n command.\n\n\nExamples\n\n\nConnect to the AAD Graph\n\n\naad connect\n\n\n\n\n\nConnect to the AAD Graph in debug mode including detailed debug information in the console output\n\n\naad connect --debug", 
            "title": "connect"
        }, 
        {
            "location": "/cmd/aad/connect/#aad-connect", 
            "text": "Connects to the Azure Active Directory Graph", 
            "title": "aad connect"
        }, 
        {
            "location": "/cmd/aad/connect/#usage", 
            "text": "aad connect  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/aad/connect/#options", 
            "text": "Option  Description      --help  output usage information    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/aad/connect/#remarks", 
            "text": "Using the  aad connect  command you can connect to the Azure Active Directory Graph to manage your AAD objects.  The  aad connect  command uses device code OAuth flow with the standard  Microsoft Azure Xplat-CLI  Azure AD application to connect to the AAD Graph.  When connecting to the AAD Graph, the  aad connect  command stores in memory the access token and the refresh token. Both tokens are cleared from memory after exiting the CLI or by calling the  aad disconnect  command.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/aad/connect/#examples", 
            "text": "Connect to the AAD Graph  aad connect  Connect to the AAD Graph in debug mode including detailed debug information in the console output  aad connect --debug", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/aad/disconnect/", 
            "text": "aad disconnect\n\n\nDisconnects from Azure Active Directory Graph\n\n\nUsage\n\n\naad disconnect \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\nRemarks\n\n\nThe \naad disconnect\n command disconnects from Azure Active Directory Graph and removes any access and refresh tokens from memory.\n\n\nExamples\n\n\nDisconnect from Azure Active Directory Graph\n\n\naad disconnect\n\n\n\n\n\nDisconnect from Azure Active Directory Graph in debug mode including detailed debug information in the console output\n\n\naad disconnect --debug", 
            "title": "disconnect"
        }, 
        {
            "location": "/cmd/aad/disconnect/#aad-disconnect", 
            "text": "Disconnects from Azure Active Directory Graph", 
            "title": "aad disconnect"
        }, 
        {
            "location": "/cmd/aad/disconnect/#usage", 
            "text": "aad disconnect  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/aad/disconnect/#options", 
            "text": "Option  Description      --help  output usage information    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/aad/disconnect/#remarks", 
            "text": "The  aad disconnect  command disconnects from Azure Active Directory Graph and removes any access and refresh tokens from memory.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/aad/disconnect/#examples", 
            "text": "Disconnect from Azure Active Directory Graph  aad disconnect  Disconnect from Azure Active Directory Graph in debug mode including detailed debug information in the console output  aad disconnect --debug", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/aad/status/", 
            "text": "aad status\n\n\nShows Azure Active Directory Graph connection status\n\n\nUsage\n\n\naad status \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\nRemarks\n\n\nIf you are connected to Azure Active Directory Graph, the \naad status\n command will show you information about the currently stored refresh and access token and the expiration date and time of the access token when run in debug mode.\n\n\nExamples\n\n\nShow the information about the current connection to Azure Active Directory Graph\n\n\naad status", 
            "title": "status"
        }, 
        {
            "location": "/cmd/aad/status/#aad-status", 
            "text": "Shows Azure Active Directory Graph connection status", 
            "title": "aad status"
        }, 
        {
            "location": "/cmd/aad/status/#usage", 
            "text": "aad status  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/aad/status/#options", 
            "text": "Option  Description      --help  output usage information    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/aad/status/#remarks", 
            "text": "If you are connected to Azure Active Directory Graph, the  aad status  command will show you information about the currently stored refresh and access token and the expiration date and time of the access token when run in debug mode.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/aad/status/#examples", 
            "text": "Show the information about the current connection to Azure Active Directory Graph  aad status", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-add/", 
            "text": "aad oauth2grant add\n\n\nGrant the specified service principal OAuth2 permissions to the specified resource\n\n\nUsage\n\n\naad oauth2grant add \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-i, --clientId \nclientId\n\n\nobjectId\n of the service principal for which permissions should be granted\n\n\n\n\n\n\n-r, --resourceId \nresourceId\n\n\nobjectId\n of the AAD application to which permissions should be granted\n\n\n\n\n\n\n-s, --scope \nscope\n\n\nPermissions to grant\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to Azure Active Directory Graph, using the \naad connect\n command.\n\n\n\n\nRemarks\n\n\nTo grant service principal OAuth2 permissions, you have to first connect to Azure Active Directory Graph using the \naad connect\n command.\n\n\nBefore you can grant service principal OAuth2 permissions, you need its \nobjectId\n. You can retrieve it using the \naad sp get\n command.\n\n\nThe resource for which you want to grant permissions is designated using its \nobjectId\n. You can retrieve it using the \naad sp get\n command, the same way you would retrieve the \nobjectId\n of the service principal.\n\n\nWhen granting OAuth2 permissions, you have to specify which permission scopes you want to grant the service principal. You can get the list of available permission scopes either from the resource documentation or from the \nappRoles\n property when retrieving information about the service principal using the \naad sp get\n command. Multiple permission scopes can be specified separated by a space.\n\n\nWhen granting OAuth2 permissions, the values of the \nclientId\n and \nresourceId\n properties form a unique key. If a grant for the same \nclientId\n-\nresourceId\n pair already exists, running the \naad oauth2grant add\n command will fail with an error. If you want to change permissions on an existing OAuth2 grant use the \naad oauth2grant set\n command instead.\n\n\nExamples\n\n\nGrant the service principal \nd03a0062-1aa6-43e1-8f49-d73e969c5812\n the \nCalendars.Read\n OAuth2 permissions to the \nc2af2474-2c95-423a-b0e5-e4895f22f9e9\n resource.\n\n\naad oauth2grant add --clientId d03a0062-1aa6-43e1-8f49-d73e969c5812 --resourceId c2af2474-2c95-423a-b0e5-e4895f22f9e9 --scope Calendars.Read\n\n\n\n\n\nGrant the service principal \nd03a0062-1aa6-43e1-8f49-d73e969c5812\n the \nCalendars.Read\n and \nMail.Read\n OAuth2 permissions to the \nc2af2474-2c95-423a-b0e5-e4895f22f9e9\n resource.\n\n\naad oauth2grant add --clientId d03a0062-1aa6-43e1-8f49-d73e969c5812 --resourceId c2af2474-2c95-423a-b0e5-e4895f22f9e9 --scope \nCalendars.Read Mail.Read\n\n\n\n\n\n\nMore information\n\n\n\n\nApplication and service principal objects in Azure Active Directory (Azure AD): \nhttps://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects", 
            "title": "oauth2grant add"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-add/#aad-oauth2grant-add", 
            "text": "Grant the specified service principal OAuth2 permissions to the specified resource", 
            "title": "aad oauth2grant add"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-add/#usage", 
            "text": "aad oauth2grant add  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-add/#options", 
            "text": "Option  Description      --help  output usage information    -i, --clientId  clientId  objectId  of the service principal for which permissions should be granted    -r, --resourceId  resourceId  objectId  of the AAD application to which permissions should be granted    -s, --scope  scope  Permissions to grant    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to Azure Active Directory Graph, using the  aad connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-add/#remarks", 
            "text": "To grant service principal OAuth2 permissions, you have to first connect to Azure Active Directory Graph using the  aad connect  command.  Before you can grant service principal OAuth2 permissions, you need its  objectId . You can retrieve it using the  aad sp get  command.  The resource for which you want to grant permissions is designated using its  objectId . You can retrieve it using the  aad sp get  command, the same way you would retrieve the  objectId  of the service principal.  When granting OAuth2 permissions, you have to specify which permission scopes you want to grant the service principal. You can get the list of available permission scopes either from the resource documentation or from the  appRoles  property when retrieving information about the service principal using the  aad sp get  command. Multiple permission scopes can be specified separated by a space.  When granting OAuth2 permissions, the values of the  clientId  and  resourceId  properties form a unique key. If a grant for the same  clientId - resourceId  pair already exists, running the  aad oauth2grant add  command will fail with an error. If you want to change permissions on an existing OAuth2 grant use the  aad oauth2grant set  command instead.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-add/#examples", 
            "text": "Grant the service principal  d03a0062-1aa6-43e1-8f49-d73e969c5812  the  Calendars.Read  OAuth2 permissions to the  c2af2474-2c95-423a-b0e5-e4895f22f9e9  resource.  aad oauth2grant add --clientId d03a0062-1aa6-43e1-8f49-d73e969c5812 --resourceId c2af2474-2c95-423a-b0e5-e4895f22f9e9 --scope Calendars.Read  Grant the service principal  d03a0062-1aa6-43e1-8f49-d73e969c5812  the  Calendars.Read  and  Mail.Read  OAuth2 permissions to the  c2af2474-2c95-423a-b0e5-e4895f22f9e9  resource.  aad oauth2grant add --clientId d03a0062-1aa6-43e1-8f49-d73e969c5812 --resourceId c2af2474-2c95-423a-b0e5-e4895f22f9e9 --scope  Calendars.Read Mail.Read", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-add/#more-information", 
            "text": "Application and service principal objects in Azure Active Directory (Azure AD):  https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-list/", 
            "text": "aad oauth2grant list\n\n\nLists OAuth2 permission grants for the specified service principal\n\n\nUsage\n\n\naad oauth2grant list \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-i, --clientId \nclientId\n\n\nobjectId of the service principal for which the configured OAuth2 permission grants should be retrieved\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to Azure Active Directory Graph, using the \naad connect\n command.\n\n\n\n\nRemarks\n\n\nTo get information about service principal OAuth2 permission grants, you have to first connect to Azure Active Directory Graph using the \naad connect\n command, eg. \naad connect\n.\n\n\nIn order to list existing OAuth2 permissions granted to a service principal, you need its \nobjectId\n. You can retrieve it using the \naad sp get\n command.\n\n\nExamples\n\n\nList OAuth2 permissions granted to service principal with \nobjectId\n \nb2307a39-e878-458b-bc90-03bc578531d6\n.\n\n\naad oauth2grant list --clientId b2307a39-e878-458b-bc90-03bc578531d6\n\n\n\n\n\nMore information\n\n\n\n\nApplication and service principal objects in Azure Active Directory (Azure AD): \nhttps://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects", 
            "title": "oauth2grant list"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-list/#aad-oauth2grant-list", 
            "text": "Lists OAuth2 permission grants for the specified service principal", 
            "title": "aad oauth2grant list"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-list/#usage", 
            "text": "aad oauth2grant list  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-list/#options", 
            "text": "Option  Description      --help  output usage information    -i, --clientId  clientId  objectId of the service principal for which the configured OAuth2 permission grants should be retrieved    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to Azure Active Directory Graph, using the  aad connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-list/#remarks", 
            "text": "To get information about service principal OAuth2 permission grants, you have to first connect to Azure Active Directory Graph using the  aad connect  command, eg.  aad connect .  In order to list existing OAuth2 permissions granted to a service principal, you need its  objectId . You can retrieve it using the  aad sp get  command.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-list/#examples", 
            "text": "List OAuth2 permissions granted to service principal with  objectId   b2307a39-e878-458b-bc90-03bc578531d6 .  aad oauth2grant list --clientId b2307a39-e878-458b-bc90-03bc578531d6", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-list/#more-information", 
            "text": "Application and service principal objects in Azure Active Directory (Azure AD):  https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-remove/", 
            "text": "aad oauth2grant remove\n\n\nRemove specified service principal OAuth2 permissions\n\n\nUsage\n\n\naad oauth2grant remove \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-i, --grantId \ngrantId\n\n\nobjectId\n of OAuth2 permission grant to remove\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to Azure Active Directory Graph, using the \naad connect\n command.\n\n\n\n\nRemarks\n\n\nTo remove service principal's OAuth2 permissions, you have to first connect to Azure Active Directory Graph using the \naad connect\n command, eg. \naad connect\n.\n\n\nBefore you can remove service principal's OAuth2 permissions, you need to get the \nobjectId\n of the permissions grant to remove. You can retrieve it using the \naad oauth2grant list\n command.\n\n\nExamples\n\n\nRemove the OAuth2 permission grant with ID \nYgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek\n\n\naad oauth2grant remove --grantId YgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek\n\n\n\n\n\nMore information\n\n\n\n\nApplication and service principal objects in Azure Active Directory (Azure AD): \nhttps://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects", 
            "title": "oauth2grant remove"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-remove/#aad-oauth2grant-remove", 
            "text": "Remove specified service principal OAuth2 permissions", 
            "title": "aad oauth2grant remove"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-remove/#usage", 
            "text": "aad oauth2grant remove  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-remove/#options", 
            "text": "Option  Description      --help  output usage information    -i, --grantId  grantId  objectId  of OAuth2 permission grant to remove    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to Azure Active Directory Graph, using the  aad connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-remove/#remarks", 
            "text": "To remove service principal's OAuth2 permissions, you have to first connect to Azure Active Directory Graph using the  aad connect  command, eg.  aad connect .  Before you can remove service principal's OAuth2 permissions, you need to get the  objectId  of the permissions grant to remove. You can retrieve it using the  aad oauth2grant list  command.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-remove/#examples", 
            "text": "Remove the OAuth2 permission grant with ID  YgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek  aad oauth2grant remove --grantId YgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-remove/#more-information", 
            "text": "Application and service principal objects in Azure Active Directory (Azure AD):  https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-set/", 
            "text": "aad oauth2grant set\n\n\nUpdate OAuth2 permissions for the service principal\n\n\nUsage\n\n\naad oauth2grant \nset\n \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-i, --grantId \ngrantId\n\n\nobjectId\n of OAuth2 permission grant to update\n\n\n\n\n\n\n-s, --scope \nscope\n\n\nPermissions to grant\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to Azure Active Directory Graph, using the \naad connect\n command.\n\n\n\n\nRemarks\n\n\nTo update service principal's OAuth2 permissions, you have to first connect to Azure Active Directory Graph using the \naad connect\n command, eg. \naad connect\n.\n\n\nBefore you can update service principal's OAuth2 permissions, you need to get the \nobjectId\n of the permissions grant to update. You can retrieve it using the \naad oauth2grant list\n command.\n\n\nExamples\n\n\nUpdate the existing OAuth2 permission grant with ID \nYgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek\n to the \nCalendars.Read Mail.Read\n permissions\n\n\naad oauth2grant \nset\n --grantId YgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek --scope \nCalendars.Read Mail.Read\n\n\n\n\n\n\nMore information\n\n\n\n\nApplication and service principal objects in Azure Active Directory (Azure AD): \nhttps://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects", 
            "title": "oauth2grant set"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-set/#aad-oauth2grant-set", 
            "text": "Update OAuth2 permissions for the service principal", 
            "title": "aad oauth2grant set"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-set/#usage", 
            "text": "aad oauth2grant  set   [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-set/#options", 
            "text": "Option  Description      --help  output usage information    -i, --grantId  grantId  objectId  of OAuth2 permission grant to update    -s, --scope  scope  Permissions to grant    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to Azure Active Directory Graph, using the  aad connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-set/#remarks", 
            "text": "To update service principal's OAuth2 permissions, you have to first connect to Azure Active Directory Graph using the  aad connect  command, eg.  aad connect .  Before you can update service principal's OAuth2 permissions, you need to get the  objectId  of the permissions grant to update. You can retrieve it using the  aad oauth2grant list  command.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-set/#examples", 
            "text": "Update the existing OAuth2 permission grant with ID  YgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek  to the  Calendars.Read Mail.Read  permissions  aad oauth2grant  set  --grantId YgA60KYa4UOPSdc-lpxYEnQkr8KVLDpCsOXkiV8i-ek --scope  Calendars.Read Mail.Read", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/aad/oauth2grant/oauth2grant-set/#more-information", 
            "text": "Application and service principal objects in Azure Active Directory (Azure AD):  https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects", 
            "title": "More information"
        }, 
        {
            "location": "/cmd/aad/sp/sp-get/", 
            "text": "aad sp get\n\n\nGets information about the specific service principal\n\n\nUsage\n\n\naad sp get \n[\noptions\n]\n\n\n\n\n\n\nOptions\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--help\n\n\noutput usage information\n\n\n\n\n\n\n-i, --appId [appId]\n\n\nID of the application for which the service principal should be retrieved\n\n\n\n\n\n\n-n, --displayName [displayName]\n\n\nDisplay name of the application for which the service principal should be retrieved\n\n\n\n\n\n\n-o, --output \noutput\n\n\nOutput type. \njson|text\n. Default \ntext\n\n\n\n\n\n\n--verbose\n\n\nRuns command with verbose logging\n\n\n\n\n\n\n--debug\n\n\nRuns command with debug logging\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\nBefore using this command, connect to Azure Active Directory Graph, using the \naad connect\n command.\n\n\n\n\nRemarks\n\n\nTo get information about a service principal, you have to first connect to Azure Active Directory Graph using the \naad connect\n command, eg. \naad connect\n.\n\n\nWhen looking up information about a service principal you should specify either its \nappId\n or \ndisplayName\n but not both. If you specify both values, the command will fail with an error.\n\n\nExamples\n\n\nReturn details about the service principal with appId \nb2307a39-e878-458b-bc90-03bc578531d6\n.\n\n\naad sp get --appId b2307a39-e878-458b-bc90-03bc578531d6\n\n\n\n\n\nReturn details about the \nMicrosoft Graph\n service principal.\n\n\naad sp get --displayName \nMicrosoft Graph\n\n\n\n\n\n\nMore information\n\n\n\n\nApplication and service principal objects in Azure Active Directory (Azure AD): \nhttps://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects", 
            "title": "sp get"
        }, 
        {
            "location": "/cmd/aad/sp/sp-get/#aad-sp-get", 
            "text": "Gets information about the specific service principal", 
            "title": "aad sp get"
        }, 
        {
            "location": "/cmd/aad/sp/sp-get/#usage", 
            "text": "aad sp get  [ options ]", 
            "title": "Usage"
        }, 
        {
            "location": "/cmd/aad/sp/sp-get/#options", 
            "text": "Option  Description      --help  output usage information    -i, --appId [appId]  ID of the application for which the service principal should be retrieved    -n, --displayName [displayName]  Display name of the application for which the service principal should be retrieved    -o, --output  output  Output type.  json|text . Default  text    --verbose  Runs command with verbose logging    --debug  Runs command with debug logging      Important  Before using this command, connect to Azure Active Directory Graph, using the  aad connect  command.", 
            "title": "Options"
        }, 
        {
            "location": "/cmd/aad/sp/sp-get/#remarks", 
            "text": "To get information about a service principal, you have to first connect to Azure Active Directory Graph using the  aad connect  command, eg.  aad connect .  When looking up information about a service principal you should specify either its  appId  or  displayName  but not both. If you specify both values, the command will fail with an error.", 
            "title": "Remarks"
        }, 
        {
            "location": "/cmd/aad/sp/sp-get/#examples", 
            "text": "Return details about the service principal with appId  b2307a39-e878-458b-bc90-03bc578531d6 .  aad sp get --appId b2307a39-e878-458b-bc90-03bc578531d6  Return details about the  Microsoft Graph  service principal.  aad sp get --displayName  Microsoft Graph", 
            "title": "Examples"
        }, 
        {
            "location": "/cmd/aad/sp/sp-get/#more-information", 
            "text": "Application and service principal objects in Azure Active Directory (Azure AD):  https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-application-objects", 
            "title": "More information"
        }, 
        {
            "location": "/concepts/persisting-connection/", 
            "text": "Persisting connection information\n\n\nAfter connecting to an Office 365 service, like SharePoint Online, the Office 365 CLI will persist the information about the connection until you explicitly disconnect from the specific service.\n\n\nWhy is persisting connection information important\n\n\nPersisting connection information is important for two reasons.\n\n\nConvenience\n\n\nFirst of all it's more convenient to use the Office 365 CLI. If you're using it often to manage a specific tenant, you can connect once and the CLI will remember your credentials. The next time you start the CLI, you can directly start managing your tenant without having to authenticate first.\n\n\nBuilding scripts\n\n\nAdditionally, it makes it possible for you to write scripts that automate management of your tenant. When the Office 365 CLI is run in immersive (interactive) mode, the connection information is persisted in memory and is available to all commands run in the CLI command prompt. Unfortunately, one limitation of the immersive mode is that you can only run one command at a time and can't pass the output of one command into another.\n\n\nWhen running in the non-immersive (non-interactive) mode, each command is executed in an isolated context and has no access to the memory of any command executed before. So unless you would store the connection information in a variable and explicitly pass it to each command, the CLI would be unable to connect to your tenant. As you can imagine, working with the CLI in this way would be tedious and inconvenient.\n\n\nBy persisting the connection information the Office 365 CLI can be used to build scripts, for example:\n\n\nDeploy all apps that are not yet deployed in the tenant app catalog:\n\n\n# get all apps available in the tenant app catalog\n\n\napps\n=\n$(\no365 spo app list -o json\n)\n\n\n\n# get IDs of all apps that are not deployed\n\n\nnotDeployedAppsIds\n=(\n$(\necho\n \n$apps\n \n|\n jq -r \n.[] | select(.Deployed == false) | {ID} | .[]\n)\n)\n\n\n\n# deploy all not deployed apps\n\n\nfor\n appId in \n$notDeployedAppsIds\n;\n \ndo\n\n  o365 spo app deploy -i \n$appId\n\n\ndone\n\n\n\n\n\n\nFirst, you use the Office 365 CLI to get the list of all apps from the tenant app catalog using the \nspo app list\n command. You set the output type to JSON and store it in a shell variable \napps\n. Next, you parse the JSON string using \njq\n and get IDs of apps that are not deployed. Finally, for each ID you run the \nspo app deploy\n Office 365 CLI command passing the ID as a command argument. Notice, that in the script, both \nspo\n commands are run as separate commands directly in the shell. In both cases, the shell starts the CLI, executes the specified command and closes the CLI removing all of its resources from memory. Scripts, like the one mentioned above can work, because the Office 365 CLI persists its connection information.\n\n\nPersisting connection information in Office 365 CLI\n\n\nWhen you connect in the Office 365 CLI to an Office 365 service, such as SharePoint Online, the CLI will persist the information about the connection for future reuse. For each established connection, the Office 365 CLI persists the following information:\n\n\n\n\nservice name, eg. \nSPO\n\n\nAzure AD resource name, eg \nhttps://contoso.sharepoint.com\n\n\nrefresh token\n\n\naccess token\n\n\naccess token expiration timestamp\n\n\n\n\nDepending on the Office 365 service to which you connect, the Office 365 CLI might persist some additional information. For example, when connecting to SharePoint Online tenant admin site using the \nspo connect\n command, the CLI will store the tenant ID. If you were initially connected to the tenant admin site, but also performed operations on other site collections (like retrieving the list of apps installed in the specific site), the CLI will store access token for regular SharePoint sites as well.\n\n\nWhere the connection information is persisted, depends on the operating system that you are using.\n\n\nmacOS\n\n\nOn the macOS, the Office 365 CLI persists its connection information in the system Keychain. For each connected Office 365 service (such as \nSPO\n) it adds a generic credential. You can view what information is stored by opening \nKeychain Access\n and searching for \nOffice 365 CLI\n.\n\n\nWindows\n\n\nOn Windows, the Office 365 CLI persists its connection information in the Windows Credential Manager. To view the persisted credentials, from the \nControl Panel\n, navigate to \nUser Accounts\n and from the \nCredential Manager\n section open \nManage Windows Credentials\n. Any credentials stored by the Office 365 CLI will be listed in the \nGeneric Credentials\n section named as \n[service]--x-y\n, for example \nSPO--1-3\n. Because there is a limit how long a password stored in the Windows Credential Manager can be, connection information stored by the Office 365 CLI will often be split over multiple chunks, where the last two number in the chunk specify the number of chunk and the total number of chunks.\n\n\nLinux\n\n\nOn Linux, the Office 365 CLI stores its connection information in a JSON file located at \n~/.o365cli-tokens.json\n. The contents of this file are not encrypted. The primary use case for supporting Linux operating system is to use the Office 365 CLI in Docker containers, where the tokens file is persisted in the container as long as the container is running. When the container is closed and removed, the file is removed as well. When you would start the container again, you would have to connect to Office 365 first, before you could use the Office 365 CLI.\n\n\nRemoving persisted connection information\n\n\nOffice 365 CLI persists its connection information until you either explicitly disconnect from the particular service or manually remove the stored credentials.\n\n\nTo check if you are connected to a particular Office 365 service in the Office 365 CLI, run the corresponding status command, for example \no365 spo status\n. If you are connected, the command will return the URL of the site to which you are connected. If you are not connected, the command will return \nfalse\n.\n\n\nTo disconnect from the specific Office 365 service, run the corresponding Office 365 CLI, for example, to disconnect from SharePoint Online and remove all persisted connection information, run \no365 spo disconnect\n.", 
            "title": "Persisting connection"
        }, 
        {
            "location": "/concepts/persisting-connection/#persisting-connection-information", 
            "text": "After connecting to an Office 365 service, like SharePoint Online, the Office 365 CLI will persist the information about the connection until you explicitly disconnect from the specific service.", 
            "title": "Persisting connection information"
        }, 
        {
            "location": "/concepts/persisting-connection/#why-is-persisting-connection-information-important", 
            "text": "Persisting connection information is important for two reasons.", 
            "title": "Why is persisting connection information important"
        }, 
        {
            "location": "/concepts/persisting-connection/#convenience", 
            "text": "First of all it's more convenient to use the Office 365 CLI. If you're using it often to manage a specific tenant, you can connect once and the CLI will remember your credentials. The next time you start the CLI, you can directly start managing your tenant without having to authenticate first.", 
            "title": "Convenience"
        }, 
        {
            "location": "/concepts/persisting-connection/#building-scripts", 
            "text": "Additionally, it makes it possible for you to write scripts that automate management of your tenant. When the Office 365 CLI is run in immersive (interactive) mode, the connection information is persisted in memory and is available to all commands run in the CLI command prompt. Unfortunately, one limitation of the immersive mode is that you can only run one command at a time and can't pass the output of one command into another.  When running in the non-immersive (non-interactive) mode, each command is executed in an isolated context and has no access to the memory of any command executed before. So unless you would store the connection information in a variable and explicitly pass it to each command, the CLI would be unable to connect to your tenant. As you can imagine, working with the CLI in this way would be tedious and inconvenient.  By persisting the connection information the Office 365 CLI can be used to build scripts, for example:  Deploy all apps that are not yet deployed in the tenant app catalog:  # get all apps available in the tenant app catalog  apps = $( o365 spo app list -o json )  # get IDs of all apps that are not deployed  notDeployedAppsIds =( $( echo   $apps   |  jq -r  .[] | select(.Deployed == false) | {ID} | .[] ) )  # deploy all not deployed apps  for  appId in  $notDeployedAppsIds ;   do \n  o365 spo app deploy -i  $appId  done   First, you use the Office 365 CLI to get the list of all apps from the tenant app catalog using the  spo app list  command. You set the output type to JSON and store it in a shell variable  apps . Next, you parse the JSON string using  jq  and get IDs of apps that are not deployed. Finally, for each ID you run the  spo app deploy  Office 365 CLI command passing the ID as a command argument. Notice, that in the script, both  spo  commands are run as separate commands directly in the shell. In both cases, the shell starts the CLI, executes the specified command and closes the CLI removing all of its resources from memory. Scripts, like the one mentioned above can work, because the Office 365 CLI persists its connection information.", 
            "title": "Building scripts"
        }, 
        {
            "location": "/concepts/persisting-connection/#persisting-connection-information-in-office-365-cli", 
            "text": "When you connect in the Office 365 CLI to an Office 365 service, such as SharePoint Online, the CLI will persist the information about the connection for future reuse. For each established connection, the Office 365 CLI persists the following information:   service name, eg.  SPO  Azure AD resource name, eg  https://contoso.sharepoint.com  refresh token  access token  access token expiration timestamp   Depending on the Office 365 service to which you connect, the Office 365 CLI might persist some additional information. For example, when connecting to SharePoint Online tenant admin site using the  spo connect  command, the CLI will store the tenant ID. If you were initially connected to the tenant admin site, but also performed operations on other site collections (like retrieving the list of apps installed in the specific site), the CLI will store access token for regular SharePoint sites as well.  Where the connection information is persisted, depends on the operating system that you are using.", 
            "title": "Persisting connection information in Office 365 CLI"
        }, 
        {
            "location": "/concepts/persisting-connection/#macos", 
            "text": "On the macOS, the Office 365 CLI persists its connection information in the system Keychain. For each connected Office 365 service (such as  SPO ) it adds a generic credential. You can view what information is stored by opening  Keychain Access  and searching for  Office 365 CLI .", 
            "title": "macOS"
        }, 
        {
            "location": "/concepts/persisting-connection/#windows", 
            "text": "On Windows, the Office 365 CLI persists its connection information in the Windows Credential Manager. To view the persisted credentials, from the  Control Panel , navigate to  User Accounts  and from the  Credential Manager  section open  Manage Windows Credentials . Any credentials stored by the Office 365 CLI will be listed in the  Generic Credentials  section named as  [service]--x-y , for example  SPO--1-3 . Because there is a limit how long a password stored in the Windows Credential Manager can be, connection information stored by the Office 365 CLI will often be split over multiple chunks, where the last two number in the chunk specify the number of chunk and the total number of chunks.", 
            "title": "Windows"
        }, 
        {
            "location": "/concepts/persisting-connection/#linux", 
            "text": "On Linux, the Office 365 CLI stores its connection information in a JSON file located at  ~/.o365cli-tokens.json . The contents of this file are not encrypted. The primary use case for supporting Linux operating system is to use the Office 365 CLI in Docker containers, where the tokens file is persisted in the container as long as the container is running. When the container is closed and removed, the file is removed as well. When you would start the container again, you would have to connect to Office 365 first, before you could use the Office 365 CLI.", 
            "title": "Linux"
        }, 
        {
            "location": "/concepts/persisting-connection/#removing-persisted-connection-information", 
            "text": "Office 365 CLI persists its connection information until you either explicitly disconnect from the particular service or manually remove the stored credentials.  To check if you are connected to a particular Office 365 service in the Office 365 CLI, run the corresponding status command, for example  o365 spo status . If you are connected, the command will return the URL of the site to which you are connected. If you are not connected, the command will return  false .  To disconnect from the specific Office 365 service, run the corresponding Office 365 CLI, for example, to disconnect from SharePoint Online and remove all persisted connection information, run  o365 spo disconnect .", 
            "title": "Removing persisted connection information"
        }, 
        {
            "location": "/concepts/authorization-tokens/", 
            "text": "Authorization and access tokens\n\n\nCommands provided with the Office 365 CLI manipulate different settings of Office 365. Before you can execute any of the commands in the CLI, you have to connect to the Office 365 service corresponding to your command, such as SharePoint or Microsoft Graph.\n\n\nTL;DR\n\n\nUse \nAuth.ensureAccessToken\n when:\n\n\n\n\nthe URL of the service to which you are connected and the URL of the API you're communicating with are the same, eg. you're connected to AAD Graph at \nhttps://graph.windows.net\n and you're calling \nhttps://graph.windows.net/myorganization/servicePrincipals\n or you're connected to SharePoint tenant admin site at \nhttps://contoso-admin.sharepoint.com\n and you're calling the tenant admin API at \nhttps://contoso-admin.sharepoint.com/_vti_bin/client.svc/ProcessQuery\n\n\nyou want to renew the refresh token persisted in the Office 365 CLI\n\n\n\n\nUse \nAuth.getAccessToken\n when:\n\n\n\n\nthe URL of the service to which you are connected and the URL of the API you're calling are different, eg. you're connected to a SharePoint Online tenant admin site at \nhttps://contoso-admin.sharepoint.com\n, but you're calling \nhttps://contoso.sharepoint.com/sites/team/_api/web/tenantappcatalog/AvailableApps/GetById('cd807889-9107-416e-88e4-7575789ab35c')/install\n to install an app on a regular SharePoint site\n\n\nyou're obtaining access token for a service different than the one to which you are connected and don't want to break the existing connection\n\n\n\n\nAuthorization in the Office 365 CLI\n\n\nThere are a number of ways in which you can authenticate and authorize with Office 365. The Office 365 CLI uses the OAuth protocol to authorize with Office 365 and its services. OAuth flows in Office 365 are facilitated by Azure Active Directory.\n\n\nAfter completing the OAuth flow, the CLI receives from Azure Active Directory a refresh- and an access token. Each web request to Office 365 APIs contains the access token which authorizes the Office 365 CLI to execute the particular operation. When the access token expires, the CLI uses the refresh token to obtain a new access token. When the refresh token expires, the user has to reconnect to Office 365 to obtain a new refresh token.\n\n\nServices and commands\n\n\nEach command in the Office 365 CLI belongs to a service, for example the \nspo site add\n command, which creates a new modern site, belongs to the SharePoint Online service, while the \naad sp get\n command, which lists Azure Active Directory service principals, belongs to the Azure Active Directory Graph service. Each service in Office 365 is a different Azure Active Directory authorization resource and requires a separate access token. When working with the CLI, you can be simultaneously connected to multiple services. Each command in the CLI knows which Office 365 service it communicates with and for which resource it should have a valid access token.\n\n\nCommunicating with Office 365\n\n\nBefore a command can connect to Office 365, it requires a valid access token. Office 365 CLI offers you two methods to obtain a valid access token: \nAuth.ensureAccessToken\n and \nAuth.getAccessToken\n. While the methods seem similar, they work differently and are meant for different purposes.\n\n\nRefresh access token for the current resource\n\n\nIf you're building a command that operates on the same URL, as the service to which the user is connected, you should use the \nAuth.ensureAccessToken\n method to refresh the token. Not only does this method resolve to a valid access token, which you can use directly in your code, but also stores the new access- and refresh token in the \nauth.service\n object from which you can use in any point in code.\n\n\nFor example: you're building a command that retrieves the list of service principals from the Azure Active Directory (\naad sp get\n). The command uses the Azure Active Directory Graph API (\nhttps://graph.windows.net\n) for this. Since the resource URL of the AAD Graph service (\nhttps://graph.windows.net\n) and the URL of the API that the command has to call (\nhttps://graph.windows.net/myorganization/servicePrincipals\n) are both located on the same domain \nhttps://graph.windows.net\n, you should call the \nAuth.ensureAccessToken\n method to obtain a valid access token for the AAD Graph service, before calling the API.\n\n\nAs another example, let's take a method that communicates with the SharePoint Online tenant admin API to set a tenant property (\nspo storageentity set\n). While using the \nspo connect\n command, users can connect to any SharePoint site, the \nspo storageentity set\n command requires the user to be connected to the SharePoint tenant admin site. As a result, both the URL of the service, to which the user is connected (\nhttps://contoso-admin.sharepoint.com\n) and the URL of the API used by the service (\nhttps://contoso-admin.sharepoint.com/_vti_bin/client.svc/ProcessQuery\n) are located on the same domain \nhttps://contoso-admin.sharepoint.com\n, which is why you should call the \nAuth.ensureAccessToken\n method to obtain a valid access for the SharePoint Online tenant admin site, before calling the API.\n\n\nObtain a valid access token for a different resource\n\n\nIn some cases, while the user is connected to one service (with a corresponding resource), you need to retrieve a valid access token for a different resource. This is often the case when building SharePoint commands. In Office 365, SharePoint resources are spread over the following different domains: \ncontoso-admin.sharepoint.com\n - which hosts the SharePoint Online tenant admin site, \ncontoso.sharepoint.com\n - which hosts regular SharePoint sites and \ncontoso-my.sharepoint.com\n - which hosts users' OneDrive sites. From Azure Active Directory point of view, all these domains are perceived as separate resources and require different access tokens.\n\n\nIf you're building a command that allows users to specify a URL on which the operation should be performed, such as \nspo app install\n, you cannot make any assumptions of the service to which they're connected, and you should obtain a valid access token for the resources corresponding to the URL specified by the user, using the \nAuth.getResourceToken\n method. While the \nAuth.getResourceToken\n method also returns a valid access token for the specified resource, it doesn't update the connection information on the \nauth.service\n object.\n\n\nWhy two different methods to get tokens\n\n\nIn the Office 365 CLI, connecting to Office 365 services is interactive and requires user input. If commands relied on context information from the site, to which users are connected, it would be impossible to build scripts using the Office 365 CLI commands.\n\n\nSome SharePoint commands require to be executed in the context of the tenant admin site. Some commands additionally require specifying tenant information. For performance reasons, this information is retrieved only initially, when connecting to SharePoint, if the specified site to connect to is a tenant admin site. Because tenant information doesn't change, there is no point in retrieving it on every call to SharePoint. If users would first connect to a regular SharePoint site, and would then switch to the tenant admin site, the tenant information would be missing and the commands requiring it would fail.\n\n\nRules of thumb\n\n\n\n\nif you're building a command for a service other than SharePoint Online, you will most likely use the \nAuth.ensureAccessToken\n method\n\n\nif the command you're building allows the user to specify a URL on which the API is called, you should use the \nAuth.getAccessToken\n method to get access token for the URL specified by the user", 
            "title": "Authorization and access tokens"
        }, 
        {
            "location": "/concepts/authorization-tokens/#authorization-and-access-tokens", 
            "text": "Commands provided with the Office 365 CLI manipulate different settings of Office 365. Before you can execute any of the commands in the CLI, you have to connect to the Office 365 service corresponding to your command, such as SharePoint or Microsoft Graph.", 
            "title": "Authorization and access tokens"
        }, 
        {
            "location": "/concepts/authorization-tokens/#tldr", 
            "text": "Use  Auth.ensureAccessToken  when:   the URL of the service to which you are connected and the URL of the API you're communicating with are the same, eg. you're connected to AAD Graph at  https://graph.windows.net  and you're calling  https://graph.windows.net/myorganization/servicePrincipals  or you're connected to SharePoint tenant admin site at  https://contoso-admin.sharepoint.com  and you're calling the tenant admin API at  https://contoso-admin.sharepoint.com/_vti_bin/client.svc/ProcessQuery  you want to renew the refresh token persisted in the Office 365 CLI   Use  Auth.getAccessToken  when:   the URL of the service to which you are connected and the URL of the API you're calling are different, eg. you're connected to a SharePoint Online tenant admin site at  https://contoso-admin.sharepoint.com , but you're calling  https://contoso.sharepoint.com/sites/team/_api/web/tenantappcatalog/AvailableApps/GetById('cd807889-9107-416e-88e4-7575789ab35c')/install  to install an app on a regular SharePoint site  you're obtaining access token for a service different than the one to which you are connected and don't want to break the existing connection", 
            "title": "TL;DR"
        }, 
        {
            "location": "/concepts/authorization-tokens/#authorization-in-the-office-365-cli", 
            "text": "There are a number of ways in which you can authenticate and authorize with Office 365. The Office 365 CLI uses the OAuth protocol to authorize with Office 365 and its services. OAuth flows in Office 365 are facilitated by Azure Active Directory.  After completing the OAuth flow, the CLI receives from Azure Active Directory a refresh- and an access token. Each web request to Office 365 APIs contains the access token which authorizes the Office 365 CLI to execute the particular operation. When the access token expires, the CLI uses the refresh token to obtain a new access token. When the refresh token expires, the user has to reconnect to Office 365 to obtain a new refresh token.", 
            "title": "Authorization in the Office 365 CLI"
        }, 
        {
            "location": "/concepts/authorization-tokens/#services-and-commands", 
            "text": "Each command in the Office 365 CLI belongs to a service, for example the  spo site add  command, which creates a new modern site, belongs to the SharePoint Online service, while the  aad sp get  command, which lists Azure Active Directory service principals, belongs to the Azure Active Directory Graph service. Each service in Office 365 is a different Azure Active Directory authorization resource and requires a separate access token. When working with the CLI, you can be simultaneously connected to multiple services. Each command in the CLI knows which Office 365 service it communicates with and for which resource it should have a valid access token.", 
            "title": "Services and commands"
        }, 
        {
            "location": "/concepts/authorization-tokens/#communicating-with-office-365", 
            "text": "Before a command can connect to Office 365, it requires a valid access token. Office 365 CLI offers you two methods to obtain a valid access token:  Auth.ensureAccessToken  and  Auth.getAccessToken . While the methods seem similar, they work differently and are meant for different purposes.", 
            "title": "Communicating with Office 365"
        }, 
        {
            "location": "/concepts/authorization-tokens/#refresh-access-token-for-the-current-resource", 
            "text": "If you're building a command that operates on the same URL, as the service to which the user is connected, you should use the  Auth.ensureAccessToken  method to refresh the token. Not only does this method resolve to a valid access token, which you can use directly in your code, but also stores the new access- and refresh token in the  auth.service  object from which you can use in any point in code.  For example: you're building a command that retrieves the list of service principals from the Azure Active Directory ( aad sp get ). The command uses the Azure Active Directory Graph API ( https://graph.windows.net ) for this. Since the resource URL of the AAD Graph service ( https://graph.windows.net ) and the URL of the API that the command has to call ( https://graph.windows.net/myorganization/servicePrincipals ) are both located on the same domain  https://graph.windows.net , you should call the  Auth.ensureAccessToken  method to obtain a valid access token for the AAD Graph service, before calling the API.  As another example, let's take a method that communicates with the SharePoint Online tenant admin API to set a tenant property ( spo storageentity set ). While using the  spo connect  command, users can connect to any SharePoint site, the  spo storageentity set  command requires the user to be connected to the SharePoint tenant admin site. As a result, both the URL of the service, to which the user is connected ( https://contoso-admin.sharepoint.com ) and the URL of the API used by the service ( https://contoso-admin.sharepoint.com/_vti_bin/client.svc/ProcessQuery ) are located on the same domain  https://contoso-admin.sharepoint.com , which is why you should call the  Auth.ensureAccessToken  method to obtain a valid access for the SharePoint Online tenant admin site, before calling the API.", 
            "title": "Refresh access token for the current resource"
        }, 
        {
            "location": "/concepts/authorization-tokens/#obtain-a-valid-access-token-for-a-different-resource", 
            "text": "In some cases, while the user is connected to one service (with a corresponding resource), you need to retrieve a valid access token for a different resource. This is often the case when building SharePoint commands. In Office 365, SharePoint resources are spread over the following different domains:  contoso-admin.sharepoint.com  - which hosts the SharePoint Online tenant admin site,  contoso.sharepoint.com  - which hosts regular SharePoint sites and  contoso-my.sharepoint.com  - which hosts users' OneDrive sites. From Azure Active Directory point of view, all these domains are perceived as separate resources and require different access tokens.  If you're building a command that allows users to specify a URL on which the operation should be performed, such as  spo app install , you cannot make any assumptions of the service to which they're connected, and you should obtain a valid access token for the resources corresponding to the URL specified by the user, using the  Auth.getResourceToken  method. While the  Auth.getResourceToken  method also returns a valid access token for the specified resource, it doesn't update the connection information on the  auth.service  object.", 
            "title": "Obtain a valid access token for a different resource"
        }, 
        {
            "location": "/concepts/authorization-tokens/#why-two-different-methods-to-get-tokens", 
            "text": "In the Office 365 CLI, connecting to Office 365 services is interactive and requires user input. If commands relied on context information from the site, to which users are connected, it would be impossible to build scripts using the Office 365 CLI commands.  Some SharePoint commands require to be executed in the context of the tenant admin site. Some commands additionally require specifying tenant information. For performance reasons, this information is retrieved only initially, when connecting to SharePoint, if the specified site to connect to is a tenant admin site. Because tenant information doesn't change, there is no point in retrieving it on every call to SharePoint. If users would first connect to a regular SharePoint site, and would then switch to the tenant admin site, the tenant information would be missing and the commands requiring it would fail.", 
            "title": "Why two different methods to get tokens"
        }, 
        {
            "location": "/concepts/authorization-tokens/#rules-of-thumb", 
            "text": "if you're building a command for a service other than SharePoint Online, you will most likely use the  Auth.ensureAccessToken  method  if the command you're building allows the user to specify a URL on which the API is called, you should use the  Auth.getAccessToken  method to get access token for the URL specified by the user", 
            "title": "Rules of thumb"
        }, 
        {
            "location": "/concepts/completion/", 
            "text": "Command completion\n\n\nTo help you use its commands, the Office 365 CLI offers you the ability to autocomplete commands and options that you're typing in the prompt. Depending how you're using the Office 365 CLI, some additional setup might be required to enable command completion.\n\n\nImmersive mode\n\n\nOne way to use the Office 365 CLI is to start it in the immersive mode. By typing in your shell \no365\n or \noffice365\n, you start the Office 365 CLI and your command prompt changes to \no365$\n. At that point, the Office 365 CLI takes over your shell and interprets all of your input. To complete the command you're typing, simply start typing the word and press \nTAB\n. To see the list of available commands, matching your input, press \nTAB\n twice.\n\n\nNon-immersive mode\n\n\nWhen using the Office 365 CLI in the non-immersive mode, you execute complete Office 365 CLI commands in your shell. Rather than starting the Office 365 CLI by typing \no365\n or \noffice365\n, you type the whole command, like \no365 spo app list\n. Also when running in non-immersive mode, the Office 365 CLI offers you support for completing your input. The configuration steps required to enable command completion, depend on which operating system and shell you're using.\n\n\nClink (cmder)\n\n\nOn Windows, the Office 365 CLI offers support for completing commands in \ncmder\n and other shells using \nClink\n.\n\n\nEnable Clink completion\n\n\nTo enable completion:\n\n\n\n\nStart your shell\n\n\nChange the working directory to where your shell stores completion plugins. For cmder, it's \n%CMDER_ROOT%\\vendor\\clink-completions\n, where \n%CMDER_ROOT%\n is the folder where you installed cmder.\n\n\nExecute: \no365 --completion:clink:generate \n o365.lua\n. This will create the \no365.lua\n file with information about o365 commands which is used by Clink to provide completion\n\n\nRestart your shell\n\n\n\n\nYou should now be able to complete your input, eg. typing \no365 s\ntab\n will complete it to \no365 spo\n and typing \no365 spo \ntab\ntab\n will list all SharePoint Online commands available in Office 365 CLI. To see the options available for the current command, type \n-\ntab\ntab\n, for example \no365 spo app list -\ntab\ntab\n will list all options available for the \no365 spo app list\n command.\n\n\nDisable Clink completion\n\n\nTo disable completion, delete the \no365.lua\n file you generated previously and restart your shell.\n\n\nUpdate Clink completion\n\n\nCommand completion is based on a static file. After updating the Office 365 CLI, you should update the completion file as described in the \nEnable completion\n section so that the completion file reflects the latest commands in the Office 365 CLI.\n\n\nZsh, Bash and Fish\n\n\nIf you're using Zsh, Bash or Fish as your shell, you can benefit of Office 365 CLI command completion as well, when typing commands directly in the shell. The completion is based on the \nOmelette\n package.\n\n\nEnable sh completion\n\n\nTo enable completion:\n\n\n\n\nStart your shell\n\n\nExecute \no365 --completion:sh:setup\n. This will generate the \ncommands.json\n file in the same folder where the Office 365 CLI is installed, listing all available commands and their options. Additionally, it will register completion in your shell profile file (for Zsh \n~/.zshrc\n) using the \nOmelette's automated install\n.\n\n\nRestart your shell\n\n\n\n\nYou should now be able to complete your input, eg. typing \no365 s\ntab\n will complete it to \no365 spo\n and typing \no365 spo \ntab\ntab\n will list all SharePoint Online commands available in Office 365 CLI. To see the options available for the command, type \n-\ntab\ntab\n, for example \no365 spo app list -\ntab\ntab\n will list all options available for the \no365 spo app list\n command. If the command is completed, the completion will automatically start suggestions with a \n-\n indicating that you have matched a command and can now specify its options. Command options you've already used are removed from the suggestions list, but the completion doesn't take into account short and long variant of the same option. If you specified the \n--output\n option in your command, \n--option\n will not be displayed in the list of suggestions, but \n-o\n will.\n\n\nDisable sh completion\n\n\nTo disable completion, edit your shell's profile file (for Zsh \n~/.zshrc\n) and remove the following lines:\n\n\n# begin o365 completion\n\n. \n(\no365 --completion\n)\n\n\n# end o365 completion\n\n\n\n\n\n\nSave the profile file and restart the shell for the changes to take effect.\n\n\nUpdate sh completion\n\n\nCommand completion is based on the static \ncommands.json\n file located in the folder where the Office 365 CLI is installed. After updating the Office 365 CLI, you should update the completion file by executing \no365 --completion:sh:generate\n in the command line. After running this command, it's not necessary to restart the shell to see the latest changes.", 
            "title": "Command completion"
        }, 
        {
            "location": "/concepts/completion/#command-completion", 
            "text": "To help you use its commands, the Office 365 CLI offers you the ability to autocomplete commands and options that you're typing in the prompt. Depending how you're using the Office 365 CLI, some additional setup might be required to enable command completion.", 
            "title": "Command completion"
        }, 
        {
            "location": "/concepts/completion/#immersive-mode", 
            "text": "One way to use the Office 365 CLI is to start it in the immersive mode. By typing in your shell  o365  or  office365 , you start the Office 365 CLI and your command prompt changes to  o365$ . At that point, the Office 365 CLI takes over your shell and interprets all of your input. To complete the command you're typing, simply start typing the word and press  TAB . To see the list of available commands, matching your input, press  TAB  twice.", 
            "title": "Immersive mode"
        }, 
        {
            "location": "/concepts/completion/#non-immersive-mode", 
            "text": "When using the Office 365 CLI in the non-immersive mode, you execute complete Office 365 CLI commands in your shell. Rather than starting the Office 365 CLI by typing  o365  or  office365 , you type the whole command, like  o365 spo app list . Also when running in non-immersive mode, the Office 365 CLI offers you support for completing your input. The configuration steps required to enable command completion, depend on which operating system and shell you're using.", 
            "title": "Non-immersive mode"
        }, 
        {
            "location": "/concepts/completion/#clink-cmder", 
            "text": "On Windows, the Office 365 CLI offers support for completing commands in  cmder  and other shells using  Clink .", 
            "title": "Clink (cmder)"
        }, 
        {
            "location": "/concepts/completion/#enable-clink-completion", 
            "text": "To enable completion:   Start your shell  Change the working directory to where your shell stores completion plugins. For cmder, it's  %CMDER_ROOT%\\vendor\\clink-completions , where  %CMDER_ROOT%  is the folder where you installed cmder.  Execute:  o365 --completion:clink:generate   o365.lua . This will create the  o365.lua  file with information about o365 commands which is used by Clink to provide completion  Restart your shell   You should now be able to complete your input, eg. typing  o365 s tab  will complete it to  o365 spo  and typing  o365 spo  tab tab  will list all SharePoint Online commands available in Office 365 CLI. To see the options available for the current command, type  - tab tab , for example  o365 spo app list - tab tab  will list all options available for the  o365 spo app list  command.", 
            "title": "Enable Clink completion"
        }, 
        {
            "location": "/concepts/completion/#disable-clink-completion", 
            "text": "To disable completion, delete the  o365.lua  file you generated previously and restart your shell.", 
            "title": "Disable Clink completion"
        }, 
        {
            "location": "/concepts/completion/#update-clink-completion", 
            "text": "Command completion is based on a static file. After updating the Office 365 CLI, you should update the completion file as described in the  Enable completion  section so that the completion file reflects the latest commands in the Office 365 CLI.", 
            "title": "Update Clink completion"
        }, 
        {
            "location": "/concepts/completion/#zsh-bash-and-fish", 
            "text": "If you're using Zsh, Bash or Fish as your shell, you can benefit of Office 365 CLI command completion as well, when typing commands directly in the shell. The completion is based on the  Omelette  package.", 
            "title": "Zsh, Bash and Fish"
        }, 
        {
            "location": "/concepts/completion/#enable-sh-completion", 
            "text": "To enable completion:   Start your shell  Execute  o365 --completion:sh:setup . This will generate the  commands.json  file in the same folder where the Office 365 CLI is installed, listing all available commands and their options. Additionally, it will register completion in your shell profile file (for Zsh  ~/.zshrc ) using the  Omelette's automated install .  Restart your shell   You should now be able to complete your input, eg. typing  o365 s tab  will complete it to  o365 spo  and typing  o365 spo  tab tab  will list all SharePoint Online commands available in Office 365 CLI. To see the options available for the command, type  - tab tab , for example  o365 spo app list - tab tab  will list all options available for the  o365 spo app list  command. If the command is completed, the completion will automatically start suggestions with a  -  indicating that you have matched a command and can now specify its options. Command options you've already used are removed from the suggestions list, but the completion doesn't take into account short and long variant of the same option. If you specified the  --output  option in your command,  --option  will not be displayed in the list of suggestions, but  -o  will.", 
            "title": "Enable sh completion"
        }, 
        {
            "location": "/concepts/completion/#disable-sh-completion", 
            "text": "To disable completion, edit your shell's profile file (for Zsh  ~/.zshrc ) and remove the following lines:  # begin o365 completion \n.  ( o365 --completion )  # end o365 completion   Save the profile file and restart the shell for the changes to take effect.", 
            "title": "Disable sh completion"
        }, 
        {
            "location": "/concepts/completion/#update-sh-completion", 
            "text": "Command completion is based on the static  commands.json  file located in the folder where the Office 365 CLI is installed. After updating the Office 365 CLI, you should update the completion file by executing  o365 --completion:sh:generate  in the command line. After running this command, it's not necessary to restart the shell to see the latest changes.", 
            "title": "Update sh completion"
        }, 
        {
            "location": "/concepts/communicating-o365/", 
            "text": "Communication with Office 365\n\n\nTo manage settings of the different Office 365 services, the Office 365 CLI uses REST APIs exposed by the corresponding services. Using the REST APIs is meant to promote consistency and reusability of code and tests across the CLI no matter which Office 365 service the CLI is communicating with.\n\n\nSome SharePoint Online commands deviate from this rule and mimic SharePoint CSOM calls instead. This is done out of necessity as some operations, such as managing Office 365 CDN settings or tenant properties, are not exposed through REST APIs. Whenever REST APIs become available for these operations, the affected commands will be changed to use REST APIs instead of mimicking CSOM calls.", 
            "title": "Communication with Office 365"
        }, 
        {
            "location": "/concepts/communicating-o365/#communication-with-office-365", 
            "text": "To manage settings of the different Office 365 services, the Office 365 CLI uses REST APIs exposed by the corresponding services. Using the REST APIs is meant to promote consistency and reusability of code and tests across the CLI no matter which Office 365 service the CLI is communicating with.  Some SharePoint Online commands deviate from this rule and mimic SharePoint CSOM calls instead. This is done out of necessity as some operations, such as managing Office 365 CDN settings or tenant properties, are not exposed through REST APIs. Whenever REST APIs become available for these operations, the affected commands will be changed to use REST APIs instead of mimicking CSOM calls.", 
            "title": "Communication with Office 365"
        }, 
        {
            "location": "/about/why-cli/", 
            "text": "Why this CLI\n\n\nOffice 365 CLI is a cross-platform CLI that allows users on any platform to manage various configuration settings of Office 365.\n\n\nWhile building solutions for Office 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it's inconvenient for them to have to use a Windows virtual machine to configure their tenants. The Office 365 CLI allows them to configure their tenants no matter which operating system they use.", 
            "title": "Why this CLI"
        }, 
        {
            "location": "/about/why-cli/#why-this-cli", 
            "text": "Office 365 CLI is a cross-platform CLI that allows users on any platform to manage various configuration settings of Office 365.  While building solutions for Office 365 expands beyond the Windows operating system, managing many of the platform settings is possible only through PowerShell on Windows. As more and more users work on non-Windows machines, it's inconvenient for them to have to use a Windows virtual machine to configure their tenants. The Office 365 CLI allows them to configure their tenants no matter which operating system they use.", 
            "title": "Why this CLI"
        }, 
        {
            "location": "/about/comparison-powershell/", 
            "text": "Comparison to SharePoint PowerShell\n\n\nFollowing table lists the different Office 365 CLI commands and how they map to SharePoint Online Management Shell and PnP PowerShell cmdlets.\n\n\n\n\n\n\n\n\nPowerShell Cmdlet\n\n\nSource\n\n\nOffice 365 CLI command\n\n\n\n\n\n\n\n\n\n\nAdd-SPOGeoAdministrator\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nAdd-SPOSiteCollectionAppCatalog\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo site appcatalog add\n\n\n\n\n\n\nAdd-SPOSiteDesign\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nAdd-SPOSiteScript\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nAdd-SPOTenantCdnOrigin\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo cdn origin add\n\n\n\n\n\n\nAdd-SPOTheme\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nAdd-SPOUser\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nApprove-SPOTenantServicePrincipalPermissionRequest\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo serviceprincipal permissionrequest approve\n\n\n\n\n\n\nConnect-SPOHubSite\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nConnect-SPOService\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo connect\n\n\n\n\n\n\nConvertTo-SPOMigrationEncryptedPackage\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nConvertTo-SPOMigrationTargetedPackage\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nDeny-SPOTenantServicePrincipalPermissionRequest\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo serviceprincipal permissionrequest deny\n\n\n\n\n\n\nDisable-SPOTenantServicePrincipal\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo serviceprincipal set\n\n\n\n\n\n\nDisconnect-SPOHubSite\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nDisconnect-SPOService\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo disconnect\n\n\n\n\n\n\nEnable-SPOTenantServicePrincipal\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo serviceprincipal set\n\n\n\n\n\n\nGet-SPOAppErrors\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOAppInfo\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOBrowserIdleSignOut\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOCrossGeoMovedUsers\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOCrossGeoMoveReport\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOCrossGeoUsers\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPODataEncryptionPolicy\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPODeletedSite\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOExternalUser\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo externaluser list\n\n\n\n\n\n\nGet-SPOGeoAdministrator\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOGeoMoveCompatibilityStatus\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOGeoMoveCrossCompatibilityStatus\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOGeoStorageQuota\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOHideDefaultThemes\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOHubSite\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOMigrationJobProgress\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOMigrationJobStatus\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOMultiGeoExperience\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOPublicCdnOrigins\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOSite\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOSiteContentMoveState\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOSiteDataEncryptionPolicy\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOSiteDesign\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOSiteDesignRights\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOSiteGroup\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOSiteScript\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOStorageEntity\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo storageentity get\n, \nspo storageentity list\n\n\n\n\n\n\nGet-SPOTenant\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOTenantCdnEnabled\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo cdn get\n\n\n\n\n\n\nGet-SPOTenantCdnOrigins\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo cdn origin list\n\n\n\n\n\n\nGet-SPOTenantCdnPolicies\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo cdn policy list\n\n\n\n\n\n\nGet-SPOTenantContentTypeReplicationParameters\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOTenantLogEntry\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOTenantLogLastAvailableTimeInUtc\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOTenantServicePrincipalPermissionGrants\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo serviceprincipal grant list\n\n\n\n\n\n\nGet-SPOTenantServicePrincipalPermissionRequests\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo serviceprincipal permissionrequest list\n\n\n\n\n\n\nGet-SPOTenantSyncClientRestriction\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOTenantTaxonomyReplicationParameters\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOTheme\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOUser\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOUserAndContentMoveState\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOUserOneDriveLocation\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGet-SPOWebTemplate\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGrant-SPOHubSiteRights\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nGrant-SPOSiteDesignRights\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nInvoke-SPOMigrationEncryptUploadSubmit\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nNew-SPOMigrationEncryptionParameters\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nNew-SPOMigrationPackage\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nNew-SPOPublicCdnOrigin\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nNew-SPOSdnProvider\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nNew-SPOSite\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo site add\n\n\n\n\n\n\nNew-SPOSiteGroup\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRegister-SPODataEncryptionPolicy\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRegister-SPOHubSite\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRemove-SPODeletedSite\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRemove-SPOExternalUser\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRemove-SPOGeoAdministrator\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRemove-SPOMigrationJob\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRemove-SPOPublicCdnOrigin\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRemove-SPOSdnProvider\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRemove-SPOSite\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRemove-SPOSiteCollectionAppCatalog\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo site appcatalog remove\n\n\n\n\n\n\nRemove-SPOSiteCollectionAppCatalogById\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRemove-SPOSiteDesign\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRemove-SPOSiteGroup\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRemove-SPOSiteScript\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRemove-SPOStorageEntity\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo storageentity remove\n\n\n\n\n\n\nRemove-SPOTenantCdnOrigin\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo cdn origin remove\n\n\n\n\n\n\nRemove-SPOTenantSyncClientRestriction\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRemove-SPOTheme\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRemove-SPOUser\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRepair-SPOSite\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRequest-SPOPersonalSite\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRequest-SPOUpgradeEvaluationSite\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRestore-SPODataEncryptionPolicy\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRestore-SPODeletedSite\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRevoke-SPOHubSiteRights\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRevoke-SPOSiteDesignRights\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nRevoke-SPOTenantServicePrincipalPermission\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo serviceprincipal grant revoke\n\n\n\n\n\n\nRevoke-SPOUserSession\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nSet-SPOBrowserIdleSignOut\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nSet-SPOGeoStorageQuota\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nSet-SPOHideDefaultThemes\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nSet-SPOHubSite\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nSet-SPOMigrationPackageAzureSource\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nSet-SPOMultiGeoExperience\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nSet-SPOSite\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nSet-SPOSiteGroup\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nSet-SPOSiteOffice365Group\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nSet-SPOStorageEntity\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo storageentity set\n\n\n\n\n\n\nSet-SPOTenant\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nSet-SPOTenantCdnEnabled\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo cdn set\n\n\n\n\n\n\nSet-SPOTenantCdnPolicy\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\nspo cdn policy set\n\n\n\n\n\n\nSet-SPOTenantContentTypeReplicationParameters\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nSet-SPOTenantSyncClientRestriction\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nSet-SPOTenantTaxonomyReplicationParameters\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nSet-SPOUser\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nStart-SPOSiteContentMove\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nStart-SPOUserAndContentMove\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nStop-SPOUserAndContentMove\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nSubmit-SPOMigrationJob\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nTest-SPOSite\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nUnregister-SPOHubSite\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nUpdate-SPODataEncryptionPolicy\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nUpgrade-SPOSite\n\n\nMicrosoft.Online.SharePoint.PowerShell\n\n\n\n\n\n\n\n\nAdd-PnPApp\n\n\nSharePointPnPPowerShellOnline\n\n\nspo app add\n\n\n\n\n\n\nAdd-PnPClientSidePage\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPClientSidePageSection\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPClientSideText\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPClientSideWebPart\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPContentType\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPContentTypeToDocumentSet\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPContentTypeToList\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPCustomAction\n\n\nSharePointPnPPowerShellOnline\n\n\nspo customaction add\n\n\n\n\n\n\nAdd-PnPDataRowsToProvisioningTemplate\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPDocumentSet\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPEventReceiver\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPField\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPFieldFromXml\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPFieldToContentType\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPFile\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPFileToProvisioningTemplate\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPFolder\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPHtmlPublishingPageLayout\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPIndexedProperty\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPJavaScriptBlock\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPJavaScriptLink\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPListFoldersToProvisioningTemplate\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPListItem\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPMasterPage\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPNavigationNode\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPOffice365GroupToSite\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPPublishingImageRendition\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPPublishingPage\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPPublishingPageLayout\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPSiteClassification\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPSiteCollectionAdmin\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPSiteDesign\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPSiteScript\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPTaxonomyField\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPUserToGroup\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPView\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPWebhookSubscription\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPWebPartToWebPartPage\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPWebPartToWikiPage\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPWikiPage\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPWorkflowDefinition\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nAdd-PnPWorkflowSubscription\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nApply-PnPProvisioningTemplate\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nClear-PnPListItemAsRecord\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nClear-PnPRecycleBinItem\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nClear-PnPTenantRecycleBinItem\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nConnect-PnPMicrosoftGraph\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nConnect-PnPOnline\n\n\nSharePointPnPPowerShellOnline\n\n\nspo connect\n\n\n\n\n\n\nConvert-PnPFolderToProvisioningTemplate\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nConvert-PnPProvisioningTemplate\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nCopy-PnPFile\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nCopy-PnPItemProxy\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nDisable-PnPFeature\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nDisable-PnPInPlaceRecordsManagementForSite\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nDisable-PnPResponsiveUI\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nDisable-PnPSiteClassification\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nDisconnect-PnPOnline\n\n\nSharePointPnPPowerShellOnline\n\n\nspo disconnect\n\n\n\n\n\n\nEnable-PnPFeature\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nEnable-PnPInPlaceRecordsManagementForSite\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nEnable-PnPResponsiveUI\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nEnable-PnPSiteClassification\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nEnsure-PnPFolder\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nExecute-PnPQuery\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nExport-PnPTaxonomy\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nExport-PnPTermGroupToXml\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nFind-PnPFile\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPAccessToken\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPApp\n\n\nSharePointPnPPowerShellOnline\n\n\nspo app get\n, \nspo app list\n\n\n\n\n\n\nGet-PnPAppAuthAccessToken\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPAppInstance\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPAuditing\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPAuthenticationRealm\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPAvailableClientSideComponents\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPAzureADManifestKeyCredentials\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPClientSideComponent\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPClientSidePage\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPConnection\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPContentType\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPContentTypePublishingHubUrl\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPContext\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPCustomAction\n\n\nSharePointPnPPowerShellOnline\n\n\nspo customaction get\n, \nspo customaction list\n\n\n\n\n\n\nGet-PnPDefaultColumnValues\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPDocumentSetTemplate\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPEventReceiver\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPFeature\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPField\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPFile\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPFolder\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPFolderItem\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPGroup\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPGroupMembers\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPGroupPermissions\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPHealthScore\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPHomePage\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPIndexedPropertyKeys\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPJavaScriptLink\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPList\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPListItem\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPMasterPage\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPProperty\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPPropertyBag\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPProvisioningTemplate\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPProvisioningTemplateFromGallery\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPPublishingImageRendition\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPRecycleBinItem\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPRequestAccessEmails\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPSearchConfiguration\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPSite\n\n\nSharePointPnPPowerShellOnline\n\n\nspo site get\n, \nspo site list\n\n\n\n\n\n\nGet-PnPSiteClassification\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPSiteClosure\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPSiteCollectionAdmin\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPSiteCollectionTermStore\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPSiteDesign\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPSiteDesignRights\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPSitePolicy\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPSiteScript\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPSiteSearchQueryResults\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPStorageEntity\n\n\nSharePointPnPPowerShellOnline\n\n\nspo storageentity get\n, \nspo storageentity list\n\n\n\n\n\n\nGet-PnPStoredCredential\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPSubWebs\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPTaxonomyItem\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPTaxonomySession\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPTenantRecycleBinItem\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPTenantSite\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPTerm\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPTermGroup\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPTermSet\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPTheme\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPTimeZoneId\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPUnifiedGroup\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPUser\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPUserProfileProperty\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPView\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPWeb\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPWebhookSubscriptions\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPWebPart\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPWebPartProperty\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPWebPartXml\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPWebTemplates\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPWikiPageContent\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPWorkflowDefinition\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGet-PnPWorkflowSubscription\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nGrant-PnPSiteDesignRights\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nImport-PnPAppPackage\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nImport-PnPTaxonomy\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nImport-PnPTermGroupFromXml\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nImport-PnPTermSet\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nInstall-PnPApp\n\n\nSharePointPnPPowerShellOnline\n\n\nspo app install\n\n\n\n\n\n\nInstall-PnPSolution\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nInvoke-PnPWebAction\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nLoad-PnPProvisioningTemplate\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nMeasure-PnPList\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nMeasure-PnPResponseTime\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nMeasure-PnPWeb\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nMove-PnPClientSideComponent\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nMove-PnPFile\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nMove-PnPFolder\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nMove-PnPItemProxy\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nMove-PnPListItemToRecycleBin\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nMove-PnPRecycleBinItem\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nNew-PnPExtensbilityHandlerObject\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nNew-PnPGroup\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nNew-PnPList\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nNew-PnPPersonalSite\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nNew-PnPProvisioningTemplate\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nNew-PnPProvisioningTemplateFromFolder\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nNew-PnPSite\n\n\nSharePointPnPPowerShellOnline\n\n\nspo site add\n\n\n\n\n\n\nNew-PnPTenantSite\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nNew-PnPTerm\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nNew-PnPTermGroup\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nNew-PnPTermSet\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nNew-PnPUnifiedGroup\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nNew-PnPUser\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nNew-PnPWeb\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nPublish-PnPApp\n\n\nSharePointPnPPowerShellOnline\n\n\nspo app deploy\n\n\n\n\n\n\nRemove-PnPApp\n\n\nSharePointPnPPowerShellOnline\n\n\nspo app remove\n\n\n\n\n\n\nRemove-PnPClientSideComponent\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPClientSidePage\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPContentType\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPContentTypeFromDocumentSet\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPContentTypeFromList\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPCustomAction\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPEventReceiver\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPField\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPFieldFromContentType\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPFile\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPFileFromProvisioningTemplate\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPFolder\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPGroup\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPIndexedProperty\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPJavaScriptLink\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPList\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPListItem\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPNavigationNode\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPPropertyBagValue\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPPublishingImageRendition\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPSiteClassification\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPSiteCollectionAdmin\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPSiteDesign\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPSiteScript\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPStorageEntity\n\n\nSharePointPnPPowerShellOnline\n\n\nspo storageentity remove\n\n\n\n\n\n\nRemove-PnPTaxonomyItem\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPTenantSite\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPTermGroup\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPUnifiedGroup\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPUser\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPUserFromGroup\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPView\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPWeb\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPWebhookSubscription\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPWebPart\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPWikiPage\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPWorkflowDefinition\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRemove-PnPWorkflowSubscription\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRename-PnPFile\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRename-PnPFolder\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRequest-PnPReIndexList\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRequest-PnPReIndexWeb\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRestore-PnPRecycleBinItem\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRestore-PnPTenantRecycleBinItem\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nResume-PnPWorkflowInstance\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nRevoke-PnPSiteDesignRights\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSave-PnPProvisioningTemplate\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSend-PnPMail\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPAppSideLoading\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPAuditing\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPAvailablePageLayouts\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPClientSidePage\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPClientSideText\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPClientSideWebPart\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPContext\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPDefaultColumnValues\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPDefaultContentTypeToList\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPDefaultPageLayout\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPDocumentSetField\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPField\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPFileCheckedIn\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPFileCheckedOut\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPGroup\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPGroupPermissions\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPHomePage\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPIndexedProperties\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPInPlaceRecordsManagement\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPList\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPListItem\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPListItemAsRecord\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPListItemPermission\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPListPermission\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPMasterPage\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPMinimalDownloadStrategy\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPPropertyBagValue\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPProvisioningTemplateMetadata\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPRequestAccessEmails\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPSearchConfiguration\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPSite\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPSiteClosure\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPSitePolicy\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPStorageEntity\n\n\nSharePointPnPPowerShellOnline\n\n\nspo storageentity set\n\n\n\n\n\n\nSet-PnPTaxonomyFieldValue\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPTenantSite\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPTheme\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPTraceLog\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPUnifiedGroup\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPUserProfileProperty\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPView\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPWeb\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPWebhookSubscription\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPWebPartProperty\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPWebPermission\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSet-PnPWikiPageContent\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nStop-PnPWorkflowInstance\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nSubmit-PnPSearchQuery\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nTest-PnPListItemIsRecord\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nUninstall-PnPApp\n\n\nSharePointPnPPowerShellOnline\n\n\nspo app uninstall\n\n\n\n\n\n\nUninstall-PnPAppInstance\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nUninstall-PnPSolution\n\n\nSharePointPnPPowerShellOnline\n\n\n\n\n\n\n\n\nUnpublish-PnPApp\n\n\nSharePointPnPPowerShellOnline\n\n\nspo app retract\n\n\n\n\n\n\nUpdate-PnPApp\n\n\nSharePointPnPPowerShellOnline\n\n\nspo app upgrade\n\n\n\n\n\n\nUpdate-PnPSiteClassification\n\n\nSharePointPnPPowerShellOnline", 
            "title": "Comparison to SharePoint PowerShell"
        }, 
        {
            "location": "/about/comparison-powershell/#comparison-to-sharepoint-powershell", 
            "text": "Following table lists the different Office 365 CLI commands and how they map to SharePoint Online Management Shell and PnP PowerShell cmdlets.     PowerShell Cmdlet  Source  Office 365 CLI command      Add-SPOGeoAdministrator  Microsoft.Online.SharePoint.PowerShell     Add-SPOSiteCollectionAppCatalog  Microsoft.Online.SharePoint.PowerShell  spo site appcatalog add    Add-SPOSiteDesign  Microsoft.Online.SharePoint.PowerShell     Add-SPOSiteScript  Microsoft.Online.SharePoint.PowerShell     Add-SPOTenantCdnOrigin  Microsoft.Online.SharePoint.PowerShell  spo cdn origin add    Add-SPOTheme  Microsoft.Online.SharePoint.PowerShell     Add-SPOUser  Microsoft.Online.SharePoint.PowerShell     Approve-SPOTenantServicePrincipalPermissionRequest  Microsoft.Online.SharePoint.PowerShell  spo serviceprincipal permissionrequest approve    Connect-SPOHubSite  Microsoft.Online.SharePoint.PowerShell     Connect-SPOService  Microsoft.Online.SharePoint.PowerShell  spo connect    ConvertTo-SPOMigrationEncryptedPackage  Microsoft.Online.SharePoint.PowerShell     ConvertTo-SPOMigrationTargetedPackage  Microsoft.Online.SharePoint.PowerShell     Deny-SPOTenantServicePrincipalPermissionRequest  Microsoft.Online.SharePoint.PowerShell  spo serviceprincipal permissionrequest deny    Disable-SPOTenantServicePrincipal  Microsoft.Online.SharePoint.PowerShell  spo serviceprincipal set    Disconnect-SPOHubSite  Microsoft.Online.SharePoint.PowerShell     Disconnect-SPOService  Microsoft.Online.SharePoint.PowerShell  spo disconnect    Enable-SPOTenantServicePrincipal  Microsoft.Online.SharePoint.PowerShell  spo serviceprincipal set    Get-SPOAppErrors  Microsoft.Online.SharePoint.PowerShell     Get-SPOAppInfo  Microsoft.Online.SharePoint.PowerShell     Get-SPOBrowserIdleSignOut  Microsoft.Online.SharePoint.PowerShell     Get-SPOCrossGeoMovedUsers  Microsoft.Online.SharePoint.PowerShell     Get-SPOCrossGeoMoveReport  Microsoft.Online.SharePoint.PowerShell     Get-SPOCrossGeoUsers  Microsoft.Online.SharePoint.PowerShell     Get-SPODataEncryptionPolicy  Microsoft.Online.SharePoint.PowerShell     Get-SPODeletedSite  Microsoft.Online.SharePoint.PowerShell     Get-SPOExternalUser  Microsoft.Online.SharePoint.PowerShell  spo externaluser list    Get-SPOGeoAdministrator  Microsoft.Online.SharePoint.PowerShell     Get-SPOGeoMoveCompatibilityStatus  Microsoft.Online.SharePoint.PowerShell     Get-SPOGeoMoveCrossCompatibilityStatus  Microsoft.Online.SharePoint.PowerShell     Get-SPOGeoStorageQuota  Microsoft.Online.SharePoint.PowerShell     Get-SPOHideDefaultThemes  Microsoft.Online.SharePoint.PowerShell     Get-SPOHubSite  Microsoft.Online.SharePoint.PowerShell     Get-SPOMigrationJobProgress  Microsoft.Online.SharePoint.PowerShell     Get-SPOMigrationJobStatus  Microsoft.Online.SharePoint.PowerShell     Get-SPOMultiGeoExperience  Microsoft.Online.SharePoint.PowerShell     Get-SPOPublicCdnOrigins  Microsoft.Online.SharePoint.PowerShell     Get-SPOSite  Microsoft.Online.SharePoint.PowerShell     Get-SPOSiteContentMoveState  Microsoft.Online.SharePoint.PowerShell     Get-SPOSiteDataEncryptionPolicy  Microsoft.Online.SharePoint.PowerShell     Get-SPOSiteDesign  Microsoft.Online.SharePoint.PowerShell     Get-SPOSiteDesignRights  Microsoft.Online.SharePoint.PowerShell     Get-SPOSiteGroup  Microsoft.Online.SharePoint.PowerShell     Get-SPOSiteScript  Microsoft.Online.SharePoint.PowerShell     Get-SPOStorageEntity  Microsoft.Online.SharePoint.PowerShell  spo storageentity get ,  spo storageentity list    Get-SPOTenant  Microsoft.Online.SharePoint.PowerShell     Get-SPOTenantCdnEnabled  Microsoft.Online.SharePoint.PowerShell  spo cdn get    Get-SPOTenantCdnOrigins  Microsoft.Online.SharePoint.PowerShell  spo cdn origin list    Get-SPOTenantCdnPolicies  Microsoft.Online.SharePoint.PowerShell  spo cdn policy list    Get-SPOTenantContentTypeReplicationParameters  Microsoft.Online.SharePoint.PowerShell     Get-SPOTenantLogEntry  Microsoft.Online.SharePoint.PowerShell     Get-SPOTenantLogLastAvailableTimeInUtc  Microsoft.Online.SharePoint.PowerShell     Get-SPOTenantServicePrincipalPermissionGrants  Microsoft.Online.SharePoint.PowerShell  spo serviceprincipal grant list    Get-SPOTenantServicePrincipalPermissionRequests  Microsoft.Online.SharePoint.PowerShell  spo serviceprincipal permissionrequest list    Get-SPOTenantSyncClientRestriction  Microsoft.Online.SharePoint.PowerShell     Get-SPOTenantTaxonomyReplicationParameters  Microsoft.Online.SharePoint.PowerShell     Get-SPOTheme  Microsoft.Online.SharePoint.PowerShell     Get-SPOUser  Microsoft.Online.SharePoint.PowerShell     Get-SPOUserAndContentMoveState  Microsoft.Online.SharePoint.PowerShell     Get-SPOUserOneDriveLocation  Microsoft.Online.SharePoint.PowerShell     Get-SPOWebTemplate  Microsoft.Online.SharePoint.PowerShell     Grant-SPOHubSiteRights  Microsoft.Online.SharePoint.PowerShell     Grant-SPOSiteDesignRights  Microsoft.Online.SharePoint.PowerShell     Invoke-SPOMigrationEncryptUploadSubmit  Microsoft.Online.SharePoint.PowerShell     New-SPOMigrationEncryptionParameters  Microsoft.Online.SharePoint.PowerShell     New-SPOMigrationPackage  Microsoft.Online.SharePoint.PowerShell     New-SPOPublicCdnOrigin  Microsoft.Online.SharePoint.PowerShell     New-SPOSdnProvider  Microsoft.Online.SharePoint.PowerShell     New-SPOSite  Microsoft.Online.SharePoint.PowerShell  spo site add    New-SPOSiteGroup  Microsoft.Online.SharePoint.PowerShell     Register-SPODataEncryptionPolicy  Microsoft.Online.SharePoint.PowerShell     Register-SPOHubSite  Microsoft.Online.SharePoint.PowerShell     Remove-SPODeletedSite  Microsoft.Online.SharePoint.PowerShell     Remove-SPOExternalUser  Microsoft.Online.SharePoint.PowerShell     Remove-SPOGeoAdministrator  Microsoft.Online.SharePoint.PowerShell     Remove-SPOMigrationJob  Microsoft.Online.SharePoint.PowerShell     Remove-SPOPublicCdnOrigin  Microsoft.Online.SharePoint.PowerShell     Remove-SPOSdnProvider  Microsoft.Online.SharePoint.PowerShell     Remove-SPOSite  Microsoft.Online.SharePoint.PowerShell     Remove-SPOSiteCollectionAppCatalog  Microsoft.Online.SharePoint.PowerShell  spo site appcatalog remove    Remove-SPOSiteCollectionAppCatalogById  Microsoft.Online.SharePoint.PowerShell     Remove-SPOSiteDesign  Microsoft.Online.SharePoint.PowerShell     Remove-SPOSiteGroup  Microsoft.Online.SharePoint.PowerShell     Remove-SPOSiteScript  Microsoft.Online.SharePoint.PowerShell     Remove-SPOStorageEntity  Microsoft.Online.SharePoint.PowerShell  spo storageentity remove    Remove-SPOTenantCdnOrigin  Microsoft.Online.SharePoint.PowerShell  spo cdn origin remove    Remove-SPOTenantSyncClientRestriction  Microsoft.Online.SharePoint.PowerShell     Remove-SPOTheme  Microsoft.Online.SharePoint.PowerShell     Remove-SPOUser  Microsoft.Online.SharePoint.PowerShell     Repair-SPOSite  Microsoft.Online.SharePoint.PowerShell     Request-SPOPersonalSite  Microsoft.Online.SharePoint.PowerShell     Request-SPOUpgradeEvaluationSite  Microsoft.Online.SharePoint.PowerShell     Restore-SPODataEncryptionPolicy  Microsoft.Online.SharePoint.PowerShell     Restore-SPODeletedSite  Microsoft.Online.SharePoint.PowerShell     Revoke-SPOHubSiteRights  Microsoft.Online.SharePoint.PowerShell     Revoke-SPOSiteDesignRights  Microsoft.Online.SharePoint.PowerShell     Revoke-SPOTenantServicePrincipalPermission  Microsoft.Online.SharePoint.PowerShell  spo serviceprincipal grant revoke    Revoke-SPOUserSession  Microsoft.Online.SharePoint.PowerShell     Set-SPOBrowserIdleSignOut  Microsoft.Online.SharePoint.PowerShell     Set-SPOGeoStorageQuota  Microsoft.Online.SharePoint.PowerShell     Set-SPOHideDefaultThemes  Microsoft.Online.SharePoint.PowerShell     Set-SPOHubSite  Microsoft.Online.SharePoint.PowerShell     Set-SPOMigrationPackageAzureSource  Microsoft.Online.SharePoint.PowerShell     Set-SPOMultiGeoExperience  Microsoft.Online.SharePoint.PowerShell     Set-SPOSite  Microsoft.Online.SharePoint.PowerShell     Set-SPOSiteGroup  Microsoft.Online.SharePoint.PowerShell     Set-SPOSiteOffice365Group  Microsoft.Online.SharePoint.PowerShell     Set-SPOStorageEntity  Microsoft.Online.SharePoint.PowerShell  spo storageentity set    Set-SPOTenant  Microsoft.Online.SharePoint.PowerShell     Set-SPOTenantCdnEnabled  Microsoft.Online.SharePoint.PowerShell  spo cdn set    Set-SPOTenantCdnPolicy  Microsoft.Online.SharePoint.PowerShell  spo cdn policy set    Set-SPOTenantContentTypeReplicationParameters  Microsoft.Online.SharePoint.PowerShell     Set-SPOTenantSyncClientRestriction  Microsoft.Online.SharePoint.PowerShell     Set-SPOTenantTaxonomyReplicationParameters  Microsoft.Online.SharePoint.PowerShell     Set-SPOUser  Microsoft.Online.SharePoint.PowerShell     Start-SPOSiteContentMove  Microsoft.Online.SharePoint.PowerShell     Start-SPOUserAndContentMove  Microsoft.Online.SharePoint.PowerShell     Stop-SPOUserAndContentMove  Microsoft.Online.SharePoint.PowerShell     Submit-SPOMigrationJob  Microsoft.Online.SharePoint.PowerShell     Test-SPOSite  Microsoft.Online.SharePoint.PowerShell     Unregister-SPOHubSite  Microsoft.Online.SharePoint.PowerShell     Update-SPODataEncryptionPolicy  Microsoft.Online.SharePoint.PowerShell     Upgrade-SPOSite  Microsoft.Online.SharePoint.PowerShell     Add-PnPApp  SharePointPnPPowerShellOnline  spo app add    Add-PnPClientSidePage  SharePointPnPPowerShellOnline     Add-PnPClientSidePageSection  SharePointPnPPowerShellOnline     Add-PnPClientSideText  SharePointPnPPowerShellOnline     Add-PnPClientSideWebPart  SharePointPnPPowerShellOnline     Add-PnPContentType  SharePointPnPPowerShellOnline     Add-PnPContentTypeToDocumentSet  SharePointPnPPowerShellOnline     Add-PnPContentTypeToList  SharePointPnPPowerShellOnline     Add-PnPCustomAction  SharePointPnPPowerShellOnline  spo customaction add    Add-PnPDataRowsToProvisioningTemplate  SharePointPnPPowerShellOnline     Add-PnPDocumentSet  SharePointPnPPowerShellOnline     Add-PnPEventReceiver  SharePointPnPPowerShellOnline     Add-PnPField  SharePointPnPPowerShellOnline     Add-PnPFieldFromXml  SharePointPnPPowerShellOnline     Add-PnPFieldToContentType  SharePointPnPPowerShellOnline     Add-PnPFile  SharePointPnPPowerShellOnline     Add-PnPFileToProvisioningTemplate  SharePointPnPPowerShellOnline     Add-PnPFolder  SharePointPnPPowerShellOnline     Add-PnPHtmlPublishingPageLayout  SharePointPnPPowerShellOnline     Add-PnPIndexedProperty  SharePointPnPPowerShellOnline     Add-PnPJavaScriptBlock  SharePointPnPPowerShellOnline     Add-PnPJavaScriptLink  SharePointPnPPowerShellOnline     Add-PnPListFoldersToProvisioningTemplate  SharePointPnPPowerShellOnline     Add-PnPListItem  SharePointPnPPowerShellOnline     Add-PnPMasterPage  SharePointPnPPowerShellOnline     Add-PnPNavigationNode  SharePointPnPPowerShellOnline     Add-PnPOffice365GroupToSite  SharePointPnPPowerShellOnline     Add-PnPPublishingImageRendition  SharePointPnPPowerShellOnline     Add-PnPPublishingPage  SharePointPnPPowerShellOnline     Add-PnPPublishingPageLayout  SharePointPnPPowerShellOnline     Add-PnPSiteClassification  SharePointPnPPowerShellOnline     Add-PnPSiteCollectionAdmin  SharePointPnPPowerShellOnline     Add-PnPSiteDesign  SharePointPnPPowerShellOnline     Add-PnPSiteScript  SharePointPnPPowerShellOnline     Add-PnPTaxonomyField  SharePointPnPPowerShellOnline     Add-PnPUserToGroup  SharePointPnPPowerShellOnline     Add-PnPView  SharePointPnPPowerShellOnline     Add-PnPWebhookSubscription  SharePointPnPPowerShellOnline     Add-PnPWebPartToWebPartPage  SharePointPnPPowerShellOnline     Add-PnPWebPartToWikiPage  SharePointPnPPowerShellOnline     Add-PnPWikiPage  SharePointPnPPowerShellOnline     Add-PnPWorkflowDefinition  SharePointPnPPowerShellOnline     Add-PnPWorkflowSubscription  SharePointPnPPowerShellOnline     Apply-PnPProvisioningTemplate  SharePointPnPPowerShellOnline     Clear-PnPListItemAsRecord  SharePointPnPPowerShellOnline     Clear-PnPRecycleBinItem  SharePointPnPPowerShellOnline     Clear-PnPTenantRecycleBinItem  SharePointPnPPowerShellOnline     Connect-PnPMicrosoftGraph  SharePointPnPPowerShellOnline     Connect-PnPOnline  SharePointPnPPowerShellOnline  spo connect    Convert-PnPFolderToProvisioningTemplate  SharePointPnPPowerShellOnline     Convert-PnPProvisioningTemplate  SharePointPnPPowerShellOnline     Copy-PnPFile  SharePointPnPPowerShellOnline     Copy-PnPItemProxy  SharePointPnPPowerShellOnline     Disable-PnPFeature  SharePointPnPPowerShellOnline     Disable-PnPInPlaceRecordsManagementForSite  SharePointPnPPowerShellOnline     Disable-PnPResponsiveUI  SharePointPnPPowerShellOnline     Disable-PnPSiteClassification  SharePointPnPPowerShellOnline     Disconnect-PnPOnline  SharePointPnPPowerShellOnline  spo disconnect    Enable-PnPFeature  SharePointPnPPowerShellOnline     Enable-PnPInPlaceRecordsManagementForSite  SharePointPnPPowerShellOnline     Enable-PnPResponsiveUI  SharePointPnPPowerShellOnline     Enable-PnPSiteClassification  SharePointPnPPowerShellOnline     Ensure-PnPFolder  SharePointPnPPowerShellOnline     Execute-PnPQuery  SharePointPnPPowerShellOnline     Export-PnPTaxonomy  SharePointPnPPowerShellOnline     Export-PnPTermGroupToXml  SharePointPnPPowerShellOnline     Find-PnPFile  SharePointPnPPowerShellOnline     Get-PnPAccessToken  SharePointPnPPowerShellOnline     Get-PnPApp  SharePointPnPPowerShellOnline  spo app get ,  spo app list    Get-PnPAppAuthAccessToken  SharePointPnPPowerShellOnline     Get-PnPAppInstance  SharePointPnPPowerShellOnline     Get-PnPAuditing  SharePointPnPPowerShellOnline     Get-PnPAuthenticationRealm  SharePointPnPPowerShellOnline     Get-PnPAvailableClientSideComponents  SharePointPnPPowerShellOnline     Get-PnPAzureADManifestKeyCredentials  SharePointPnPPowerShellOnline     Get-PnPClientSideComponent  SharePointPnPPowerShellOnline     Get-PnPClientSidePage  SharePointPnPPowerShellOnline     Get-PnPConnection  SharePointPnPPowerShellOnline     Get-PnPContentType  SharePointPnPPowerShellOnline     Get-PnPContentTypePublishingHubUrl  SharePointPnPPowerShellOnline     Get-PnPContext  SharePointPnPPowerShellOnline     Get-PnPCustomAction  SharePointPnPPowerShellOnline  spo customaction get ,  spo customaction list    Get-PnPDefaultColumnValues  SharePointPnPPowerShellOnline     Get-PnPDocumentSetTemplate  SharePointPnPPowerShellOnline     Get-PnPEventReceiver  SharePointPnPPowerShellOnline     Get-PnPFeature  SharePointPnPPowerShellOnline     Get-PnPField  SharePointPnPPowerShellOnline     Get-PnPFile  SharePointPnPPowerShellOnline     Get-PnPFolder  SharePointPnPPowerShellOnline     Get-PnPFolderItem  SharePointPnPPowerShellOnline     Get-PnPGroup  SharePointPnPPowerShellOnline     Get-PnPGroupMembers  SharePointPnPPowerShellOnline     Get-PnPGroupPermissions  SharePointPnPPowerShellOnline     Get-PnPHealthScore  SharePointPnPPowerShellOnline     Get-PnPHomePage  SharePointPnPPowerShellOnline     Get-PnPIndexedPropertyKeys  SharePointPnPPowerShellOnline     Get-PnPJavaScriptLink  SharePointPnPPowerShellOnline     Get-PnPList  SharePointPnPPowerShellOnline     Get-PnPListItem  SharePointPnPPowerShellOnline     Get-PnPMasterPage  SharePointPnPPowerShellOnline     Get-PnPProperty  SharePointPnPPowerShellOnline     Get-PnPPropertyBag  SharePointPnPPowerShellOnline     Get-PnPProvisioningTemplate  SharePointPnPPowerShellOnline     Get-PnPProvisioningTemplateFromGallery  SharePointPnPPowerShellOnline     Get-PnPPublishingImageRendition  SharePointPnPPowerShellOnline     Get-PnPRecycleBinItem  SharePointPnPPowerShellOnline     Get-PnPRequestAccessEmails  SharePointPnPPowerShellOnline     Get-PnPSearchConfiguration  SharePointPnPPowerShellOnline     Get-PnPSite  SharePointPnPPowerShellOnline  spo site get ,  spo site list    Get-PnPSiteClassification  SharePointPnPPowerShellOnline     Get-PnPSiteClosure  SharePointPnPPowerShellOnline     Get-PnPSiteCollectionAdmin  SharePointPnPPowerShellOnline     Get-PnPSiteCollectionTermStore  SharePointPnPPowerShellOnline     Get-PnPSiteDesign  SharePointPnPPowerShellOnline     Get-PnPSiteDesignRights  SharePointPnPPowerShellOnline     Get-PnPSitePolicy  SharePointPnPPowerShellOnline     Get-PnPSiteScript  SharePointPnPPowerShellOnline     Get-PnPSiteSearchQueryResults  SharePointPnPPowerShellOnline     Get-PnPStorageEntity  SharePointPnPPowerShellOnline  spo storageentity get ,  spo storageentity list    Get-PnPStoredCredential  SharePointPnPPowerShellOnline     Get-PnPSubWebs  SharePointPnPPowerShellOnline     Get-PnPTaxonomyItem  SharePointPnPPowerShellOnline     Get-PnPTaxonomySession  SharePointPnPPowerShellOnline     Get-PnPTenantRecycleBinItem  SharePointPnPPowerShellOnline     Get-PnPTenantSite  SharePointPnPPowerShellOnline     Get-PnPTerm  SharePointPnPPowerShellOnline     Get-PnPTermGroup  SharePointPnPPowerShellOnline     Get-PnPTermSet  SharePointPnPPowerShellOnline     Get-PnPTheme  SharePointPnPPowerShellOnline     Get-PnPTimeZoneId  SharePointPnPPowerShellOnline     Get-PnPUnifiedGroup  SharePointPnPPowerShellOnline     Get-PnPUser  SharePointPnPPowerShellOnline     Get-PnPUserProfileProperty  SharePointPnPPowerShellOnline     Get-PnPView  SharePointPnPPowerShellOnline     Get-PnPWeb  SharePointPnPPowerShellOnline     Get-PnPWebhookSubscriptions  SharePointPnPPowerShellOnline     Get-PnPWebPart  SharePointPnPPowerShellOnline     Get-PnPWebPartProperty  SharePointPnPPowerShellOnline     Get-PnPWebPartXml  SharePointPnPPowerShellOnline     Get-PnPWebTemplates  SharePointPnPPowerShellOnline     Get-PnPWikiPageContent  SharePointPnPPowerShellOnline     Get-PnPWorkflowDefinition  SharePointPnPPowerShellOnline     Get-PnPWorkflowSubscription  SharePointPnPPowerShellOnline     Grant-PnPSiteDesignRights  SharePointPnPPowerShellOnline     Import-PnPAppPackage  SharePointPnPPowerShellOnline     Import-PnPTaxonomy  SharePointPnPPowerShellOnline     Import-PnPTermGroupFromXml  SharePointPnPPowerShellOnline     Import-PnPTermSet  SharePointPnPPowerShellOnline     Install-PnPApp  SharePointPnPPowerShellOnline  spo app install    Install-PnPSolution  SharePointPnPPowerShellOnline     Invoke-PnPWebAction  SharePointPnPPowerShellOnline     Load-PnPProvisioningTemplate  SharePointPnPPowerShellOnline     Measure-PnPList  SharePointPnPPowerShellOnline     Measure-PnPResponseTime  SharePointPnPPowerShellOnline     Measure-PnPWeb  SharePointPnPPowerShellOnline     Move-PnPClientSideComponent  SharePointPnPPowerShellOnline     Move-PnPFile  SharePointPnPPowerShellOnline     Move-PnPFolder  SharePointPnPPowerShellOnline     Move-PnPItemProxy  SharePointPnPPowerShellOnline     Move-PnPListItemToRecycleBin  SharePointPnPPowerShellOnline     Move-PnPRecycleBinItem  SharePointPnPPowerShellOnline     New-PnPExtensbilityHandlerObject  SharePointPnPPowerShellOnline     New-PnPGroup  SharePointPnPPowerShellOnline     New-PnPList  SharePointPnPPowerShellOnline     New-PnPPersonalSite  SharePointPnPPowerShellOnline     New-PnPProvisioningTemplate  SharePointPnPPowerShellOnline     New-PnPProvisioningTemplateFromFolder  SharePointPnPPowerShellOnline     New-PnPSite  SharePointPnPPowerShellOnline  spo site add    New-PnPTenantSite  SharePointPnPPowerShellOnline     New-PnPTerm  SharePointPnPPowerShellOnline     New-PnPTermGroup  SharePointPnPPowerShellOnline     New-PnPTermSet  SharePointPnPPowerShellOnline     New-PnPUnifiedGroup  SharePointPnPPowerShellOnline     New-PnPUser  SharePointPnPPowerShellOnline     New-PnPWeb  SharePointPnPPowerShellOnline     Publish-PnPApp  SharePointPnPPowerShellOnline  spo app deploy    Remove-PnPApp  SharePointPnPPowerShellOnline  spo app remove    Remove-PnPClientSideComponent  SharePointPnPPowerShellOnline     Remove-PnPClientSidePage  SharePointPnPPowerShellOnline     Remove-PnPContentType  SharePointPnPPowerShellOnline     Remove-PnPContentTypeFromDocumentSet  SharePointPnPPowerShellOnline     Remove-PnPContentTypeFromList  SharePointPnPPowerShellOnline     Remove-PnPCustomAction  SharePointPnPPowerShellOnline     Remove-PnPEventReceiver  SharePointPnPPowerShellOnline     Remove-PnPField  SharePointPnPPowerShellOnline     Remove-PnPFieldFromContentType  SharePointPnPPowerShellOnline     Remove-PnPFile  SharePointPnPPowerShellOnline     Remove-PnPFileFromProvisioningTemplate  SharePointPnPPowerShellOnline     Remove-PnPFolder  SharePointPnPPowerShellOnline     Remove-PnPGroup  SharePointPnPPowerShellOnline     Remove-PnPIndexedProperty  SharePointPnPPowerShellOnline     Remove-PnPJavaScriptLink  SharePointPnPPowerShellOnline     Remove-PnPList  SharePointPnPPowerShellOnline     Remove-PnPListItem  SharePointPnPPowerShellOnline     Remove-PnPNavigationNode  SharePointPnPPowerShellOnline     Remove-PnPPropertyBagValue  SharePointPnPPowerShellOnline     Remove-PnPPublishingImageRendition  SharePointPnPPowerShellOnline     Remove-PnPSiteClassification  SharePointPnPPowerShellOnline     Remove-PnPSiteCollectionAdmin  SharePointPnPPowerShellOnline     Remove-PnPSiteDesign  SharePointPnPPowerShellOnline     Remove-PnPSiteScript  SharePointPnPPowerShellOnline     Remove-PnPStorageEntity  SharePointPnPPowerShellOnline  spo storageentity remove    Remove-PnPTaxonomyItem  SharePointPnPPowerShellOnline     Remove-PnPTenantSite  SharePointPnPPowerShellOnline     Remove-PnPTermGroup  SharePointPnPPowerShellOnline     Remove-PnPUnifiedGroup  SharePointPnPPowerShellOnline     Remove-PnPUser  SharePointPnPPowerShellOnline     Remove-PnPUserFromGroup  SharePointPnPPowerShellOnline     Remove-PnPView  SharePointPnPPowerShellOnline     Remove-PnPWeb  SharePointPnPPowerShellOnline     Remove-PnPWebhookSubscription  SharePointPnPPowerShellOnline     Remove-PnPWebPart  SharePointPnPPowerShellOnline     Remove-PnPWikiPage  SharePointPnPPowerShellOnline     Remove-PnPWorkflowDefinition  SharePointPnPPowerShellOnline     Remove-PnPWorkflowSubscription  SharePointPnPPowerShellOnline     Rename-PnPFile  SharePointPnPPowerShellOnline     Rename-PnPFolder  SharePointPnPPowerShellOnline     Request-PnPReIndexList  SharePointPnPPowerShellOnline     Request-PnPReIndexWeb  SharePointPnPPowerShellOnline     Restore-PnPRecycleBinItem  SharePointPnPPowerShellOnline     Restore-PnPTenantRecycleBinItem  SharePointPnPPowerShellOnline     Resume-PnPWorkflowInstance  SharePointPnPPowerShellOnline     Revoke-PnPSiteDesignRights  SharePointPnPPowerShellOnline     Save-PnPProvisioningTemplate  SharePointPnPPowerShellOnline     Send-PnPMail  SharePointPnPPowerShellOnline     Set-PnPAppSideLoading  SharePointPnPPowerShellOnline     Set-PnPAuditing  SharePointPnPPowerShellOnline     Set-PnPAvailablePageLayouts  SharePointPnPPowerShellOnline     Set-PnPClientSidePage  SharePointPnPPowerShellOnline     Set-PnPClientSideText  SharePointPnPPowerShellOnline     Set-PnPClientSideWebPart  SharePointPnPPowerShellOnline     Set-PnPContext  SharePointPnPPowerShellOnline     Set-PnPDefaultColumnValues  SharePointPnPPowerShellOnline     Set-PnPDefaultContentTypeToList  SharePointPnPPowerShellOnline     Set-PnPDefaultPageLayout  SharePointPnPPowerShellOnline     Set-PnPDocumentSetField  SharePointPnPPowerShellOnline     Set-PnPField  SharePointPnPPowerShellOnline     Set-PnPFileCheckedIn  SharePointPnPPowerShellOnline     Set-PnPFileCheckedOut  SharePointPnPPowerShellOnline     Set-PnPGroup  SharePointPnPPowerShellOnline     Set-PnPGroupPermissions  SharePointPnPPowerShellOnline     Set-PnPHomePage  SharePointPnPPowerShellOnline     Set-PnPIndexedProperties  SharePointPnPPowerShellOnline     Set-PnPInPlaceRecordsManagement  SharePointPnPPowerShellOnline     Set-PnPList  SharePointPnPPowerShellOnline     Set-PnPListItem  SharePointPnPPowerShellOnline     Set-PnPListItemAsRecord  SharePointPnPPowerShellOnline     Set-PnPListItemPermission  SharePointPnPPowerShellOnline     Set-PnPListPermission  SharePointPnPPowerShellOnline     Set-PnPMasterPage  SharePointPnPPowerShellOnline     Set-PnPMinimalDownloadStrategy  SharePointPnPPowerShellOnline     Set-PnPPropertyBagValue  SharePointPnPPowerShellOnline     Set-PnPProvisioningTemplateMetadata  SharePointPnPPowerShellOnline     Set-PnPRequestAccessEmails  SharePointPnPPowerShellOnline     Set-PnPSearchConfiguration  SharePointPnPPowerShellOnline     Set-PnPSite  SharePointPnPPowerShellOnline     Set-PnPSiteClosure  SharePointPnPPowerShellOnline     Set-PnPSitePolicy  SharePointPnPPowerShellOnline     Set-PnPStorageEntity  SharePointPnPPowerShellOnline  spo storageentity set    Set-PnPTaxonomyFieldValue  SharePointPnPPowerShellOnline     Set-PnPTenantSite  SharePointPnPPowerShellOnline     Set-PnPTheme  SharePointPnPPowerShellOnline     Set-PnPTraceLog  SharePointPnPPowerShellOnline     Set-PnPUnifiedGroup  SharePointPnPPowerShellOnline     Set-PnPUserProfileProperty  SharePointPnPPowerShellOnline     Set-PnPView  SharePointPnPPowerShellOnline     Set-PnPWeb  SharePointPnPPowerShellOnline     Set-PnPWebhookSubscription  SharePointPnPPowerShellOnline     Set-PnPWebPartProperty  SharePointPnPPowerShellOnline     Set-PnPWebPermission  SharePointPnPPowerShellOnline     Set-PnPWikiPageContent  SharePointPnPPowerShellOnline     Stop-PnPWorkflowInstance  SharePointPnPPowerShellOnline     Submit-PnPSearchQuery  SharePointPnPPowerShellOnline     Test-PnPListItemIsRecord  SharePointPnPPowerShellOnline     Uninstall-PnPApp  SharePointPnPPowerShellOnline  spo app uninstall    Uninstall-PnPAppInstance  SharePointPnPPowerShellOnline     Uninstall-PnPSolution  SharePointPnPPowerShellOnline     Unpublish-PnPApp  SharePointPnPPowerShellOnline  spo app retract    Update-PnPApp  SharePointPnPPowerShellOnline  spo app upgrade    Update-PnPSiteClassification  SharePointPnPPowerShellOnline", 
            "title": "Comparison to SharePoint PowerShell"
        }, 
        {
            "location": "/about/release-notes/", 
            "text": "Release notes\n\n\nv0.4.0\n\n\nBreaking changes\n\n\n\n\nrenamed the \nspo cdn origin set\n command to \nspo cdn origin add\n \n#184\n\n\n\n\nNew commands\n\n\nSharePoint Online:\n\n\n\n\nspo customaction list\n - lists user custom actions for site or site collection \n#19\n\n\nspo site get\n - gets information about the specific site collection \n#114\n\n\nspo site list\n - lists modern sites of the given type \n#115\n\n\nspo site add\n - creates new modern site \n#116\n\n\nspo app remove\n - removes the specified app from the tenant app catalog \n#9\n\n\nspo site appcatalog add\n - creates a site collection app catalog in the specified site \n#63\n\n\nspo site appcatalog remove\n - removes site collection scoped app catalog from site \n#64\n\n\nspo serviceprincipal permissionrequest list\n - lists pending permission requests \n#152\n\n\nspo serviceprincipal permissionrequest approve\n - approves the specified permission request \n#153\n\n\nspo serviceprincipal permissionrequest deny\n - denies the specified permission request \n#154\n\n\nspo serviceprincipal grant list\n - lists permissions granted to the service principal \n#155\n\n\nspo serviceprincipal grant revoke\n - revokes the specified set of permissions granted to the service principal \n#155\n\n\nspo serviceprincipal set\n - enable or disable the service principal \n#157\n\n\nspo customaction add\n - adds a user custom action for site or site collection \n#18\n\n\nspo externaluser list\n - lists external users in the tenant \n#27\n\n\n\n\nAzure Active Directory Graph:\n\n\n\n\naad connect\n - connects to the Azure Active Directory Graph \n#160\n\n\naad disconnect\n - disconnects from Azure Active Directory Graph \n#161\n\n\naad status\n - shows Azure Active Directory Graph connection status \n#162\n\n\naad sp get\n - gets information about the specific service principal \n#158\n\n\naad oauth2grant list\n - lists OAuth2 permission grants for the specified service principal \n#159\n\n\naad oauth2grant add\n - grant the specified service principal OAuth2 permissions to the specified resource \n#164\n\n\naad oauth2grant set\n - update OAuth2 permissions for the service principal \n#163\n\n\naad oauth2grant remove\n - remove specified service principal OAuth2 permissions \n#165\n\n\n\n\nChanges\n\n\n\n\nadded support for persisting connection \n#46\n\n\nfixed authentication bug in \nspo app install\n, \nspo app uninstall\n and \nspo app upgrade\n commands when connected to the tenant admin site \n#118\n\n\nfixed authentication bug in the \nspo customaction get\n command when connected to the tenant admin site \n#113\n\n\nfixed bug in rendering help for commands when using the \n--help\n option \n#104\n\n\nadded detailed output to the \nspo customaction get\n command \n#93\n\n\nimproved collecting telemetry \n#130\n, \n#131\n, \n#132\n, \n#133\n\n\nadded support for the \nskipFeatureDeployment\n flag to the \nspo app deploy\n command \n#134\n\n\nwrapped executing commands in \ntry..catch\n \n#109\n\n\nadded serializing objects in log \n#108\n\n\nadded support for autocomplete in Zsh, Bash and Fish and Clink (cmder) on Windows \n#141\n, \n#190\n\n\n\n\nv0.3.0\n\n\nNew commands\n\n\nSharePoint Online:\n\n\n\n\nspo customaction get\n - gets information about the specific user custom action \n#20\n\n\n\n\nChanges\n\n\n\n\nchanged command output to silent \n#47\n\n\nadded user-agent string to all requests \n#52\n\n\nrefactored \nspo cdn get\n and \nspo storageentity set\n to use the \ngetRequestDigest\n helper \n#78\n and \n#80\n\n\nadded common handler for rejected OData promises \n#59\n\n\nadded Google Analytics code to documentation \n#84\n\n\nadded support for formatting command output as JSON \n#48\n\n\n\n\nv0.2.0\n\n\nNew commands\n\n\nSharePoint Online:\n\n\n\n\nspo app add\n - add an app to the specified SharePoint Online app catalog \n#3\n\n\nspo app deploy\n - deploy the specified app in the tenant app catalog \n#7\n\n\nspo app get\n - get information about the specific app from the tenant app catalog \n#2\n\n\nspo app install\n - install an app from the tenant app catalog in the site \n#4\n\n\nspo app list\n - list apps from the tenant app catalog \n#1\n\n\nspo app retract\n - retract the specified app from the tenant app catalog \n#8\n\n\nspo app uninstall\n - uninstall an app from the site \n#5\n\n\nspo app upgrade\n - upgrade app in the specified site \n#6\n\n\n\n\nv0.1.1\n\n\nChanges\n\n\n\n\nFixed bug in resolving command paths on Windows\n\n\n\n\nv0.1.0\n\n\nInitial release.\n\n\nNew commands\n\n\nSharePoint Online:\n\n\n\n\nspo cdn get\n - get Office 365 CDN status\n\n\nspo cdn origin list\n - list Office 365 CDN origins\n\n\nspo cdn origin remove\n - remove Office 365 CDN origin\n\n\nspo cdn origin add\n - add Office 365 CDN origin\n\n\nspo cdn policy list\n - list Office 365 CDN policies\n\n\nspo cdn policy set\n - set Office 365 CDN policy\n\n\nspo cdn set\n - enable/disable Office 365 CDN\n\n\nspo connect\n - connect to a SharePoint Online site\n\n\nspo disconnect\n - disconnect from SharePoint\n\n\nspo status\n - show SharePoint Online connection status\n\n\nspo storageentity get\n - get value of a tenant property\n\n\nspo storageentity list\n - list all tenant properties\n\n\nspo storageentity remove\n - remove a tenant property\n\n\nspo storageentity set\n - set a tenant property", 
            "title": "Release notes"
        }, 
        {
            "location": "/about/release-notes/#release-notes", 
            "text": "", 
            "title": "Release notes"
        }, 
        {
            "location": "/about/release-notes/#v040", 
            "text": "", 
            "title": "v0.4.0"
        }, 
        {
            "location": "/about/release-notes/#breaking-changes", 
            "text": "renamed the  spo cdn origin set  command to  spo cdn origin add   #184", 
            "title": "Breaking changes"
        }, 
        {
            "location": "/about/release-notes/#new-commands", 
            "text": "SharePoint Online:   spo customaction list  - lists user custom actions for site or site collection  #19  spo site get  - gets information about the specific site collection  #114  spo site list  - lists modern sites of the given type  #115  spo site add  - creates new modern site  #116  spo app remove  - removes the specified app from the tenant app catalog  #9  spo site appcatalog add  - creates a site collection app catalog in the specified site  #63  spo site appcatalog remove  - removes site collection scoped app catalog from site  #64  spo serviceprincipal permissionrequest list  - lists pending permission requests  #152  spo serviceprincipal permissionrequest approve  - approves the specified permission request  #153  spo serviceprincipal permissionrequest deny  - denies the specified permission request  #154  spo serviceprincipal grant list  - lists permissions granted to the service principal  #155  spo serviceprincipal grant revoke  - revokes the specified set of permissions granted to the service principal  #155  spo serviceprincipal set  - enable or disable the service principal  #157  spo customaction add  - adds a user custom action for site or site collection  #18  spo externaluser list  - lists external users in the tenant  #27   Azure Active Directory Graph:   aad connect  - connects to the Azure Active Directory Graph  #160  aad disconnect  - disconnects from Azure Active Directory Graph  #161  aad status  - shows Azure Active Directory Graph connection status  #162  aad sp get  - gets information about the specific service principal  #158  aad oauth2grant list  - lists OAuth2 permission grants for the specified service principal  #159  aad oauth2grant add  - grant the specified service principal OAuth2 permissions to the specified resource  #164  aad oauth2grant set  - update OAuth2 permissions for the service principal  #163  aad oauth2grant remove  - remove specified service principal OAuth2 permissions  #165", 
            "title": "New commands"
        }, 
        {
            "location": "/about/release-notes/#changes", 
            "text": "added support for persisting connection  #46  fixed authentication bug in  spo app install ,  spo app uninstall  and  spo app upgrade  commands when connected to the tenant admin site  #118  fixed authentication bug in the  spo customaction get  command when connected to the tenant admin site  #113  fixed bug in rendering help for commands when using the  --help  option  #104  added detailed output to the  spo customaction get  command  #93  improved collecting telemetry  #130 ,  #131 ,  #132 ,  #133  added support for the  skipFeatureDeployment  flag to the  spo app deploy  command  #134  wrapped executing commands in  try..catch   #109  added serializing objects in log  #108  added support for autocomplete in Zsh, Bash and Fish and Clink (cmder) on Windows  #141 ,  #190", 
            "title": "Changes"
        }, 
        {
            "location": "/about/release-notes/#v030", 
            "text": "", 
            "title": "v0.3.0"
        }, 
        {
            "location": "/about/release-notes/#new-commands_1", 
            "text": "SharePoint Online:   spo customaction get  - gets information about the specific user custom action  #20", 
            "title": "New commands"
        }, 
        {
            "location": "/about/release-notes/#changes_1", 
            "text": "changed command output to silent  #47  added user-agent string to all requests  #52  refactored  spo cdn get  and  spo storageentity set  to use the  getRequestDigest  helper  #78  and  #80  added common handler for rejected OData promises  #59  added Google Analytics code to documentation  #84  added support for formatting command output as JSON  #48", 
            "title": "Changes"
        }, 
        {
            "location": "/about/release-notes/#v020", 
            "text": "", 
            "title": "v0.2.0"
        }, 
        {
            "location": "/about/release-notes/#new-commands_2", 
            "text": "SharePoint Online:   spo app add  - add an app to the specified SharePoint Online app catalog  #3  spo app deploy  - deploy the specified app in the tenant app catalog  #7  spo app get  - get information about the specific app from the tenant app catalog  #2  spo app install  - install an app from the tenant app catalog in the site  #4  spo app list  - list apps from the tenant app catalog  #1  spo app retract  - retract the specified app from the tenant app catalog  #8  spo app uninstall  - uninstall an app from the site  #5  spo app upgrade  - upgrade app in the specified site  #6", 
            "title": "New commands"
        }, 
        {
            "location": "/about/release-notes/#v011", 
            "text": "", 
            "title": "v0.1.1"
        }, 
        {
            "location": "/about/release-notes/#changes_2", 
            "text": "Fixed bug in resolving command paths on Windows", 
            "title": "Changes"
        }, 
        {
            "location": "/about/release-notes/#v010", 
            "text": "Initial release.", 
            "title": "v0.1.0"
        }, 
        {
            "location": "/about/release-notes/#new-commands_3", 
            "text": "SharePoint Online:   spo cdn get  - get Office 365 CDN status  spo cdn origin list  - list Office 365 CDN origins  spo cdn origin remove  - remove Office 365 CDN origin  spo cdn origin add  - add Office 365 CDN origin  spo cdn policy list  - list Office 365 CDN policies  spo cdn policy set  - set Office 365 CDN policy  spo cdn set  - enable/disable Office 365 CDN  spo connect  - connect to a SharePoint Online site  spo disconnect  - disconnect from SharePoint  spo status  - show SharePoint Online connection status  spo storageentity get  - get value of a tenant property  spo storageentity list  - list all tenant properties  spo storageentity remove  - remove a tenant property  spo storageentity set  - set a tenant property", 
            "title": "New commands"
        }, 
        {
            "location": "/about/license/", 
            "text": "License\n\n\nCopyright (c) Microsoft Corporation. All rights reserved.\n\n\nMIT License\n\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", 
            "title": "License"
        }, 
        {
            "location": "/about/license/#license", 
            "text": "Copyright (c) Microsoft Corporation. All rights reserved.  MIT License  Permission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:  The above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", 
            "title": "License"
        }
    ]
}